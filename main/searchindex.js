Search.setIndex({"docnames": ["distributed", "fx", "index", "overview", "reference/generated/tensordict.LazyStackedTensorDict", "reference/generated/tensordict.MemoryMappedTensor", "reference/generated/tensordict.MetaData", "reference/generated/tensordict.NonTensorData", "reference/generated/tensordict.NonTensorStack", "reference/generated/tensordict.PersistentTensorDict", "reference/generated/tensordict.TensorClass", "reference/generated/tensordict.TensorDict", "reference/generated/tensordict.TensorDictBase", "reference/generated/tensordict.TensorDictParams", "reference/generated/tensordict.capture_non_tensor_stack", "reference/generated/tensordict.cat", "reference/generated/tensordict.default_is_leaf", "reference/generated/tensordict.dense_stack_tds", "reference/generated/tensordict.from_any", "reference/generated/tensordict.from_consolidated", "reference/generated/tensordict.from_dataclass", "reference/generated/tensordict.from_dict", "reference/generated/tensordict.from_h5", "reference/generated/tensordict.from_module", "reference/generated/tensordict.from_modules", "reference/generated/tensordict.from_namedtuple", "reference/generated/tensordict.from_pytree", "reference/generated/tensordict.from_struct_array", "reference/generated/tensordict.from_tuple", "reference/generated/tensordict.fromkeys", "reference/generated/tensordict.get_defaults_to_none", "reference/generated/tensordict.is_batchedtensor", "reference/generated/tensordict.is_leaf_nontensor", "reference/generated/tensordict.is_tensor_collection", "reference/generated/tensordict.lazy_legacy", "reference/generated/tensordict.lazy_stack", "reference/generated/tensordict.list_to_stack", "reference/generated/tensordict.load", "reference/generated/tensordict.load_memmap", "reference/generated/tensordict.make_tensordict", "reference/generated/tensordict.maybe_dense_stack", "reference/generated/tensordict.memmap", "reference/generated/tensordict.merge_tensordicts", "reference/generated/tensordict.nn.CudaGraphModule", "reference/generated/tensordict.nn.EnsembleModule", "reference/generated/tensordict.nn.InteractionType", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential", "reference/generated/tensordict.nn.TensorDictModule", "reference/generated/tensordict.nn.TensorDictModuleBase", "reference/generated/tensordict.nn.TensorDictModuleWrapper", "reference/generated/tensordict.nn.TensorDictSequential", "reference/generated/tensordict.nn.WrapModule", "reference/generated/tensordict.nn.add_custom_mapping", "reference/generated/tensordict.nn.as_tensordict_module", "reference/generated/tensordict.nn.biased_softplus", "reference/generated/tensordict.nn.composite_lp_aggregate", "reference/generated/tensordict.nn.dispatch", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale", "reference/generated/tensordict.nn.distributions.CompositeDistribution", "reference/generated/tensordict.nn.distributions.Delta", "reference/generated/tensordict.nn.distributions.NormalParamExtractor", "reference/generated/tensordict.nn.distributions.OneHotCategorical", "reference/generated/tensordict.nn.distributions.TruncatedNormal", "reference/generated/tensordict.nn.inv_softplus", "reference/generated/tensordict.nn.make_tensordict", "reference/generated/tensordict.nn.mappings", "reference/generated/tensordict.nn.rand_one_hot", "reference/generated/tensordict.nn.set_composite_lp_aggregate", "reference/generated/tensordict.nn.set_interaction_type", "reference/generated/tensordict.nn.set_skip_existing", "reference/generated/tensordict.nn.skip_existing", "reference/generated/tensordict.pad", "reference/generated/tensordict.pad_sequence", "reference/generated/tensordict.parse_tensor_dict_string", "reference/generated/tensordict.save", "reference/generated/tensordict.set_capture_non_tensor_stack", "reference/generated/tensordict.set_lazy_legacy", "reference/generated/tensordict.set_list_to_stack", "reference/generated/tensordict.stack", "reference/generated/tensordict.tensorclass", "reference/generated/tensordict.utils.expand_as_right", "reference/generated/tensordict.utils.expand_right", "reference/generated/tensordict.utils.isin", "reference/generated/tensordict.utils.remove_duplicates", "reference/index", "reference/nn", "reference/tc", "reference/td", "saving", "sg_execution_times", "tutorials/data_fashion", "tutorials/export", "tutorials/index", "tutorials/sg_execution_times", "tutorials/streamed_tensordict", "tutorials/tensorclass_fashion", "tutorials/tensorclass_imagenet", "tutorials/tensordict_keys", "tutorials/tensordict_memory", "tutorials/tensordict_module", "tutorials/tensordict_preallocation", "tutorials/tensordict_shapes", "tutorials/tensordict_slicing"], "filenames": ["distributed.rst", "fx.rst", "index.rst", "overview.rst", "reference/generated/tensordict.LazyStackedTensorDict.rst", "reference/generated/tensordict.MemoryMappedTensor.rst", "reference/generated/tensordict.MetaData.rst", "reference/generated/tensordict.NonTensorData.rst", "reference/generated/tensordict.NonTensorStack.rst", "reference/generated/tensordict.PersistentTensorDict.rst", "reference/generated/tensordict.TensorClass.rst", "reference/generated/tensordict.TensorDict.rst", "reference/generated/tensordict.TensorDictBase.rst", "reference/generated/tensordict.TensorDictParams.rst", "reference/generated/tensordict.capture_non_tensor_stack.rst", "reference/generated/tensordict.cat.rst", "reference/generated/tensordict.default_is_leaf.rst", "reference/generated/tensordict.dense_stack_tds.rst", "reference/generated/tensordict.from_any.rst", "reference/generated/tensordict.from_consolidated.rst", "reference/generated/tensordict.from_dataclass.rst", "reference/generated/tensordict.from_dict.rst", "reference/generated/tensordict.from_h5.rst", "reference/generated/tensordict.from_module.rst", "reference/generated/tensordict.from_modules.rst", "reference/generated/tensordict.from_namedtuple.rst", "reference/generated/tensordict.from_pytree.rst", "reference/generated/tensordict.from_struct_array.rst", "reference/generated/tensordict.from_tuple.rst", "reference/generated/tensordict.fromkeys.rst", "reference/generated/tensordict.get_defaults_to_none.rst", "reference/generated/tensordict.is_batchedtensor.rst", "reference/generated/tensordict.is_leaf_nontensor.rst", "reference/generated/tensordict.is_tensor_collection.rst", "reference/generated/tensordict.lazy_legacy.rst", "reference/generated/tensordict.lazy_stack.rst", "reference/generated/tensordict.list_to_stack.rst", "reference/generated/tensordict.load.rst", "reference/generated/tensordict.load_memmap.rst", "reference/generated/tensordict.make_tensordict.rst", "reference/generated/tensordict.maybe_dense_stack.rst", "reference/generated/tensordict.memmap.rst", "reference/generated/tensordict.merge_tensordicts.rst", "reference/generated/tensordict.nn.CudaGraphModule.rst", "reference/generated/tensordict.nn.EnsembleModule.rst", "reference/generated/tensordict.nn.InteractionType.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential.rst", "reference/generated/tensordict.nn.TensorDictModule.rst", "reference/generated/tensordict.nn.TensorDictModuleBase.rst", "reference/generated/tensordict.nn.TensorDictModuleWrapper.rst", "reference/generated/tensordict.nn.TensorDictSequential.rst", "reference/generated/tensordict.nn.WrapModule.rst", "reference/generated/tensordict.nn.add_custom_mapping.rst", "reference/generated/tensordict.nn.as_tensordict_module.rst", "reference/generated/tensordict.nn.biased_softplus.rst", "reference/generated/tensordict.nn.composite_lp_aggregate.rst", "reference/generated/tensordict.nn.dispatch.rst", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale.rst", "reference/generated/tensordict.nn.distributions.CompositeDistribution.rst", "reference/generated/tensordict.nn.distributions.Delta.rst", "reference/generated/tensordict.nn.distributions.NormalParamExtractor.rst", "reference/generated/tensordict.nn.distributions.OneHotCategorical.rst", "reference/generated/tensordict.nn.distributions.TruncatedNormal.rst", "reference/generated/tensordict.nn.inv_softplus.rst", "reference/generated/tensordict.nn.make_tensordict.rst", "reference/generated/tensordict.nn.mappings.rst", "reference/generated/tensordict.nn.rand_one_hot.rst", "reference/generated/tensordict.nn.set_composite_lp_aggregate.rst", "reference/generated/tensordict.nn.set_interaction_type.rst", "reference/generated/tensordict.nn.set_skip_existing.rst", "reference/generated/tensordict.nn.skip_existing.rst", "reference/generated/tensordict.pad.rst", "reference/generated/tensordict.pad_sequence.rst", "reference/generated/tensordict.parse_tensor_dict_string.rst", "reference/generated/tensordict.save.rst", "reference/generated/tensordict.set_capture_non_tensor_stack.rst", "reference/generated/tensordict.set_lazy_legacy.rst", "reference/generated/tensordict.set_list_to_stack.rst", "reference/generated/tensordict.stack.rst", "reference/generated/tensordict.tensorclass.rst", "reference/generated/tensordict.utils.expand_as_right.rst", "reference/generated/tensordict.utils.expand_right.rst", "reference/generated/tensordict.utils.isin.rst", "reference/generated/tensordict.utils.remove_duplicates.rst", "reference/index.rst", "reference/nn.rst", "reference/tc.rst", "reference/td.rst", "saving.rst", "sg_execution_times.rst", "tutorials/data_fashion.rst", "tutorials/export.rst", "tutorials/index.rst", "tutorials/sg_execution_times.rst", "tutorials/streamed_tensordict.rst", "tutorials/tensorclass_fashion.rst", "tutorials/tensorclass_imagenet.rst", "tutorials/tensordict_keys.rst", "tutorials/tensordict_memory.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_preallocation.rst", "tutorials/tensordict_shapes.rst", "tutorials/tensordict_slicing.rst"], "titles": ["TensorDict in distributed settings", "Tracing TensorDictModule", "Welcome to the TensorDict Documentation!", "Overview", "LazyStackedTensorDict", "MemoryMappedTensor", "MetaData", "NonTensorData", "NonTensorStack", "PersistentTensorDict", "TensorClass", "TensorDict", "TensorDictBase", "TensorDictParams", "capture_non_tensor_stack", "cat", "default_is_leaf", "dense_stack_tds", "from_any", "from_consolidated", "from_dataclass", "from_dict", "from_h5", "from_module", "from_modules", "from_namedtuple", "from_pytree", "from_struct_array", "from_tuple", "fromkeys", "get_defaults_to_none", "is_batchedtensor", "is_leaf_nontensor", "is_tensor_collection", "lazy_legacy", "lazy_stack", "list_to_stack", "load", "load_memmap", "make_tensordict", "maybe_dense_stack", "memmap", "merge_tensordicts", "CudaGraphModule", "tensordict.nn.EnsembleModule", "InteractionType", "ProbabilisticTensorDictModule", "ProbabilisticTensorDictSequential", "TensorDictModule", "TensorDictModuleBase", "TensorDictModuleWrapper", "TensorDictSequential", "WrapModule", "tensordict.nn.add_custom_mapping", "as_tensordict_module", "tensordict.nn.biased_softplus", "composite_lp_aggregate", "tensordict.nn.dispatch", "tensordict.nn.distributions.AddStateIndependentNormalScale", "tensordict.nn.distributions.CompositeDistribution", "tensordict.nn.distributions.Delta", "tensordict.nn.distributions.NormalParamExtractor", "tensordict.nn.distributions.OneHotCategorical", "tensordict.nn.distributions.TruncatedNormal", "tensordict.nn.inv_softplus", "tensordict.nn.make_tensordict", "tensordict.nn.mappings", "tensordict.nn.rand_one_hot", "set_composite_lp_aggregate", "set_interaction_type", "tensordict.nn.set_skip_existing", "tensordict.nn.skip_existing", "pad", "pad_sequence", "parse_tensor_dict_string", "save", "set_capture_non_tensor_stack", "set_lazy_legacy", "set_list_to_stack", "stack", "tensorclass", "expand_as_right", "expand_right", "isin", "remove_duplicates", "API Reference", "tensordict.nn package", "tensorclass", "tensordict package", "Saving TensorDict and tensorclass objects", "Computation times", "Using TensorDict for datasets", "Exporting tensordict modules", "README Tutos", "Computation times", "Building tensordicts from streams", "Using tensorclasses for datasets", "Batched data loading with tensorclasses", "Manipulating the keys of a TensorDict", "Simplifying PyTorch Memory Management with TensorDict", "TensorDictModule", "Pre-allocating memory with TensorDict", "Manipulating the shape of a TensorDict", "Slicing, Indexing, and Masking"], "terms": {"can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 23, 24, 38, 39, 43, 45, 46, 47, 48, 49, 51, 54, 57, 58, 61, 65, 66, 68, 70, 76, 77, 78, 80, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 34, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 59, 61, 65, 66, 69, 70, 73, 74, 76, 78, 80, 86, 87, 88, 90, 93, 94, 95, 97, 98, 99, 101, 103], "pass": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 24, 26, 33, 42, 43, 46, 47, 48, 50, 51, 52, 55, 57, 86, 88, 89, 91, 92, 95, 96, 99, 100], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 23, 24, 26, 29, 33, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 57, 58, 59, 61, 65, 68, 70, 72, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "one": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 61, 62, 66, 70, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102], "anoth": [0, 3, 4, 5, 8, 9, 11, 12, 13, 48, 57, 81, 84, 88, 89, 95, 98, 100, 102], "If": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 24, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 55, 57, 59, 65, 66, 70, 73, 76, 78, 84, 87, 88, 89, 99, 100, 102], "two": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 46, 72, 88, 89, 91, 95, 96, 97, 100, 103], "have": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 20, 21, 23, 24, 39, 43, 44, 47, 48, 51, 57, 59, 65, 70, 83, 87, 88, 89, 92, 95, 99, 100, 101, 102, 103], "access": [0, 2, 4, 5, 8, 9, 11, 12, 13, 49, 51, 88, 89, 98, 102], "share": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 102, 103], "physic": [0, 4, 8, 9, 11, 12, 13, 88, 97], "storag": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 80, 88, 95, 97], "effici": [0, 3, 4, 8, 9, 11, 12, 13, 91, 95, 96, 97, 98], "data": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 33, 38, 39, 41, 44, 48, 52, 65, 73, 75, 76, 80, 86, 87, 88, 89, 90, 91, 93, 94, 96, 100], "run": [0, 13, 43, 46, 47, 50, 52, 57, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "process": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 52, 77, 88, 95, 97], "here": [0, 3, 86, 87, 89, 92, 95, 96, 97, 100, 102], "we": [0, 1, 3, 4, 8, 9, 10, 11, 12, 13, 21, 39, 44, 46, 48, 49, 51, 65, 86, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "provid": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 26, 38, 43, 45, 46, 48, 51, 52, 57, 59, 73, 80, 81, 84, 86, 87, 88, 91, 92, 96, 97, 98, 99, 100], "some": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 42, 43, 45, 46, 47, 51, 72, 77, 80, 88, 89, 92, 95, 96, 97, 100], "detail": [0, 4, 6, 7, 8, 9, 11, 12, 13, 35, 40, 61, 87], "how": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 59, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 59, 62, 65, 68, 70, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "achiev": [0, 3, 4, 8, 9, 11, 12, 13, 87, 98], "rpc": [0, 5], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 43, 49, 59, 72, 86, 87, 88, 92, 95, 97, 98, 99, 100, 102, 103], "more": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 18, 21, 22, 24, 25, 27, 28, 46, 47, 48, 58, 61, 68, 87, 89, 91, 92, 95, 96, 97, 102], "check": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 27, 33, 36, 43, 49, 52, 70, 87, 89, 92, 97, 99], "offici": [0, 92], "pytorch": [0, 2, 3, 4, 8, 9, 11, 12, 13, 43, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 102], "document": [0, 13, 87, 89, 92], "arrai": [0, 4, 6, 7, 8, 9, 11, 12, 13, 27, 78, 88, 97, 101], "great": 0, "advantag": [0, 3, 5, 9, 48, 88, 89, 97, 101, 102], "thei": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 70, 88, 89, 92, 95, 96, 97, 99, 100, 101, 102], "store": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 41, 49, 59, 80, 88, 89, 91, 96, 98, 99, 101, 102], "amount": [0, 95], "allow": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 36, 38, 43, 51, 57, 59, 70, 86, 87, 88, 89, 91, 95, 96, 97, 99, 102], "slice": [0, 2, 3, 4, 8, 9, 11, 12, 13, 90, 93, 94, 102], "readili": [0, 46], "without": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 38, 47, 51, 78, 80, 89, 92], "read": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 46, 48, 49, 51, 52, 57, 62, 86, 88, 89, 95, 100], "whole": [0, 87, 89], "file": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 22, 38, 41, 43, 88, 89, 90, 92, 94, 97, 99, 100], "offer": [0, 3, 43, 68, 88, 89, 91, 95, 96, 97, 100], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 22, 24, 29, 33, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 57, 65, 66, 80, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102], "interfac": [0, 9, 43, 59, 100], "between": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 41, 46, 88, 100], "torch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 31, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 99, 100, 102], "name": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 26, 27, 45, 48, 53, 57, 59, 70, 80, 86, 100], "memmaptensor": [0, 89], "instanc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 23, 24, 26, 41, 43, 46, 47, 48, 49, 50, 51, 52, 57, 73, 80, 86, 87, 88, 89, 92, 95, 97, 100, 102], "object": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 33, 46, 47, 48, 50, 51, 76, 87, 88, 91, 92, 96], "repres": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 24, 46, 89, 92, 95, 97, 100, 103], "big": [0, 2, 4, 8, 9, 11, 12, 13, 88], "dataset": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 88, 90, 93, 94, 97], "disk": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38, 41, 75, 88, 89, 91, 96, 97, 99], "easili": [0, 2, 3, 8, 86, 89, 92], "batch": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24, 39, 47, 48, 51, 57, 59, 60, 65, 72, 76, 78, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 103], "wai": [0, 3, 4, 8, 9, 10, 11, 12, 13, 48, 88, 92, 97, 98, 100, 102, 103], "A": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 38, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 58, 59, 61, 70, 72, 76, 80, 83, 86, 92, 95, 97, 100, 102], "simpli": [0, 1, 3, 6, 7, 10, 89, 95, 97, 98, 102], "via": [0, 2, 3, 4, 8, 9, 11, 12, 13, 49, 51, 87, 88, 102], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 23, 26, 27, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 61, 68, 72, 78, 80, 83, 84, 86, 87, 89, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103], "popul": [0, 3, 4, 8, 9, 11, 12, 13, 48, 88, 89, 91, 99, 101], "2": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 26, 42, 43, 44, 48, 49, 51, 52, 57, 58, 61, 68, 72, 73, 76, 78, 80, 83, 84, 86, 87, 89, 91, 92, 95, 96, 97, 98, 101, 102, 103], "call": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 24, 38, 41, 43, 46, 48, 50, 51, 52, 57, 59, 69, 70, 77, 79, 88, 89, 92, 95, 100, 101, 102], "memmap_": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 89, 97, 99], "put": [0, 4, 8, 9, 11, 12, 13, 43, 89, 95, 100], "One": [0, 3, 62, 86, 87, 89, 92, 97, 100], "queri": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 45, 47, 51], "is_memmap": [0, 4, 8, 9, 11, 12, 13, 97], "itself": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 49, 92, 99], "done": [0, 3, 4, 8, 9, 11, 12, 13, 87, 88, 91, 96, 97, 102], "sever": [0, 4, 6, 7, 8, 9, 11, 12, 13, 24, 88, 89, 92, 100], "firstli": 0, "empti": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 43, 47, 48, 51, 87, 88, 91, 92, 96, 97, 101], "shape": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 27, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 61, 65, 68, 70, 72, 73, 81, 82, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "size": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 38, 39, 42, 44, 46, 47, 48, 49, 51, 57, 58, 59, 60, 61, 65, 68, 70, 72, 73, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103], "3": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 24, 26, 27, 39, 42, 44, 46, 47, 48, 49, 51, 52, 58, 59, 61, 65, 68, 72, 73, 80, 81, 82, 83, 84, 86, 87, 89, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103], "4": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 21, 23, 24, 27, 39, 44, 46, 48, 51, 52, 58, 59, 61, 65, 68, 72, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 100, 101, 102, 103], "5": [0, 3, 4, 8, 9, 11, 12, 13, 44, 48, 52, 53, 68, 73, 81, 82, 83, 84, 86, 87, 88, 91, 95, 96, 100, 102, 103], "prefix": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38, 41, 75, 89, 99], "tmp": [0, 89], "randn": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 24, 26, 39, 43, 44, 46, 48, 51, 53, 58, 59, 61, 65, 68, 86, 87, 88, 89, 92, 95, 100], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 29, 36, 41, 43, 44, 46, 47, 48, 49, 51, 54, 55, 57, 58, 59, 61, 68, 72, 76, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103], "attribut": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 41, 45, 46, 47, 48, 49, 51, 57, 70, 80, 87, 92, 96, 99, 102], "indic": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 49, 52, 55, 57, 70, 73, 80, 84, 89, 91, 92, 96, 100, 103], "where": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 43, 46, 47, 49, 57, 59, 66, 73, 86, 88, 89, 95, 99, 100, 102], "temporari": [0, 4, 8, 9, 11, 12, 13, 99], "ha": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 46, 48, 72, 77, 86, 88, 89, 92, 95, 97, 98, 100, 101, 102], "It": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 46, 49, 51, 73, 76, 80, 84, 87, 100, 102], "crucial": [0, 4, 6, 7, 8, 9, 11, 12, 13, 24], "directori": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 87, 89, 99], "everi": [0, 4, 8, 9, 11, 12, 13, 42, 46, 50, 52, 73, 89, 92, 102], "option": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 72, 73, 75, 80, 83, 84, 87, 89, 92, 100], "exist": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 42, 43, 45, 46, 47, 70, 71, 92, 102], "former": [0, 3, 4, 8, 9, 11, 12, 13, 46, 50, 52], "method": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 26, 34, 37, 38, 41, 45, 46, 47, 48, 49, 50, 51, 57, 70, 77, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102], "prefer": [0, 4, 8, 9, 11, 12, 13, 57, 92, 99], "when": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 23, 24, 36, 38, 40, 46, 47, 48, 49, 51, 52, 55, 57, 68, 69, 70, 78, 80, 88, 89, 92, 95, 96, 97, 98, 99, 100, 102, 103], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 24, 26, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 61, 66, 70, 78, 80, 83, 86, 87, 88, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "do": [0, 3, 4, 8, 9, 11, 12, 13, 43, 46, 70, 89, 92, 95, 97, 98], "fit": [0, 4, 8, 9, 11, 12, 13, 88, 89], "suitabl": [0, 89], "extrem": [0, 89], "serv": [0, 4, 6, 7, 8, 9, 11, 12, 13], "common": [0, 4, 8, 9, 11, 12, 13, 42, 57, 88, 92, 95, 97, 100, 102, 103], "could": [0, 4, 8, 9, 11, 12, 13, 46, 89, 92, 95, 97, 98, 100, 103], "would": [0, 3, 4, 8, 9, 11, 12, 13, 17, 43, 46, 87, 88, 92, 99, 100, 103], "singl": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 29, 41, 47, 48, 51, 56, 57, 68, 76, 79, 88, 89, 92, 95, 97, 100, 101, 102], "differ": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 21, 24, 39, 48, 51, 65, 87, 88, 89, 92, 95, 97, 99, 102], "much": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 88, 96, 97, 98, 102], "faster": [0, 4, 8, 9, 11, 12, 13, 88, 102], "than": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 43, 46, 47, 48, 58, 61, 72, 88, 89, 91, 92, 95, 96, 97, 102], "each": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 24, 26, 42, 46, 51, 59, 80, 83, 86, 88, 89, 91, 95, 96, 97, 98, 102, 103], "had": [0, 95, 102], "load": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 88, 90, 91, 92, 93, 94, 96, 99], "independ": [0, 4, 8, 9, 11, 12, 13, 46, 58, 88, 89, 92], "imag": [0, 3, 88, 89, 91, 96, 97, 100], "50000": 0, "480": [0, 88], "mask": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 73, 86, 90, 93, 94], "dtype": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 27, 38, 39, 42, 44, 46, 47, 48, 49, 51, 59, 65, 68, 70, 73, 80, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "bool": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 36, 37, 38, 39, 41, 44, 46, 47, 48, 51, 52, 56, 57, 58, 63, 65, 67, 68, 70, 73, 75, 76, 77, 78, 80, 84, 87, 95, 97], "label": [0, 89, 91], "uint8": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 97], "batch_siz": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 38, 39, 42, 44, 46, 47, 48, 49, 51, 52, 59, 65, 68, 70, 72, 73, 76, 78, 80, 83, 84, 86, 87, 88, 89, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103], "devic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 58, 59, 65, 68, 70, 73, 80, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103], "cpu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 59, 65, 68, 70, 73, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "idx": [0, 3, 4, 8, 9, 11, 12, 13, 97], "5020": 0, "34572": 0, "11200": 0, "clone": [0, 2, 4, 8, 9, 11, 12, 13, 17, 43, 48, 49, 87, 88, 102], "field": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 27, 38, 39, 42, 44, 46, 47, 48, 49, 51, 59, 65, 68, 70, 73, 80, 86, 88, 89, 91, 95, 98, 99, 100, 101, 102, 103], "float32": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 23, 24, 38, 39, 44, 46, 47, 48, 49, 51, 59, 65, 68, 70, 73, 80, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "is_shar": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 38, 39, 42, 44, 46, 47, 48, 49, 51, 59, 65, 68, 70, 73, 80, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103], "fals": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 56, 58, 59, 65, 68, 70, 73, 75, 76, 78, 80, 83, 84, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "notic": [0, 3, 4, 8, 9, 11, 12, 13], "syntax": [0, 3, 66, 98, 103], "sugar": 0, "directli": [0, 2, 4, 8, 9, 11, 12, 13, 17, 46, 48, 88, 89, 91, 92, 96, 97, 98, 100], "need": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 43, 46, 50, 52, 57, 66, 86, 87, 88, 89, 91, 92, 95, 96, 97, 100, 102, 103], "consider": 0, "take": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 24, 43, 44, 46, 50, 51, 52, 53, 58, 61, 66, 70, 86, 88, 89, 91, 92, 95, 96, 97, 100, 101], "account": [0, 4, 8, 9, 11, 12, 13], "current": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 36, 47, 78, 88, 91, 96, 99], "compat": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 29, 39, 49, 65, 79, 80, 86, 87, 92, 103], "autograd": [0, 2, 4, 8, 9, 11, 12, 13, 85, 92], "simpl": [0, 3, 4, 8, 9, 11, 12, 13, 43, 46, 91, 96], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 24, 26, 27, 33, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 61, 65, 68, 70, 72, 73, 76, 78, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103], "script": [0, 76, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "send": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 99], "its": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 39, 43, 44, 46, 47, 48, 49, 51, 61, 65, 74, 86, 87, 88, 89, 92, 96, 100, 102], "refer": [0, 2, 4, 6, 7, 8, 9, 11, 12, 13, 24, 83, 88, 90, 92, 97, 100], "worker": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 88, 97], "respons": [0, 4, 8, 9, 11, 12, 13, 43, 100], "updat": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 42, 46, 49, 51, 87, 89, 95, 97, 100, 101, 102], "you": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 43, 44, 46, 49, 76, 87, 88, 89, 92, 95, 96, 98, 99, 100, 101, 102, 103], "find": [0, 100], "benchmark": [0, 4, 8, 9, 11, 12, 13, 97, 100], "In": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 24, 43, 45, 46, 47, 48, 51, 57, 59, 66, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "short": [0, 92], "our": [0, 91, 92, 95, 96, 97, 100], "goal": [0, 4, 8, 9, 11, 12, 13, 92, 95], "show": [0, 3, 4, 8, 9, 11, 12, 13, 17, 92, 97], "handl": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 78, 86, 91, 92, 95, 96], "write": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 46, 48, 49, 51, 86, 89, 92, 95, 96, 97, 100], "step": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 46, 91, 96, 97, 100, 101, 102], "involv": [0, 4, 6, 7, 8, 9, 11, 12, 13], "local": [0, 4, 8, 9, 11, 12, 13], "remot": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13], "execut": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 47, 51, 70, 77, 80, 88, 89, 90, 92, 94, 100], "command": [0, 89], "first": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 42, 43, 46, 47, 57, 72, 84, 87, 88, 89, 91, 95, 97, 100, 101, 102, 103], "function": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 36, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 57, 58, 61, 64, 65, 66, 74, 75, 83, 86, 87, 88, 91, 92, 95, 96, 100, 101, 102], "specif": [0, 5, 48, 92], "fill": [0, 4, 5, 8, 9, 11, 12, 13, 72, 101], "def": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 26, 43, 46, 48, 49, 51, 54, 57, 70, 76, 80, 86, 87, 89, 91, 92, 95, 96, 97, 100, 101], "fill_tensordict": 0, "memmap": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 75, 87, 89, 91, 96, 99], "ones": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 47, 48, 49, 51, 52, 57, 72, 78, 80, 87, 88, 98, 102, 103], "640": 0, "return": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 30, 33, 34, 36, 39, 41, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 70, 71, 72, 73, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103], "fill_tensordict_cp": 0, "cloudpicklewrapp": 0, "ensur": [0, 4, 5, 8, 9, 11, 12, 13, 78, 84, 97], "serializ": [0, 4, 8, 9, 11, 12, 13], "next": [0, 97, 100], "make": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 40, 43, 44, 46, 86, 87, 88, 89, 92, 97, 98, 100, 103], "point": [0, 3, 4, 8, 9, 11, 12, 13, 43, 45, 46, 47, 57, 66, 84, 86, 92], "hard": 0, "through": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 24, 46, 47, 51, 55, 57, 66, 68, 76, 80, 86, 88, 92, 97, 100, 101], "regular": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 43, 46, 47, 48, 51, 86, 88, 89, 92, 95, 97, 100, 102, 103], "tensorpip": 0, "1000": [0, 3, 46], "final": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 47, 86, 89, 92, 95], "still": [0, 4, 8, 9, 11, 12, 13, 48, 49, 51, 95, 98, 99, 100], "main": [0, 2, 4, 5, 8, 9, 11, 12, 13, 46, 88, 89, 92, 95, 97], "been": [0, 4, 8, 9, 11, 12, 13, 14, 77, 86, 87, 89, 92, 95, 98, 99, 100, 101], "written": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 46, 48, 49, 51, 52, 57, 59, 73, 89, 92, 100, 101], "6": [0, 3, 4, 8, 9, 11, 12, 13, 60, 72, 73, 83, 84, 87, 88, 91, 95, 96, 102, 103], "7": [0, 4, 8, 9, 11, 12, 13, 83, 84, 95, 96], "998": 0, "t0": [0, 91, 92, 96, 97], "time": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 80, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "out": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 35, 37, 38, 39, 40, 43, 48, 51, 65, 70, 73, 79, 80, 83, 88, 92, 97, 100], "rpc_sync": 0, "worker_info": 0, "arg": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 43, 44, 46, 47, 48, 49, 50, 51, 52, 70, 92, 100], "print": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 23, 24, 38, 39, 42, 46, 47, 48, 51, 54, 57, 58, 59, 61, 65, 68, 70, 72, 73, 74, 80, 81, 82, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "elaps": 0, "all": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 26, 27, 29, 38, 41, 42, 43, 46, 47, 50, 51, 52, 53, 57, 58, 61, 69, 70, 72, 73, 78, 80, 84, 87, 88, 89, 90, 92, 93, 95, 98, 99, 100, 101, 102, 103], "although": [0, 2, 4, 8, 9, 11, 12, 13, 46, 50, 52, 80, 92], "entir": [0, 1, 4, 8, 9, 11, 12, 13, 47, 52, 89, 96, 97], "origin": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 26, 46, 49, 51, 86, 88, 89, 92, 95, 98, 99, 102, 103], "snippet": [0, 43], "fast": [0, 4, 8, 9, 11, 12, 13, 43, 89, 99], "even": [0, 3, 4, 8, 9, 11, 12, 13, 45, 47, 48, 72, 87, 95, 97, 102], "so": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 47, 48, 51, 72, 88, 89, 91, 96, 97, 98, 100, 102], "locat": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 89, 92, 99], "alreadi": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 44, 46, 70, 89, 91, 96, 98, 102], "beforehand": 0, "see": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 24, 35, 40, 43, 46, 48, 61, 70, 92, 95, 96, 97, 98, 99, 100, 102], "torchrl": [0, 3, 86], "s": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 26, 41, 44, 46, 48, 51, 70, 74, 80, 86, 89, 91, 92, 95, 96, 97, 102], "replai": 0, "buffer": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 23, 43, 48, 51, 58, 88], "learn": [0, 4, 6, 7, 8, 9, 11, 12, 13, 24, 59, 95, 97, 98, 99, 100, 101, 102, 103], "contain": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 33, 42, 46, 47, 48, 50, 57, 59, 73, 76, 83, 84, 87, 88, 89, 91, 96, 97, 98, 101, 102], "addit": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 47, 48, 59, 66, 86, 88, 97, 102], "configur": [0, 4, 8, 9, 11, 12, 13, 20, 47], "beyond": 0, "purpos": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 51, 52, 86, 89, 92], "support": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 43, 47, 48, 49, 51, 87, 89, 92, 95, 97, 99, 102], "creat": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 26, 29, 35, 38, 39, 46, 47, 48, 50, 51, 65, 77, 80, 87, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103], "fx": [1, 92], "graph": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 49, 51, 70, 86, 92], "import": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 23, 24, 38, 42, 44, 46, 47, 48, 49, 51, 52, 53, 58, 61, 68, 70, 72, 80, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "symbolic_trac": 1, "tensordict": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 93, 94, 96, 97, 103], "prototyp": [1, 43, 86, 87, 89], "instead": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 24, 46, 47, 50, 51, 52, 57, 87, 92, 97, 100, 102], "highli": [1, 2], "experiment": [1, 46, 87], "subject": [1, 87], "chang": [1, 4, 6, 7, 8, 9, 11, 12, 13, 43, 49, 51, 70, 77, 87, 92, 98], "caution": [1, 4, 8, 9, 10, 11, 12, 13, 20, 80], "rais": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 41, 46, 47, 48, 83, 84, 89], "issu": [1, 43, 87, 92], "try": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 27, 43, 47, 57, 95, 100, 102], "encount": [1, 47], "problem": [1, 3, 86], "ll": [1, 91, 95, 96, 97], "illustr": [1, 89], "overview": [1, 2, 9, 11, 12, 13], "inspect": 1, "gener": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 45, 57, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "code": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 43, 51, 70, 77, 86, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103], "nn": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 68, 69, 85, 87, 88, 89, 91, 92, 96, 97, 98, 100], "net": [1, 3, 13, 44, 46, 49, 86, 91, 96, 100], "modul": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 61, 70, 71, 86, 89, 90, 91, 93, 94, 96, 97, 98], "__init__": [1, 3, 13, 49, 86, 91, 96, 97, 100], "self": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 47, 48, 49, 54, 57, 70, 80, 86, 87, 91, 92, 96, 97, 100], "super": [1, 3, 13, 86, 91, 96, 97, 100], "linear": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 44, 49, 51, 58, 61, 86, 91, 92, 96, 98, 100], "lazylinear": [1, 3], "forward": [1, 3, 13, 46, 47, 48, 49, 50, 51, 52, 57, 70, 72, 86, 91, 92, 96, 97, 100], "x": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 24, 27, 43, 47, 48, 49, 51, 52, 53, 66, 80, 86, 87, 88, 89, 91, 92, 95, 96, 97, 100], "logit": [1, 3, 59, 62, 68, 91, 96], "sigmoid": [1, 3, 4, 8, 9, 11, 12, 13], "in_kei": [1, 3, 4, 8, 9, 11, 12, 13, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 70, 86, 92, 100], "input": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 33, 35, 39, 40, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 57, 59, 61, 65, 66, 70, 79, 81, 83, 84, 86, 88, 92, 95, 96], "out_kei": [1, 3, 4, 8, 9, 11, 12, 13, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 70, 86, 88, 92, 100], "output": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 24, 43, 46, 47, 48, 49, 51, 52, 53, 54, 57, 70, 84, 86, 87, 88, 100], "probabl": [1, 3, 4, 8, 9, 11, 12, 13, 43, 46, 47, 56, 59, 68, 86, 100], "graph_modul": [1, 92], "user": [1, 3, 4, 8, 9, 11, 12, 13, 43, 70, 86, 87, 89, 92, 100, 102], "placehold": [1, 8, 48], "target": [1, 4, 8, 9, 11, 12, 13, 81, 82, 83, 86, 91, 96, 97], "getitem": [1, 92], "call_funct": 1, "oper": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 41, 43, 50, 59, 80, 85, 87, 89, 95, 97, 98, 100, 102], "kwarg": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 57, 62, 65, 70, 92, 100], "call_modul": 1, "none": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 73, 75, 79, 80, 86, 87, 88, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "result": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 23, 24, 41, 47, 51, 54, 57, 59, 87, 88, 89, 95, 97, 101, 102], "same": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 24, 43, 45, 48, 49, 51, 53, 70, 73, 80, 83, 84, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103], "32": [1, 3, 4, 8, 9, 11, 12, 13, 44, 86, 89, 91, 95, 96, 97], "100": [1, 3, 4, 8, 9, 11, 12, 13, 86, 91, 96, 97, 98], "module_out": 1, "tensordict_out": [1, 43, 46, 47, 48, 49, 51, 100], "graph_module_out": 1, "assert": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 26, 27, 38, 43, 48, 49, 52, 53, 57, 58, 61, 78, 80, 84, 87, 88, 89, 95, 98, 100, 101, 102], "also": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21, 24, 38, 39, 46, 47, 48, 49, 51, 57, 65, 68, 70, 80, 83, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103], "case": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 24, 38, 42, 43, 45, 46, 47, 48, 51, 59, 66, 85, 88, 92, 95, 96, 97, 98, 100, 102], "elimin": [1, 92, 97], "intermedi": [1, 3, 4, 8, 9, 11, 12, 13, 47, 49, 51, 86, 92, 100], "demonstr": [1, 91, 96, 97, 101], "sequenti": [1, 3, 4, 8, 9, 11, 12, 13, 44, 47, 49, 51, 86, 91, 96, 97, 98, 100], "input_s": [1, 3, 86], "hidden_s": [1, 3, 86], "50": [1, 3, 4, 8, 9, 11, 12, 13, 83, 84, 86, 95, 98], "output_s": [1, 3, 4, 8, 9, 11, 12, 13, 86], "10": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 27, 44, 53, 59, 68, 83, 84, 86, 87, 88, 89, 91, 92, 95, 96, 98, 99, 101], "fc1": [1, 3, 86], "fc2": [1, 3, 86], "relu": [1, 3, 44, 49, 58, 61, 66, 86, 91, 92, 96, 100], "masker": [1, 3, 86], "softmax": [1, 3, 4, 8, 9, 11, 12, 13, 86], "dim": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 21, 35, 39, 40, 65, 79, 83, 84, 86, 87, 95, 102], "_0_fc1": 1, "getattr": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 92], "0": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 23, 24, 27, 29, 35, 38, 40, 41, 42, 46, 47, 48, 49, 51, 53, 54, 55, 58, 61, 68, 72, 73, 75, 76, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "_0_fc2": 1, "getitem_1": [1, 92], "mul": [1, 4, 8, 9, 11, 12, 13, 92], "bit": [1, 3, 91], "complic": [1, 49, 51], "visual": 1, "follow": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 43, 49, 51, 66, 70, 87, 88, 89, 92, 95, 97, 99, 103], "requir": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 40, 43, 47, 48, 51, 52, 88, 89, 95, 99, 100, 102], "pydot": 1, "visualis": 1, "graph_draw": 1, "fxgraphdraw": 1, "g": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 42, 44, 46, 91, 92, 96, 100], "open": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 100], "svg": 1, "wb": [1, 4, 8, 9, 11, 12, 13], "f": [1, 4, 8, 9, 11, 12, 13, 42, 47, 66, 89, 91, 92, 96, 97, 98, 100], "get_dot_graph": 1, "create_svg": 1, "which": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 23, 24, 38, 43, 46, 51, 57, 68, 72, 83, 84, 86, 87, 88, 89, 92, 95, 98, 99, 100, 101, 102, 103], "dictionari": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21, 26, 29, 39, 42, 46, 48, 59, 65, 87, 88, 95, 98], "like": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 46, 80, 87, 88, 91, 92, 96, 97, 98, 99, 100, 102], "inherit": [2, 4, 8, 9, 10, 11, 12, 13, 87, 88, 95], "properti": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 45, 46, 47, 77], "tensor": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 24, 26, 31, 33, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103], "index": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 80, 87, 88, 90, 93, 94, 95, 99], "cast": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 38, 78, 80, 85], "etc": [2, 4, 8, 9, 11, 12, 13, 88, 89, 91, 92, 96], "pypi": 2, "about": [2, 52, 92, 95, 97], "instruct": 2, "dedic": [2, 88, 89, 92, 96, 97], "section": [2, 3, 4, 8, 9, 11, 12, 13], "below": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 48, 70, 87, 92, 95, 100, 102], "pip": 2, "base": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 46, 47, 48, 49, 51, 86, 87, 91, 92, 96, 97], "readabl": [2, 4, 8, 9, 11, 12, 13], "modular": [2, 51], "abstract": [2, 12], "awai": 2, "tailor": 2, "i": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 46, 61, 89, 91, 92, 95, 96, 97, 100, 101], "enumer": [2, 3, 13, 91, 96, 97], "model": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 38, 51, 59, 86, 88, 89, 97, 100], "loss": [2, 3, 91, 96], "loss_modul": [2, 3], "backward": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 91, 96], "optim": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 89], "zero_grad": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 91, 96], "With": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24], "level": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 26, 98, 100], "recycl": 2, "train": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 91, 92, 96, 97], "loop": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 91, 96, 97, 101], "heterogen": [2, 4, 8, 9, 11, 12, 13], "task": [2, 3, 95], "individu": [2, 88, 91, 96], "collect": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 43, 59, 87, 95, 97, 99], "transform": [2, 4, 6, 7, 8, 9, 11, 12, 13, 26, 48, 52, 55, 66, 77, 86, 89, 91, 96, 97, 100], "predict": [2, 86, 96], "comput": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 39, 46, 47, 50, 51, 52, 55, 65, 66, 71, 85, 86, 92, 97, 102], "hand": [2, 89], "impact": [2, 4, 8, 9, 11, 12, 13, 92, 98], "other": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 47, 49, 51, 57, 58, 61, 78, 80, 84, 87, 88, 89, 92, 97, 102], "abov": [2, 13, 47, 66, 89, 97, 99, 101], "across": [2, 3, 4, 8, 9, 11, 12, 13, 57, 88, 95], "classif": 2, "segment": 2, "among": [2, 17], "mani": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 80, 87, 88, 92, 95, 103], "releas": 2, "sync": 2, "sure": [2, 4, 8, 9, 11, 12, 13, 43, 87], "alwai": [2, 4, 8, 9, 11, 12, 13, 49, 100, 102], "enjoi": 2, "latest": 2, "featur": [2, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 46, 48, 49, 51, 86, 87, 88, 89, 92, 95], "librari": [2, 3, 4, 8, 9, 11, 12, 13, 88, 89, 92], "most": [2, 3, 4, 8, 9, 11, 12, 13, 43, 92, 95], "recent": 2, "version": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 43, 74, 92, 100, 102], "core": [2, 89, 92, 97], "guarante": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 45, 102, 103], "13": [2, 4, 8, 9, 11, 12, 13, 90, 94, 95, 100], "nightli": 2, "git": 2, "re": [2, 3, 4, 8, 9, 11, 12, 13, 43, 46, 71, 89], "willing": 2, "contribut": [2, 47], "cd": 2, "path": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38, 41, 59, 87, 89, 97, 99], "root": [2, 4, 8, 9, 11, 12, 13, 59, 68, 91, 96, 97, 99, 102], "http": [2, 4, 8, 9, 11, 12, 13, 63, 97], "github": [2, 97], "com": [2, 4, 8, 9, 11, 12, 13, 97], "e": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 42, 44, 46, 51, 61, 91, 92, 95, 96, 100], "manipul": [2, 3, 88, 90, 93, 94, 95, 103], "kei": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 26, 29, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 57, 59, 65, 66, 70, 73, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 101, 102], "pre": [2, 13, 80, 87, 89, 90, 91, 93, 94, 96, 97], "alloc": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 87, 89, 90, 93, 94], "memori": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 38, 41, 51, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100], "simplifi": [2, 88, 90, 92, 93, 94, 95], "manag": [2, 4, 8, 9, 11, 12, 13, 36, 70, 76, 78, 85, 90, 91, 92, 93, 94, 96, 100, 102], "build": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 26, 46, 47, 52, 86, 87, 88, 90, 92, 93, 94, 100], "stream": [2, 4, 8, 9, 11, 12, 13, 43, 90, 93, 94], "tensordictmodul": [2, 43, 44, 46, 47, 49, 50, 51, 52, 54, 57, 85, 88, 90, 93, 94], "export": [2, 3, 4, 8, 9, 11, 12, 13, 90, 93, 94, 100], "tensorclass": [2, 4, 6, 7, 8, 9, 11, 12, 13, 20, 33, 51, 85, 90, 93, 94], "motiv": 2, "escap": 2, "non": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 24, 26, 41, 42, 43, 46, 47, 51, 61, 68, 76, 80, 87, 89, 97, 100, 102], "stack": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 24, 35, 36, 40, 41, 42, 44, 47, 51, 52, 73, 76, 78, 87, 88, 89, 97], "dimens": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 57, 59, 72, 73, 78, 79, 83, 84, 95, 100, 101, 103], "nest": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 26, 38, 39, 41, 42, 51, 57, 59, 65, 68, 73, 80, 87, 88, 89, 95, 102], "lazi": [2, 4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 34, 35, 40, 47, 51, 77, 89, 95, 102], "evalu": [2, 13, 47], "distribut": [2, 3, 4, 8, 9, 11, 12, 13, 45, 46, 47, 51, 68, 85, 88, 92, 97], "set": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 36, 38, 41, 46, 47, 48, 49, 51, 69, 70, 76, 77, 80, 87, 88, 89, 97, 99, 102], "map": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 38, 41, 46, 48, 51, 53, 58, 59, 61, 85, 87, 91, 92, 96, 97], "node": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 70, 86], "trace": 2, "tensordictsequenti": [2, 3, 44, 47, 48, 49, 52, 85, 86, 92, 100], "save": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 87, 88, 91, 96, 97, 99], "memmori": 2, "memorymappedtensor": [2, 4, 8, 9, 11, 12, 13, 88, 91, 96, 97, 99], "torchsnapshot": 2, "api": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 43, 48, 49, 68, 89, 100, 102], "packag": [2, 3, 85, 92], "tensordictbas": [2, 4, 6, 7, 8, 9, 10, 11, 13, 17, 21, 22, 25, 27, 28, 33, 38, 41, 43, 46, 47, 48, 49, 50, 51, 52, 57, 59, 73, 81, 83, 84, 85, 89, 95], "lazystackedtensordict": [2, 6, 7, 8, 9, 11, 12, 13, 17, 24, 85, 89, 95, 102], "persistenttensordict": [2, 4, 6, 7, 8, 11, 12, 13, 85], "tensordictparam": [2, 4, 6, 7, 8, 9, 11, 12, 23, 24, 46, 85], "get_defaults_to_non": [2, 85], "constructor": [2, 4, 6, 7, 8, 9, 11, 12, 13, 46, 51, 57, 80, 85, 92], "handler": [2, 5, 85], "context": [2, 3, 4, 8, 9, 11, 12, 13, 36, 70, 76, 78, 85, 92, 97, 100, 102], "pointwis": [2, 4, 8, 9, 11, 12, 13, 85], "gradient": [2, 4, 8, 9, 11, 12, 13, 85, 91, 92, 96, 100], "grad": [2, 4, 6, 7, 8, 9, 11, 12, 13, 24, 85], "util": [2, 4, 6, 7, 8, 9, 11, 12, 13, 26, 81, 82, 83, 84, 85, 89, 91, 92, 96, 97, 99, 100, 102], "tensordictmodulebas": [2, 43, 47, 51, 70, 85, 100], "probabilistictensordictmodul": [2, 47, 51, 59, 85, 86, 92], "probabilistictensordictsequenti": [2, 46, 51, 59, 85, 86, 100], "tensordictmodulewrapp": [2, 85], "cudagraphmodul": [2, 85], "wrapmodul": [2, 85], "interactiontyp": [2, 46, 69, 85, 92], "set_interaction_typ": [2, 46, 85, 92], "set_composite_lp_aggreg": [2, 56, 59, 85], "composite_lp_aggreg": [2, 46, 59, 68, 85], "as_tensordict_modul": [2, 85], "ensembl": [2, 3, 44, 85], "compil": [2, 4, 6, 7, 8, 9, 11, 12, 13, 15, 43, 79, 85, 92, 100], "serial": [2, 4, 5, 8, 9, 11, 12, 13, 85, 88, 89, 92], "edg": [2, 85, 92], "auto": [2, 4, 8, 9, 11, 12, 13, 20, 85], "search": [2, 47], "page": [2, 3], "easi": [3, 9, 48, 97, 100], "organis": 3, "reusabl": [3, 100], "develop": 3, "ve": [3, 95], "spun": 3, "separ": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 41, 57, 89, 95, 98, 100], "primarili": 3, "multipl": [3, 4, 5, 8, 9, 10, 11, 12, 13, 47, 59, 86, 87, 88, 89, 92, 97, 101, 102, 103], "mostli": 3, "relat": [3, 49, 96, 97], "design": [3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 43, 95, 100], "serialis": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "transmit": 3, "ship": 3, "own": [3, 13, 89, 92], "func": [3, 4, 8, 9, 11, 12, 13, 43, 46, 51, 52, 100, 102], "aim": [3, 4, 8, 9, 11, 12, 13], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 23, 24, 29, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 76, 78, 81, 82, 83, 84, 86, 88, 92, 98, 100], "easier": [3, 89], "On": [3, 89], "give": [3, 4, 8, 9, 11, 12, 13, 43, 97], "what": [3, 4, 8, 9, 11, 12, 13, 49, 52, 57, 86, 89, 92, 100, 101], "usabl": 3, "paradigm": 3, "sl": 3, "ssl": 3, "ul": 3, "rl": 3, "tool": [3, 89, 95], "littl": [3, 4, 8, 9, 11, 12, 13, 97], "effort": [3, 91], "multiprocess": [3, 4, 8, 9, 11, 12, 13, 88], "seamlessli": [3, 4, 8, 9, 11, 12, 13], "dispatch": [3, 4, 8, 9, 11, 12, 13, 43, 48, 49, 51, 92, 100], "datapoint": [3, 89], "split": [3, 4, 5, 8, 9, 11, 12, 13, 61, 87, 92], "arang": [3, 4, 8, 9, 11, 12, 13, 95, 97, 102], "rang": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 89, 91, 95, 96, 100, 101], "pipe": 3, "tree_map": [3, 4, 6, 7, 8, 9, 11, 12, 13, 26], "too": [3, 4, 5, 8, 9, 11, 12, 13, 39, 43, 49, 51, 65, 89, 95, 100], "greater": [3, 4, 8, 9, 11, 12, 13], "degre": [3, 4, 8, 9, 11, 12, 13], "complex": [3, 4, 8, 9, 11, 12, 13, 86, 88, 89, 95, 97, 100], "td": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 26, 27, 38, 39, 42, 43, 46, 47, 48, 49, 51, 52, 65, 72, 78, 83, 84, 86, 87, 88, 89, 95, 100], "11": [3, 4, 8, 9, 11, 12, 13, 83, 86, 90, 94, 95], "b": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 38, 39, 44, 48, 49, 51, 57, 63, 65, 72, 73, 86, 88, 89, 96, 98, 99, 101, 102, 103], "regular_dict": 3, "td0": [3, 4, 8, 9, 11, 12, 13, 17, 42, 89], "td1": [3, 4, 8, 9, 11, 12, 13, 17, 42, 88, 89], "td2": [3, 4, 8, 9, 11, 12, 13, 42, 88, 103], "unbind": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "similar": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 46, 48, 80, 86, 87, 88, 89, 91, 92, 96, 102], "structur": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 23, 24, 26, 27, 38, 41, 73, 86, 88, 89, 96, 97, 98, 99, 100, 102, 103], "pytre": [3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 92], "lambda": [3, 4, 8, 9, 11, 12, 13, 42, 43, 47, 48, 49, 51, 52, 53, 91, 92, 95, 96, 100], "regular_dict1": 3, "regular_dict2": 3, "regular_dict3": 3, "compel": 3, "c": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21, 38, 39, 42, 48, 49, 51, 54, 57, 65, 88, 89, 98, 99, 102], "decompos": [3, 57], "three": [3, 89, 92, 100], "similarli": [3, 13, 51, 89, 98], "after": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 51, 88, 89, 92, 97, 100, 101, 102], "appli": [3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 46, 54, 88, 95, 97, 102, 103], "quickli": 3, "becom": 3, "significantli": [3, 4, 8, 9, 11, 12, 13], "cumbersom": 3, "work": [3, 4, 8, 9, 11, 12, 13, 17, 21, 39, 49, 51, 57, 65, 86, 87, 88, 89, 95, 97, 98, 102, 103], "naiv": 3, "want": [3, 4, 8, 9, 11, 12, 13, 49, 51, 57, 70, 92, 96, 98, 99, 100, 101, 102, 103], "rather": [3, 4, 8, 9, 11, 12, 13, 43, 89, 91, 92, 96, 97], "unbound": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "dict": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21, 23, 24, 26, 39, 42, 46, 48, 51, 59, 65, 87, 89, 95, 98], "To": [3, 4, 8, 9, 11, 12, 13, 44, 46, 70, 72, 87, 89, 92, 95, 98, 99, 100, 102], "instanti": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 51, 98, 99], "specifi": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 20, 29, 39, 46, 47, 48, 49, 58, 59, 61, 65, 83, 84, 89, 96, 97, 98, 99, 100, 101, 102, 103], "valu": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 29, 30, 41, 42, 43, 45, 46, 47, 48, 49, 51, 55, 58, 61, 64, 66, 67, 68, 70, 72, 73, 76, 87, 88, 92, 95, 99, 100, 101], "pair": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 46], "well": [3, 4, 8, 9, 11, 12, 13, 46, 84, 91, 95, 96, 97, 100], "lead": [3, 4, 8, 11, 12, 13, 21, 39, 57, 65, 87, 102, 103], "ani": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 29, 33, 38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 59, 80, 87, 88, 89, 97, 98, 100, 102], "must": [3, 4, 5, 8, 9, 11, 12, 13, 43, 46, 48, 57, 59, 72, 84, 88, 92, 97, 98, 99, 100, 102, 103], "zero": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 26, 38, 48, 49, 51, 53, 55, 57, 70, 73, 78, 80, 81, 82, 88, 89, 97, 98, 101, 103], "retriev": [3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 36, 46, 47, 91, 96, 98], "along": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 46, 72, 78, 79, 83, 84, 86, 95, 102, 103], "possibl": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 26, 39, 45, 65, 80, 86, 87, 88, 89, 92, 98, 100], "obtain": [3, 8, 47, 80, 89, 92, 97, 98], "congruent": 3, "just": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 51, 52, 88, 89, 91, 95, 96, 97, 100, 102], "few": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 88, 89, 97], "charact": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "nth": 3, "ellipsi": [3, 4, 8, 9, 11, 12, 13, 103], "sub_tensordict": 3, "inplac": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 41, 47, 48, 51, 52, 98], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 30, 33, 34, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 51, 52, 57, 58, 65, 67, 68, 70, 73, 76, 78, 80, 83, 84, 86, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102], "set_": [3, 4, 8, 9, 11, 12, 13, 98], "content": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 80, 87, 88, 89, 95, 96, 97, 99, 102], "fault": 3, "toler": [3, 4, 8, 9, 11, 12, 13, 60], "latter": [3, 13, 46, 48, 50, 52], "match": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 21, 26, 39, 43, 44, 45, 46, 47, 48, 51, 57, 59, 60, 65, 73, 81, 82, 87, 88, 100], "found": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 46, 47, 49, 51, 95, 97, 98, 100], "new": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 29, 41, 47, 48, 49, 51, 52, 72, 88, 89, 92, 95, 98, 99, 100, 102, 103], "now": [3, 17, 86, 89, 92, 95, 97, 98, 100, 102], "place": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 41, 47, 49, 51, 52, 59, 89, 92, 99, 100, 101], "onto": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 41, 58, 61, 89, 99], "particular": [3, 13, 98, 102], "cuda": [3, 4, 8, 9, 11, 12, 13, 43, 91, 96, 97, 99], "reshap": [3, 4, 8, 9, 11, 12, 13, 52, 80, 87], "includ": [3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 77, 87, 88, 92, 98, 100, 102], "squeez": [3, 4, 8, 9, 11, 12, 13, 77, 87, 91, 96, 97], "unsqueez": [3, 4, 8, 9, 11, 12, 13, 77, 80, 97], "view": [3, 4, 8, 9, 11, 12, 13, 77, 89, 97], "permut": [3, 4, 8, 9, 11, 12, 13, 77, 100], "cat": [3, 4, 6, 7, 8, 9, 11, 12, 13, 87, 88, 102], "present": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 42, 47, 48, 51, 63, 70, 83, 102], "usual": [3, 4, 8, 9, 11, 12, 13, 47], "solut": [3, 43, 100], "wa": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 49, 102], "mai": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 41, 43, 46, 47, 49, 51, 59, 80, 87, 89, 92, 95, 100, 102], "desir": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 69, 76, 82, 87, 92, 99], "enforc": [3, 4, 8, 9, 11, 12, 13, 80, 87], "consist": [3, 4, 13, 84, 88, 102], "dure": [3, 4, 8, 9, 11, 12, 13, 43, 47, 49, 77, 91, 92, 97, 98, 101], "wrap": [3, 13, 43, 44, 46, 47, 48, 49, 50, 52, 57, 78, 86, 92, 100], "unbatchedtensor": 3, "ignor": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 47, 50, 52, 56, 59, 70, 86, 88], "flexibl": [3, 10, 20, 68, 80, 86, 89, 97, 100], "arbitrari": [3, 4, 8, 9, 11, 12, 13, 89, 100], "reshaped_td": 3, "power": [3, 4, 8, 9, 11, 12, 13, 88, 95, 100], "guid": 3, "nontensordata": [3, 4, 6, 8, 9, 10, 11, 12, 13, 20, 26, 76, 78, 89], "string": [3, 4, 8, 9, 10, 11, 12, 13, 43, 45, 48, 49, 51, 57, 66, 73, 92, 98], "As": [3, 87, 89, 92, 95, 96, 97, 100, 101, 102, 103], "metadata": [3, 4, 7, 8, 9, 11, 12, 13, 89, 99], "carri": [3, 102], "doe": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 45, 46, 47, 51, 52, 70, 86, 87, 88, 89, 98, 100], "get": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 30, 38, 46, 48, 49, 51, 72, 86, 87, 92, 95, 97, 100, 101, 102], "wherea": [3, 4, 8, 9, 11, 12, 13, 20], "assum": [3, 4, 5, 8, 9, 11, 12, 13, 43, 51, 57, 83, 97], "element": [3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 43, 46, 48, 57, 78, 83, 84, 88, 95, 102], "assign": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 36, 78, 80, 87, 100, 101], "list": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 26, 29, 36, 42, 43, 45, 46, 47, 49, 51, 52, 54, 57, 70, 73, 78, 86, 87, 95, 102], "nontensorstack": [3, 6, 7, 76], "third": 3, "contrast": [3, 4, 8, 9, 11, 12, 13, 89], "tell": 3, "happen": [3, 43, 100], "given": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 46, 47, 48, 51, 66, 74, 79, 95, 98, 100, 103], "construct": [3, 4, 5, 8, 9, 11, 12, 13, 46, 47, 59, 88, 95, 100], "refin": [3, 4, 8, 9, 11, 12, 13], "later": [3, 4, 8, 9, 11, 12, 13, 46, 87, 89, 91, 92, 97, 100], "semant": [3, 4, 8, 9, 11, 12, 13, 87], "refine_nam": [3, 4, 8, 9, 11, 12, 13], "z": [3, 4, 8, 9, 12, 13, 47, 48, 49, 51, 80], "y": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 47, 48, 49, 51, 52, 80, 87, 88, 89, 91, 96, 100], "renam": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "m": [3, 4, 8, 9, 11, 12, 13, 46], "n": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 91, 96, 98, 101, 102], "h": [3, 4, 8, 9, 11, 12, 13, 42, 97], "themselv": [3, 98], "convert": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 22, 25, 26, 27, 28, 51, 54, 66, 78, 80, 89, 97, 99, 102], "rand": [3, 43, 59, 68, 86, 89, 98, 99, 101, 102], "28": [3, 4, 8, 9, 11, 12, 13, 91, 95, 96], "randint": [3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 86, 87, 89, 97, 102], "tupl": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 28, 47, 48, 49, 51, 57, 58, 73, 88, 98, 102, 103], "altern": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 38, 39, 65, 66, 99], "defer": 3, "until": [3, 4, 8, 9, 11, 12, 13, 95, 97, 102], "item": [3, 4, 8, 9, 10, 11, 12, 13, 20, 80, 87, 89, 91, 96, 98, 102], "immedi": [3, 13], "perform": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 50, 52, 59, 70, 87, 91, 97, 98, 100, 102], "lazili": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 102], "lot": 3, "unnecessari": 3, "calcul": [3, 4, 8, 9, 11, 12, 13], "should": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 36, 38, 43, 44, 46, 48, 49, 50, 51, 52, 57, 58, 59, 71, 74, 76, 84, 88, 92, 95, 97, 98, 99], "_": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 48, 51, 57, 66, 68, 70, 92, 95, 100], "stacked_a": 3, "zeros_lik": [3, 4, 5, 8, 9, 11, 12, 13, 53], "caveat": 3, "expens": [3, 4, 8, 9, 11, 12, 13, 97, 102], "repeat": [3, 4, 8, 9, 11, 12, 13, 44, 91, 97, 100], "caus": [3, 4, 8, 9, 10, 11, 12, 13, 20, 80, 100], "overhead": [3, 4, 6, 7, 8, 9, 11, 12, 13, 43, 89, 92, 96, 97, 100], "avoid": [3, 4, 8, 9, 11, 12, 13, 48, 87, 97, 100], "contigu": [3, 4, 8, 9, 11, 12, 13, 73, 88, 91, 95, 96, 97, 99, 102], "further": 3, "mitig": 3, "come": [3, 4, 8, 9, 11, 12, 13, 86, 95, 97, 100], "meta": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 38, 87, 88, 89, 99], "metatensor": 3, "keep": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 26, 88, 92, 100], "track": [3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 47, 51], "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 26, 29, 33, 36, 39, 45, 46, 47, 49, 51, 54, 59, 65, 69, 80, 83, 84, 87, 89, 91, 92, 95, 96, 97], "entri": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 41, 42, 49, 51, 52, 59, 70, 71, 73, 83, 87, 89, 92, 98, 99, 100, 102, 103], "suppos": [3, 101], "foo": [3, 10], "someth": [3, 13], "automat": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 36, 39, 46, 57, 65, 78], "subsequ": [3, 11, 13, 51, 101], "iter": [3, 4, 6, 7, 8, 9, 11, 12, 13, 29, 39, 47, 48, 51, 65, 91, 95, 97, 101], "integr": [3, 13, 100], "callabl": [3, 4, 8, 9, 11, 12, 13, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 66, 92, 95], "accept": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 26, 92, 98, 100, 102], "underli": [3, 47, 88, 95], "reason": [3, 13, 87], "high": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "facilit": 3, "adopt": [3, 4, 8, 9, 11, 12, 13], "ident": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 26, 41, 43, 48, 76, 87, 91, 96], "previou": [3, 44, 47, 73, 89, 100], "box": [3, 80], "tutori": [3, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "pain": [3, 86], "inabl": [3, 86], "solv": [3, 86], "sequenc": [3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 17, 24, 35, 39, 40, 42, 47, 49, 51, 57, 60, 65, 72, 73, 79, 82, 86, 100], "know": [3, 4, 8, 9, 11, 12, 13, 86, 89, 92, 100], "mean": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 41, 43, 45, 46, 47, 86, 89, 92, 97, 100, 102], "predecessor": [3, 86], "necessari": [3, 4, 8, 9, 11, 12, 13, 51, 57, 86, 89, 95], "intermediate_x": 3, "second": [3, 4, 8, 9, 11, 12, 13, 44, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "combin": [3, 57, 89, 92, 97], "under": [3, 59, 89, 97, 98, 100, 101], "bunch": [3, 88, 102], "ask": [3, 4, 8, 9, 11, 12, 13, 92], "sub": [3, 4, 8, 9, 11, 12, 13, 47, 51, 57, 77, 86, 89, 92], "select_subsequ": [3, 51, 86], "onli": [3, 4, 5, 8, 9, 11, 12, 13, 17, 43, 46, 47, 48, 49, 51, 57, 70, 72, 84, 87, 88, 89, 92, 97, 98, 102], "indispens": 3, "satisfi": 3, "those": [3, 4, 8, 9, 10, 11, 12, 13, 17, 46, 47, 51, 59, 88, 99, 102, 103], "vmap": [3, 4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 51], "capabl": [3, 87, 89], "t": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 35, 38, 40, 41, 42, 48, 70, 72, 73, 77, 79, 80, 87, 89, 91, 96, 97], "stack_dim": [4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 76, 95, 102], "int": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 25, 26, 27, 28, 35, 39, 40, 41, 43, 44, 46, 48, 58, 60, 65, 72, 73, 75, 79, 80, 82, 83, 84, 95, 97], "hook_out": 4, "hook_in": 4, "str": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38, 39, 41, 42, 45, 46, 48, 51, 53, 57, 58, 61, 65, 66, 69, 70, 73, 74, 75, 80, 87, 89], "stack_dim_nam": [4, 8], "strict_shap": [4, 8], "togeth": [4, 42, 44, 57, 59, 73, 97, 100], "default": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 29, 30, 36, 38, 39, 41, 43, 46, 47, 48, 51, 52, 55, 56, 57, 58, 59, 60, 61, 65, 70, 72, 73, 76, 80, 83, 84, 88, 92, 98, 99, 100, 101], "behaviour": [4, 5, 8, 9, 11, 12, 13, 49, 51, 68, 70, 77, 87, 89, 102], "them": [4, 8, 9, 11, 12, 13, 17, 43, 46, 50, 51, 52, 73, 87, 88, 92, 95, 97, 100, 102], "affect": [4, 6, 7, 8, 9, 11, 12, 13, 47, 51], "ndimens": [4, 8, 9, 11, 12, 13], "befor": [4, 8, 9, 11, 12, 13, 43, 77, 88, 97, 98, 100, 102], "td_stack": [4, 17], "tolist": [4, 6, 7, 8, 9, 11, 12, 13], "length": [4, 8, 9, 11, 12, 13, 48, 83, 103], "whether": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 36, 43, 44, 56, 58, 68, 71, 76], "as_nested_tensor": [4, 8], "as_padded_tensor": [4, 8], "as_list": [4, 8], "argument": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 39, 41, 42, 43, 46, 47, 48, 49, 51, 52, 57, 58, 59, 65, 80, 88, 89, 92, 98, 99, 100, 102], "control": [4, 8, 9, 11, 12, 13, 43, 48, 51, 59, 68, 76, 78, 89, 99, 102], "mismatch": [4, 8, 9, 11, 12, 13], "pad": [4, 8, 9, 11, 12, 13, 73], "occur": [4, 8, 9, 11, 12, 13, 49, 51], "regardless": [4, 8, 9, 11, 12, 13], "ab": [4, 8, 9, 11, 12, 13], "absolut": [4, 8, 9, 11, 12, 13, 60], "abs_": [4, 8, 9, 11, 12, 13], "aco": [4, 8, 9, 11, 12, 13], "acos_": [4, 8, 9, 11, 12, 13], "add": [4, 8, 9, 11, 12, 13, 53, 58, 88, 92, 97, 98, 100], "_tensorcollect": [4, 8, 9, 11, 12, 13, 39, 65], "tensorcollect": [4, 8, 9, 11, 12, 13, 37, 38, 39, 41, 65, 75], "alpha": [4, 8, 9, 11, 12, 13], "float": [4, 5, 6, 7, 8, 9, 11, 12, 13, 26, 55, 58, 60, 64, 66, 72, 73, 91, 95, 96], "scale": [4, 8, 9, 11, 12, 13, 46, 47, 51, 58, 59, 61, 63, 68, 86, 92, 97, 100], "text": [4, 8, 9, 11, 12, 13, 89], "_i": [4, 8, 9, 11, 12, 13], "keyword": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 39, 41, 42, 43, 46, 47, 48, 51, 52, 57, 58, 59, 65, 80, 88, 92, 98, 99, 100], "number": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 44, 46, 48, 57, 58, 60, 61, 63, 66, 72, 73, 91, 92, 96, 97, 98, 100, 102], "multipli": [4, 8, 9, 11, 12, 13, 88], "exclus": [4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 70, 80, 88], "exactli": [4, 8, 9, 11, 12, 13, 43, 50, 88, 92, 102], "intersect": [4, 8, 9, 11, 12, 13, 88], "consid": [4, 8, 9, 11, 12, 13, 47, 48, 51, 60, 87, 88, 95, 97, 100, 102], "miss": [4, 8, 9, 11, 12, 13, 47, 48, 51, 89], "both": [4, 5, 8, 9, 11, 12, 13, 80, 83, 88, 92, 95, 97, 100, 101], "side": [4, 8, 9, 11, 12, 13, 88, 100], "add_": [4, 8, 9, 11, 12, 13], "addcdiv": [4, 8, 9, 11, 12, 13], "other1": [4, 8, 9, 11, 12, 13], "other2": [4, 8, 9, 11, 12, 13], "wise": [4, 8, 9, 11, 12, 13, 88], "divis": [4, 8, 9, 11, 12, 13, 88], "scalar": [4, 8, 9, 11, 12, 13, 55], "frac": [4, 8, 9, 11, 12, 13], "tensor1": [4, 8, 9, 11, 12, 13, 83, 84], "tensor2": [4, 8, 9, 11, 12, 13, 83, 84], "broadcast": [4, 8, 9, 11, 12, 13], "floattensor": [4, 8, 9, 11, 12, 13], "doubletensor": [4, 8, 9, 11, 12, 13], "real": [4, 8, 9, 11, 12, 13, 46, 74, 92, 95], "otherwis": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 36, 41, 43, 46, 47, 48, 49, 52, 57, 83, 84, 89], "integ": [4, 5, 8, 9, 10, 11, 12, 13, 95], "numer": [4, 8, 9, 11, 12, 13], "denomin": [4, 8, 9, 11, 12, 13], "addcdiv_": [4, 8, 9, 11, 12, 13], "addcmul": [4, 8, 9, 11, 12, 13], "addcmul_": [4, 8, 9, 11, 12, 13], "null": [4, 8, 9, 11, 12, 13], "boolean": [4, 8, 9, 10, 11, 12, 13, 83, 87], "upon": [4, 8, 9, 11, 12, 13], "amax": [4, 8, 9, 11, 12, 13], "no_default": [4, 8, 9, 11, 12, 13], "_nodefault": [4, 8, 9, 11, 12, 13], "keepdim": [4, 8, 9, 11, 12, 13], "reduc": [4, 8, 9, 11, 12, 13, 49, 100], "maximum": [4, 8, 9, 11, 12, 13, 39, 57, 65], "max": [4, 8, 9, 11, 12, 13], "return_indic": [4, 8, 9, 11, 12, 13, 84], "amin": [4, 8, 9, 11, 12, 13], "minimum": [4, 8, 9, 11, 12, 13, 55, 58, 61, 66], "min": [4, 8, 9, 11, 12, 13], "append": [4, 8, 9, 11, 12, 13, 95], "analog": [4, 8], "noth": [4, 8], "fn": [4, 8, 9, 11, 12, 13, 61], "filter_empti": [4, 8, 9, 11, 12, 13], "propagate_lock": [4, 8, 9, 11, 12, 13], "call_on_nest": [4, 8, 9, 11, 12, 13], "constructor_kwarg": [4, 8, 9, 11, 12, 13], "signatur": [4, 8, 9, 11, 12, 13, 47, 48, 49, 51, 70, 100], "receiv": [4, 6, 7, 8, 9, 11, 12, 13, 43, 95], "unnam": [4, 8, 9, 11, 12, 13, 57], "modifi": [4, 6, 7, 8, 9, 11, 12, 13, 20, 27, 46, 47, 49, 51, 52, 59, 80, 88, 89, 91, 92, 96, 100], "made": [4, 8, 9, 11, 12, 13, 100], "keyerror": [4, 8, 9, 11, 12, 13], "filter": [4, 8, 9, 11, 12, 13, 92, 100], "lower": [4, 8, 9, 11, 12, 13, 92], "cost": [4, 8, 9, 10, 11, 12, 13, 20, 80], "won": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 70, 77, 89], "destroi": [4, 8, 9, 11, 12, 13], "leaf": [4, 8, 9, 11, 12, 13, 46, 59, 84], "therebi": [4, 8, 9, 11, 12, 13], "kept": [4, 8, 9, 11, 12, 13], "left": [4, 8, 9, 11, 12, 13, 88, 102], "untouch": [4, 6, 7, 8, 9, 11, 12, 13, 24, 102], "lock": [4, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 41, 80, 88, 97], "produc": [4, 5, 8, 9, 11, 12, 13, 46, 47, 62, 95], "scenario": [4, 8, 9, 11, 12, 13, 95], "propag": [4, 8, 9, 11, 12, 13, 51, 77], "fine": [4, 8, 9, 11, 12, 13, 48, 51], "grain": [4, 8, 9, 11, 12, 13, 48, 51], "leav": [4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 26, 41, 57, 59, 70, 87, 100], "care": [4, 8, 9, 11, 12, 13, 46, 50, 52, 70], "mean_tensor_onli": [4, 8, 9, 11, 12, 13], "val": [4, 8, 9, 11, 12, 13, 76, 97], "is_tensor_collect": [4, 8, 9, 11, 12, 13], "runtimeerror": [4, 8, 9, 11, 12, 13, 47], "unexpect": [4, 8, 9, 11, 12, 13, 49, 51], "td_mean": [4, 8, 9, 11, 12, 13], "mean_ani": [4, 8, 9, 11, 12, 13], "recurs": [4, 6, 7, 8, 9, 11, 12, 13, 49, 98], "equal": [4, 8, 9, 11, 12, 13, 72, 87, 95], "silent": [4, 8, 9, 11, 12, 13, 43, 46, 50, 52], "wrong": [4, 8, 9, 11, 12, 13, 43], "right": [4, 8, 9, 11, 12, 13, 43, 80, 81, 82, 88, 100], "transformed_in": [4, 8, 9, 11, 12, 13], "td_1": [4, 8, 9, 11, 12, 13], "td_2": [4, 8, 9, 11, 12, 13], "int64": [4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 42, 59, 86, 87, 91, 95, 96, 97], "apply_": [4, 8, 9, 11, 12, 13], "copi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 41, 44, 47, 86, 89, 99], "as_tensor": [4, 8, 9, 11, 12, 13], "plain": [4, 8, 9, 11, 12, 13, 87], "asin": [4, 8, 9, 11, 12, 13], "asin_": [4, 8, 9, 11, 12, 13], "atan": [4, 8, 9, 11, 12, 13], "atan_": [4, 8, 9, 11, 12, 13], "auto_batch_size_": [4, 8, 9, 11, 12, 13], "batch_dim": [4, 6, 7, 8, 9, 11, 12, 13, 18, 20, 21, 22, 25, 26, 27, 28, 102, 103], "keep_compliant_s": [4, 8, 9, 11, 12, 13], "up": [4, 8, 9, 10, 11, 12, 13, 20, 70, 80, 88, 89, 91, 95, 98, 100], "long": [4, 8, 9, 11, 12, 13, 21, 39, 49, 51, 65, 88, 97, 103], "compliant": [4, 8, 9, 11, 12, 13], "auto_device_": [4, 8, 9, 11, 12, 13], "uniqu": [4, 8, 9, 11, 12, 13, 76, 84], "edit": [4, 8, 9, 11, 12, 13], "describ": [4, 6, 7, 8, 9, 11, 12, 13], "correspond": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 46, 48, 59, 88, 89, 92, 98, 102, 103], "repes": [4, 8, 9, 11, 12, 13], "relev": [4, 8, 9, 11, 12, 13, 51], "video": [4, 8, 9, 11, 12, 13], "w": [4, 8, 9, 11, 12, 13, 51, 97], "channel": [4, 8, 9, 11, 12, 13], "spacial": [4, 8, 9, 11, 12, 13], "initi": [4, 6, 7, 8, 9, 10, 11, 12, 13, 44, 58, 87], "ie": [4, 8, 9, 11, 12, 13, 47, 48, 49, 51, 77, 89, 102], "infer": [4, 8, 9, 11, 12, 13, 46, 92], "dynam": [4, 8, 9, 11, 12, 13, 43, 49, 77, 100], "reset": [4, 8, 9, 11, 12, 13, 49, 51, 87, 88], "bfloat16": [4, 8, 9, 11, 12, 13], "bitwise_and": [4, 8, 9, 11, 12, 13], "bitwis": [4, 8, 9, 11, 12, 13], "AND": [4, 8, 9, 11, 12, 13, 47, 51], "land": [4, 8, 9, 11, 12, 13], "byte": [4, 8, 9, 11, 12, 13], "count_dupl": [4, 8, 9, 11, 12, 13], "count": [4, 8, 9, 11, 12, 13], "duplic": [4, 5, 8, 9, 11, 12, 13, 44, 84, 86], "strictli": [4, 8, 9, 11, 12, 13, 87, 100], "discard": [4, 8, 9, 11, 12, 13, 51, 89, 100], "id": [4, 8, 9, 11, 12, 13, 43], "twice": [4, 8, 9, 11, 12, 13, 72, 89], "classmethod": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 45, 95, 96, 97], "concaten": [4, 6, 7, 8, 9, 11, 12, 13, 15, 51, 87, 100], "equival": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 38, 42, 57, 58, 79, 98], "cat_from_tensordict": [4, 8, 9, 11, 12, 13], "sort": [4, 8, 9, 11, 12, 13, 43, 57], "union": [4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 33, 39, 42, 43, 54, 58, 60, 65, 73, 87, 89], "nestedkei": [4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 29, 42, 43, 46, 47, 48, 51, 52, 54, 59, 73, 83, 84, 95], "alphabet": [4, 8, 9, 11, 12, 13], "order": [4, 8, 9, 11, 12, 13, 47, 48, 51, 57, 73, 86, 89, 95, 100], "accordingli": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 70], "incur": [4, 6, 7, 8, 9, 11, 12, 13, 96, 100], "against": [4, 8, 9, 10, 11, 12, 13, 20, 80, 83, 97], "destin": [4, 6, 7, 8, 9, 10, 11, 12, 13, 73, 89], "cat_tensor": [4, 8, 9, 11, 12, 13], "keep_entri": [4, 8, 9, 11, 12, 13], "remov": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 51, 84, 99, 100, 102], "delet": [4, 8, 9, 11, 12, 13, 98, 100], "ceil": [4, 8, 9, 11, 12, 13], "ceil_": [4, 8, 9, 11, 12, 13], "chunk": [4, 5, 8, 9, 11, 12, 13, 89, 92, 95, 100, 102], "24": [4, 8, 9, 11, 12, 13, 95, 96], "8": [4, 8, 9, 11, 12, 13, 46, 48, 51, 73, 83, 84, 86, 91, 95, 96, 97, 100], "9": [4, 6, 7, 8, 9, 11, 12, 13, 27, 76, 83, 84, 87, 95, 96], "16": [4, 8, 9, 11, 12, 13, 95], "17": [4, 8, 9, 11, 12, 13, 95], "18": [4, 8, 9, 11, 12, 13, 95, 96], "19": [4, 8, 9, 11, 12, 13, 95, 96], "clamp": [4, 8, 9, 11, 12, 13, 88], "let": [4, 8, 9, 11, 12, 13, 70, 92, 95, 100, 101], "min_valu": [4, 8, 9, 11, 12, 13], "max_valu": [4, 8, 9, 11, 12, 13], "respect": [4, 8, 9, 11, 12, 13, 20, 70, 97], "y_i": [4, 8, 9, 11, 12, 13], "x_i": [4, 8, 9, 11, 12, 13], "_valu": [4, 8, 9, 11, 12, 13], "bound": [4, 8, 9, 11, 12, 13], "Or": [4, 8, 9, 11, 12, 13], "upper": [4, 8, 9, 11, 12, 13], "clamp_max": [4, 8, 9, 11, 12, 13], "superior": [4, 8, 9, 11, 12, 13], "clamp_max_": [4, 8, 9, 11, 12, 13], "clamp_min": [4, 8, 9, 11, 12, 13, 92], "inferior": [4, 8, 9, 11, 12, 13], "clamp_min_": [4, 8, 9, 11, 12, 13], "clear": [4, 8, 9, 11, 12, 13], "eras": [4, 8, 9, 11, 12, 13], "clear_device_": [4, 8, 9, 11, 12, 13], "clear_refs_for_compile_": [4, 8, 9, 11, 12, 13], "weakref": [4, 8, 9, 11, 12, 13], "region": [4, 8, 9, 11, 12, 13], "safe": [4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 41, 89], "whenev": [4, 8, 9, 11, 12, 13, 47, 49, 51, 70, 102], "hit": [4, 8, 9, 11, 12, 13], "_dynamo": [4, 8, 9, 11, 12, 13], "exc": [4, 8, 9, 11, 12, 13], "unsupport": [4, 8, 9, 11, 12, 13], "reconstruct": [4, 8, 9, 11, 12, 13, 19, 88, 89, 92], "weakrefvari": [4, 8, 9, 11, 12, 13], "subclass": [4, 8, 9, 10, 11, 12, 13, 33, 46, 48, 49, 50, 52, 87, 100], "subtyp": [4, 8, 9, 11, 12, 13, 48, 89], "to_tensordict": [4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 102], "tree": [4, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 41, 89, 97], "unlik": [4, 8, 9, 11, 12, 13, 49, 89, 98, 100], "op": [4, 8, 9, 11, 12, 13, 88, 92, 100], "arithmet": [4, 8, 9, 11, 12, 13], "choic": [4, 6, 7, 8, 9, 11, 12, 13, 58, 61, 89, 96, 97], "frequent": [4, 8, 9, 11, 12, 13], "usag": [4, 8, 9, 11, 12, 13, 47, 49, 51, 89, 92, 100], "complex128": [4, 8, 9, 11, 12, 13], "complex32": [4, 8, 9, 11, 12, 13], "complex64": [4, 8, 9, 11, 12, 13], "consolid": [4, 8, 9, 11, 12, 13, 19], "filenam": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 38], "num_thread": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 75, 89], "non_block": [4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38], "return_earli": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 75], "use_buff": [4, 8, 9, 11, 12, 13], "share_memori": [4, 8, 9, 11, 12, 13], "pin_memori": [4, 8, 9, 11, 12, 13, 92, 97], "thread": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 89, 95, 97], "copy_": [4, 8, 9, 11, 12, 13], "futur": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 87, 102], "last": [4, 8, 9, 11, 12, 13, 46, 47, 100], "distant": [4, 8, 9, 11, 12, 13], "nf": [4, 8, 9, 11, 12, 13], "pin": [4, 8, 9, 11, 12, 13], "alongisd": [4, 8, 9, 11, 12, 13], "effect": [4, 6, 7, 8, 9, 11, 12, 13, 20, 27], "pickl": [4, 8, 9, 11, 12, 13, 87, 89], "unpickl": [4, 8, 9, 11, 12, 13, 89], "isn": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 87, 100], "avail": [4, 8, 9, 11, 12, 13, 46, 47, 87, 92], "tempfil": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 89], "tqdm": [4, 8, 9, 11, 12, 13, 97], "timer": [4, 8, 9, 11, 12, 13, 100], "data_consolid": [4, 8, 9, 11, 12, 13], "data_ptr": [4, 8, 9, 11, 12, 13], "v": [4, 8, 9, 11, 12, 13, 42], "untyped_storag": [4, 8, 9, 11, 12, 13], "data_c": [4, 8, 9, 11, 12, 13], "numel": [4, 8, 9, 11, 12, 13, 97], "dump": [4, 6, 7, 8, 9, 10, 11, 12, 13, 89], "global": [4, 8, 9, 11, 12, 13, 36, 43, 46, 47, 70, 100], "adaptive_autorang": [4, 8, 9, 11, 12, 13, 100], "shallow": [4, 8, 9, 11, 12, 13], "update_": [4, 8, 9, 11, 12, 13, 87], "block": [4, 8, 9, 11, 12, 13, 43, 86, 100], "copy_at_": [4, 8, 9, 11, 12, 13], "update_at_": [4, 8, 9, 11, 12, 13], "co": [4, 8, 9, 11, 12, 13, 47], "cos_": [4, 8, 9, 11, 12, 13], "cosh": [4, 8, 9, 11, 12, 13], "cosh_": [4, 8, 9, 11, 12, 13], "create_nest": [4, 8, 9, 11, 12, 13], "overwritten": [4, 8, 9, 11, 12, 13, 50, 70, 89, 98, 100], "cummax": [4, 8, 9, 11, 12, 13], "cumul": [4, 8, 9, 11, 12, 13], "reduct": [4, 8, 9, 11, 12, 13], "return_argmin": [4, 8, 9, 11, 12, 13], "idend": [4, 8, 9, 11, 12, 13], "within": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 41, 46, 48, 50, 52, 57, 78, 80, 84, 86, 88, 92, 95, 100], "d": [4, 8, 9, 11, 12, 13, 21, 42, 46, 47, 49, 51, 54, 57, 59, 68, 91, 96], "return_typ": [4, 8, 9, 11, 12, 13], "cummin": [4, 8, 9, 11, 12, 13], "displai": [4, 8, 9, 11, 12, 13], "reflect": [4, 8, 9, 11, 12, 13], "lazy_stack": [4, 6, 7, 8, 9, 11, 12, 13, 24, 95, 102], "del_": [4, 8, 9, 11, 12, 13, 98], "densifi": [4, 8, 9, 11, 12, 13, 95], "layout": [4, 8, 9, 11, 12, 13, 95], "stride": [4, 8, 9, 11, 12, 13, 95], "attempt": [4, 6, 7, 8, 9, 11, 12, 13, 40, 46, 47, 87, 95], "depth": [4, 8, 9, 11, 12, 13], "detach": [4, 8, 9, 11, 12, 13, 43], "detach_": [4, 8, 9, 11, 12, 13], "incl": [4, 8, 9, 12, 13], "live": [4, 8, 9, 12, 13, 89], "appropri": [4, 8, 9, 12, 13, 80], "div": [4, 8, 9, 11, 12, 13], "divid": [4, 8, 9, 11, 12, 13, 100], "promot": [4, 8, 9, 11, 12, 13], "divisor": [4, 8, 9, 11, 12, 13], "div_": [4, 8, 9, 11, 12, 13], "doubl": [4, 8, 9, 11, 12, 13], "copy_exist": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 75, 89], "share_non_tensor": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 75], "robust_kei": [4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38, 41, 75], "proxi": [4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 75], "reproduc": [4, 8, 9, 11, 12, 13, 74], "entry_class": [4, 8, 9, 11, 12, 13], "isinst": [4, 8, 9, 11, 12, 13, 43, 80, 87, 89, 98, 100, 102], "erf": [4, 8, 9, 11, 12, 13], "erf_": [4, 8, 9, 11, 12, 13], "erfc": [4, 8, 9, 11, 12, 13], "erfc_": [4, 8, 9, 11, 12, 13], "exclud": [4, 8, 9, 11, 12, 13], "modif": [4, 8, 9, 11, 12, 13], "either": [4, 8, 9, 11, 12, 13, 17, 43, 57, 87, 92, 98, 99, 102], "prune": [4, 8, 9, 11, 12, 13], "exp": [4, 8, 9, 11, 12, 13, 58, 61, 66], "exp_": [4, 8, 9, 11, 12, 13], "expand": [4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 24, 44, 46, 51, 81, 82, 89, 97], "accord": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 92], "td_expand": [4, 8, 9, 11, 12, 13], "expand_a": [4, 8, 9, 11, 12, 13, 80, 97], "basi": [4, 8, 9, 11, 12, 13], "expm1": [4, 8, 9, 11, 12, 13], "expm1_": [4, 8, 9, 11, 12, 13], "extend": [4, 8, 47, 88, 95], "fill_": [4, 8, 9, 11, 12, 13], "filter_empty_": [4, 8, 9, 11, 12, 13], "filter_non_tensor_data": [4, 8, 9, 11, 12, 13], "flatten": [4, 6, 7, 8, 9, 10, 11, 12, 13, 91, 96], "start_dim": [4, 8, 9, 11, 12, 13, 91, 96], "end_dim": [4, 8, 9, 11, 12, 13, 91, 96], "60": [4, 8, 9, 11, 12, 13, 83, 84, 95, 96], "12": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 52, 83, 95, 96, 102], "td_flat": [4, 8, 9, 11, 12, 13], "14": [4, 8, 9, 11, 12, 13, 95, 96], "15": [4, 8, 9, 11, 12, 13, 92, 95], "20": [4, 8, 9, 11, 12, 13, 83, 84, 95, 96], "21": [4, 8, 9, 11, 12, 13, 95, 96], "22": [4, 8, 9, 11, 12, 13, 95], "23": [4, 8, 9, 11, 12, 13, 95], "25": [4, 8, 9, 11, 12, 13, 95, 97], "26": [4, 8, 9, 11, 12, 13, 95, 96, 97], "27": [4, 6, 7, 8, 9, 11, 12, 13, 27, 95, 96], "29": [4, 8, 9, 11, 12, 13, 95, 96], "30": [4, 8, 9, 11, 12, 13, 83, 84, 95], "31": [4, 8, 9, 11, 12, 13, 95], "33": [4, 8, 9, 11, 12, 13, 95], "34": [4, 8, 9, 11, 12, 13, 90, 94, 95], "35": [4, 8, 9, 11, 12, 13, 95], "36": [4, 8, 9, 11, 12, 13, 91, 92, 95, 96], "37": [4, 8, 9, 11, 12, 13, 95], "38": [4, 8, 9, 11, 12, 13, 95, 96], "39": [4, 8, 9, 11, 12, 13, 95], "40": [4, 8, 9, 11, 12, 13, 83, 84, 95, 96], "41": [4, 8, 9, 11, 12, 13, 95], "42": [4, 8, 9, 11, 12, 13, 95, 97], "43": [4, 8, 9, 11, 12, 13, 95], "44": [4, 8, 9, 11, 12, 13, 95], "45": [4, 8, 9, 11, 12, 13, 91, 95], "46": [4, 8, 9, 11, 12, 13, 95, 96], "47": [4, 8, 9, 11, 12, 13, 95], "48": [4, 8, 9, 11, 12, 13, 95, 96], "49": [4, 8, 9, 11, 12, 13, 95], "51": [4, 8, 9, 11, 12, 13, 95], "52": [4, 8, 9, 11, 12, 13, 95, 97], "53": [4, 8, 9, 11, 12, 13, 95], "54": [4, 8, 9, 11, 12, 13, 91, 95], "55": [4, 8, 9, 11, 12, 13, 95, 96], "56": [4, 8, 9, 11, 12, 13, 95], "57": [4, 8, 9, 11, 12, 13, 95], "58": [4, 8, 9, 11, 12, 13, 92, 95], "59": [4, 8, 9, 11, 12, 13, 90, 91, 94, 95], "flatten_kei": [4, 8, 9, 11, 12, 13, 98], "is_leaf": [4, 8, 9, 11, 12, 13], "flat": [4, 8, 9, 11, 12, 13], "lost": [4, 8, 9, 11, 12, 13], "over": [4, 8, 9, 11, 12, 13, 47, 48, 51, 87, 91, 96, 97], "prevent": [4, 5, 8, 9, 11, 12, 13, 89, 97], "mark": [4, 8, 9, 11, 12, 13], "certain": [4, 8, 9, 11, 12, 13], "leaves_onli": [4, 8, 9, 11, 12, 13, 98], "cl": [4, 6, 7, 8, 9, 11, 12, 13, 80, 95, 96, 97], "travers": [4, 8, 9, 11, 12, 13], "include_nest": [4, 8, 9, 11, 12, 13, 98], "word": [4, 8, 9, 11, 12, 13, 43, 57, 89], "children": [4, 8, 9, 11, 12, 13, 49], "practic": [4, 8, 9, 11, 12, 13, 66], "is_leaf_nontensor": [4, 8, 9, 11, 12, 13], "default_is_leaf": [4, 8, 9, 11, 12, 13], "unflatten_kei": [4, 8, 9, 11, 12, 13, 98], "particularli": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 98], "state": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 48, 58, 89], "mimic": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 89, 98, 99], "ddp_model": [4, 8, 9, 11, 12, 13], "ao": [4, 8, 9, 11, 12, 13], "quantiz": [4, 8, 9, 11, 12, 13], "quantwrapp": [4, 8, 9, 11, 12, 13], "state_dict": [4, 6, 7, 8, 9, 10, 11, 12, 13, 89], "bia": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 55, 61, 64, 66, 91, 92, 96, 98], "weight": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 27, 49, 89, 92, 98], "model_state_dict": [4, 8, 9, 11, 12, 13], "load_state_dict": [4, 6, 7, 8, 9, 10, 11, 12, 13, 89], "float16": [4, 8, 9, 11, 12, 13], "float64": [4, 8, 9, 11, 12, 13], "floor": [4, 8, 9, 11, 12, 13], "floor_": [4, 8, 9, 11, 12, 13], "frac_": [4, 8, 9, 11, 12, 13], "from_ani": [4, 6, 7, 8, 9, 11, 12, 13], "obj": [4, 6, 7, 8, 9, 11, 12, 13, 18, 20, 28, 51, 54, 87], "auto_batch_s": [4, 6, 7, 8, 9, 11, 12, 13, 18, 20, 21, 22, 25, 26, 27, 28, 39, 57, 65], "less": [4, 6, 7, 8, 9, 11, 12, 13, 72], "restrict": [4, 6, 7, 8, 9, 11, 12, 13, 43, 87], "dataclass": [4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 80, 96, 97], "custom": [4, 6, 7, 8, 9, 11, 12, 13, 53, 66, 86, 87, 96, 97], "heurist": [4, 6, 7, 8, 9, 11, 12, 13, 47], "approach": [4, 6, 7, 8, 9, 11, 12, 13, 86, 89, 97], "extra": [4, 6, 7, 8, 9, 11, 12, 13, 57, 88], "opinion": [4, 6, 7, 8, 9, 11, 12, 13], "term": [4, 6, 7, 8, 9, 11, 12, 13, 66], "strategi": [4, 6, 7, 8, 9, 11, 12, 13, 87], "defin": [4, 6, 7, 8, 9, 11, 12, 13, 20, 36, 46, 50, 52, 80, 92, 95, 96, 97, 100], "full": [4, 5, 6, 7, 8, 9, 11, 12, 13, 20, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "represent": [4, 6, 7, 8, 9, 11, 12, 13, 34, 95], "from_dataclass": [4, 6, 7, 8, 9, 11, 12, 13], "namedtupl": [4, 6, 7, 8, 9, 11, 12, 13, 25, 26, 88], "from_namedtupl": [4, 6, 7, 8, 9, 11, 12, 13], "from_dict": [4, 6, 7, 8, 9, 11, 12, 13, 87], "from_tupl": [4, 6, 7, 8, 9, 11, 12, 13], "numpi": [4, 6, 7, 8, 9, 11, 12, 13, 27, 78, 88, 99], "from_struct_arrai": [4, 6, 7, 8, 9, 11, 12, 13], "hdf5": [4, 6, 7, 8, 9, 11, 12, 13, 22], "from_h5": [4, 6, 7, 8, 9, 11, 12, 13], "dest_cl": [4, 6, 7, 8, 9, 11, 12, 13, 20], "as_tensorclass": [4, 6, 7, 8, 9, 11, 12, 13], "determin": [4, 6, 7, 8, 9, 11, 12, 13, 20, 36, 39, 57, 59, 65, 89, 101], "deleg": [4, 6, 7, 8, 9, 11, 12, 13], "convers": [4, 6, 7, 8, 9, 11, 12, 13, 36, 78], "free": [4, 6, 7, 8, 9, 11, 12, 13, 43, 100], "deriv": [4, 6, 7, 8, 9, 11, 12, 13, 20], "unless": [4, 6, 7, 8, 9, 11, 12, 13, 44, 70, 77, 89, 92], "typeerror": [4, 6, 7, 8, 9, 11, 12, 13, 20, 46, 47], "distinct": [4, 6, 7, 8, 9, 11, 12, 13], "while": [4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 46, 47, 50, 52, 87, 89, 95, 97, 99], "applic": [4, 6, 7, 8, 9, 11, 12, 13, 24, 74, 92, 95], "input_dict": [4, 8, 9, 11, 12, 13, 21, 39, 65], "sourc": [4, 5, 6, 7, 8, 9, 11, 12, 13, 39, 57, 65, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "exclusinv": [4, 8, 11, 12, 13], "note": [4, 6, 7, 8, 9, 11, 12, 13, 17, 26, 46, 47, 51, 87, 91, 92, 96, 97, 100, 102], "__maximum__": [4, 8, 11, 12, 13], "smaller": [4, 8, 11, 12, 13], "sie": [4, 8, 11, 12, 13, 21, 39, 65], "input_td": [4, 8, 11, 12, 13, 21, 39, 65], "from_dict_inst": [4, 8, 9, 11, 12, 13], "myclass": [4, 8, 9, 11, 12, 13, 33, 51, 54, 87, 89], "to_dict": [4, 8, 9, 11, 12, 13], "mode": [4, 6, 7, 8, 9, 11, 12, 13, 45, 46, 68, 70, 76, 77, 78, 92, 100], "r": [4, 6, 7, 8, 9, 11, 12, 13, 46, 66], "h5": [4, 6, 7, 8, 9, 11, 12, 13, 88], "key1": [4, 6, 7, 8, 9, 11, 12, 13], "key2": [4, 6, 7, 8, 9, 11, 12, 13], "from_modul": [4, 6, 7, 8, 9, 11, 12, 13, 46, 48, 49, 51, 88, 89], "as_modul": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24], "use_state_dict": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24], "param": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 46, 47, 48, 49, 51, 59, 60, 68, 88, 92, 98], "unflatten": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24], "hook": [4, 6, 7, 8, 9, 11, 12, 13, 23, 24, 46, 50, 52, 86], "transformerdecod": [4, 8, 9, 11, 12, 13, 23], "decoder_lay": [4, 8, 9, 11, 12, 13, 23], "transformerdecoderlay": [4, 8, 9, 11, 12, 13, 23], "nhead": [4, 8, 9, 11, 12, 13, 23], "d_model": [4, 8, 9, 11, 12, 13, 23], "num_lay": [4, 8, 9, 11, 12, 13, 23], "layer": [4, 8, 9, 11, 12, 13, 23, 97], "linear1": [4, 8, 9, 11, 12, 13, 23, 100], "2048": [4, 8, 9, 11, 12, 13, 23], "expand_ident": [4, 6, 7, 8, 9, 11, 12, 13, 24], "ensebml": [4, 6, 7, 8, 9, 11, 12, 13, 24], "expect": [4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 38, 44, 49, 51, 57, 70, 80, 84, 92], "densli": [4, 6, 7, 8, 9, 11, 12, 13, 24], "dens": [4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 40, 102], "There": [4, 6, 7, 8, 9, 11, 12, 13, 24, 89, 100], "reinstanti": [4, 6, 7, 8, 9, 11, 12, 13, 24], "whilst": [4, 6, 7, 8, 9, 11, 12, 13, 24], "tempt": [4, 6, 7, 8, 9, 11, 12, 13, 24], "orign": [4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 49, 51, 89], "rememb": [4, 6, 7, 8, 9, 11, 12, 13, 24, 89], "built": [4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 26, 92, 95, 100], "longer": [4, 6, 7, 8, 9, 11, 12, 13, 24], "reserv": [4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 80], "veri": [4, 6, 7, 8, 9, 11, 12, 13, 24, 87, 91, 92, 96], "being": [4, 6, 7, 8, 9, 11, 12, 13, 24, 43, 48, 57, 59, 68, 69, 70, 87, 89, 92, 99, 102], "manual_se": [4, 6, 7, 8, 9, 11, 12, 13, 24, 47, 51, 68], "empty_modul": [4, 6, 7, 8, 9, 11, 12, 13, 24], "n_model": [4, 6, 7, 8, 9, 11, 12, 13, 24], "exec_modul": [4, 6, 7, 8, 9, 11, 12, 13, 24], "to_modul": [4, 6, 7, 8, 9, 11, 12, 13, 24, 46, 48, 51, 88, 102], "sinc": [4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 46, 50, 52, 57, 76, 80, 86, 89, 91, 92, 96, 97, 102, 103], "backprop": [4, 6, 7, 8, 9, 11, 12, 13, 24], "sum": [4, 6, 7, 8, 9, 11, 12, 13, 24, 68, 91, 96], "norm": [4, 6, 7, 8, 9, 11, 12, 13, 24, 43], "thing": [4, 6, 7, 8, 9, 11, 12, 13, 24, 70, 98], "slightli": [4, 6, 7, 8, 9, 11, 12, 13, 24, 87, 97], "exclusive_field": [4, 6, 7, 8, 9, 11, 12, 13, 17, 24, 95, 102], "named_tupl": [4, 6, 7, 8, 9, 11, 12, 13, 25, 26], "a_tensor": [4, 6, 7, 8, 9, 11, 12, 13], "a_str": [4, 6, 7, 8, 9, 11, 12, 13], "nt": [4, 6, 7, 8, 9, 11, 12, 13], "to_namedtupl": [4, 6, 7, 8, 9, 11, 12, 13, 26], "genericdict": [4, 6, 7, 8, 9, 11, 12, 13], "from_pytre": [4, 6, 7, 8, 9, 11, 12, 13], "ad": [4, 6, 7, 8, 9, 11, 12, 13, 26, 66, 97, 98, 100], "biject": [4, 6, 7, 8, 9, 11, 12, 13, 26], "regist": [4, 6, 7, 8, 9, 11, 12, 13, 26, 46, 50, 52, 92, 95], "castabl": [4, 6, 7, 8, 9, 11, 12, 13, 26], "np": [4, 6, 7, 8, 9, 11, 12, 13, 26, 27, 80], "ndarrai": [4, 6, 7, 8, 9, 11, 12, 13, 26, 80], "surject": [4, 6, 7, 8, 9, 11, 12, 13, 26, 66], "back": [4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 38, 40, 41, 88], "recov": [4, 6, 7, 8, 9, 11, 12, 13, 26, 47, 102], "weird": [4, 6, 7, 8, 9, 11, 12, 13, 26], "look": [4, 6, 7, 8, 9, 11, 12, 13, 26, 46, 47, 51, 92, 100], "weirdlookingclass": [4, 6, 7, 8, 9, 11, 12, 13, 26], "weird_kei": [4, 6, 7, 8, 9, 11, 12, 13, 26], "pytree_recon": [4, 6, 7, 8, 9, 11, 12, 13, 26], "to_pytre": [4, 6, 7, 8, 9, 11, 12, 13, 26], "v1": [4, 6, 7, 8, 9, 11, 12, 13, 26], "v2": [4, 6, 7, 8, 9, 11, 12, 13, 26], "_pytre": [4, 6, 7, 8, 9, 11, 12, 13, 26], "from_remote_init": [4, 6, 7, 8, 9, 11, 12, 13], "src": [4, 6, 7, 8, 9, 11, 12, 13], "group": [4, 6, 7, 8, 9, 11, 12, 13, 59, 95], "processgroup": [4, 6, 7, 8, 9, 11, 12, 13], "sent": [4, 6, 7, 8, 9, 11, 12, 13, 99], "init_remot": [4, 6, 7, 8, 9, 11, 12, 13], "asynchron": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "actual": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "rank": [4, 6, 7, 8, 9, 11, 12, 13], "commun": [4, 6, 7, 8, 9, 11, 12, 13], "struct_arrai": [4, 6, 7, 8, 9, 11, 12, 13, 27], "therefor": [4, 6, 7, 8, 9, 11, 12, 13, 92], "transfer": [4, 6, 7, 8, 9, 11, 12, 13, 46, 97], "rex": [4, 6, 7, 8, 9, 11, 12, 13, 27], "81": [4, 6, 7, 8, 9, 11, 12, 13, 27], "fido": [4, 6, 7, 8, 9, 11, 12, 13, 27], "u10": [4, 6, 7, 8, 9, 11, 12, 13, 27], "ag": [4, 6, 7, 8, 9, 11, 12, 13, 27], "i4": [4, 6, 7, 8, 9, 11, 12, 13, 27], "f4": [4, 6, 7, 8, 9, 11, 12, 13, 27], "x_recon": [4, 6, 7, 8, 9, 11, 12, 13, 27], "to_struct_arrai": [4, 6, 7, 8, 9, 11, 12, 13, 27], "my_tupl": [4, 6, 7, 8, 9, 11, 12, 13], "fromkei": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "gather": [4, 8, 9, 11, 12, 13, 43, 95, 97], "axi": [4, 8, 9, 11, 12, 13], "Its": [4, 8, 9, 11, 12, 13, 48, 92], "td_gather": [4, 8, 9, 11, 12, 13], "gather_and_stack": [4, 8, 9, 11, 12, 13], "dst": [4, 8, 9, 11, 12, 13], "variou": [4, 8, 9, 11, 12, 13, 20, 88], "mp": [4, 8, 9, 11, 12, 13], "client": [4, 8, 9, 11, 12, 13], "init_process_group": [4, 8, 9, 11, 12, 13], "gloo": [4, 8, 9, 11, 12, 13], "world_siz": [4, 8, 9, 11, 12, 13], "init_method": [4, 8, 9, 11, 12, 13], "tcp": [4, 8, 9, 11, 12, 13], "localhost": [4, 8, 9, 11, 12, 13], "10003": [4, 8, 9, 11, 12, 13], "server": [4, 8, 9, 11, 12, 13, 92], "yuppi": [4, 8, 9, 11, 12, 13], "__name__": [4, 8, 9, 11, 12, 13, 97], "__main__": [4, 8, 9, 11, 12, 13, 97], "set_start_method": [4, 8, 9, 11, 12, 13], "spawn": [4, 8, 9, 11, 12, 13], "main_work": [4, 8, 9, 11, 12, 13], "secondary_work": [4, 8, 9, 11, 12, 13], "start": [4, 8, 9, 11, 12, 13, 72, 97, 100], "join": [4, 8, 9, 11, 12, 13, 92], "padding_sid": [4, 8], "padding_valu": [4, 8, 73], "chain": [4, 6, 7, 8, 9, 10, 11, 12, 13, 44, 51], "previous": [4, 8, 9, 11, 12, 13, 102], "v0": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 76, 86, 87], "behavior": [4, 6, 7, 8, 9, 10, 11, 12, 13, 36, 38, 41, 76, 78, 80], "old": [4, 8, 9, 11, 12, 13, 102], "environ": [4, 8, 9, 11, 12, 13, 36, 68, 76, 87, 92, 97], "variabl": [4, 8, 9, 11, 12, 13, 36, 68, 76, 87, 92, 100], "td_get_defaults_to_non": [4, 8, 9, 11, 12, 13], "set_get_defaults_to_non": [4, 8, 9, 11, 12, 13], "rag": [4, 8, 9, 11, 12, 13, 48], "nestedtensor": [4, 8], "j1": [4, 8], "offset": [4, 8], "get_at": [4, 8, 9, 11, 12, 13], "get_item_shap": [4, 8, 9, 11, 12, 13], "implement": [4, 8, 9, 11, 13, 86, 87, 89, 91, 92, 95, 96, 97], "ineffici": [4, 8, 102], "get_nestedtensor": [4, 8], "cannot": [4, 8, 9, 10, 11, 12, 13, 43, 57, 78, 80, 95, 97], "optiona": [4, 8], "anyth": [4, 8, 70], "els": [4, 8, 9, 11, 12, 13, 43, 70, 91, 96, 97, 98], "b2": [4, 8, 42], "get_non_tensor": [4, 8, 9, 11, 12, 13], "robust": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41], "natur": [4, 8, 9, 11, 12, 13, 68, 89], "scope": [4, 8, 9, 11, 12, 13], "set_non_tensor": [4, 8, 9, 11, 12, 13], "inform": [4, 6, 7, 8, 9, 10, 11, 12, 13, 18, 21, 22, 25, 27, 28, 52, 57, 89, 95], "half": [4, 8, 9, 11, 12, 13], "os": [4, 8, 9, 11, 12, 13, 97], "dist": [4, 8, 9, 11, 12, 13, 46, 47, 59, 68, 92, 100], "queue": [4, 5, 8, 9, 11, 12, 13, 95], "master_addr": [4, 8, 9, 11, 12, 13], "master_port": [4, 8, 9, 11, 12, 13], "29505": [4, 8, 9, 11, 12, 13], "backend": [4, 8, 9, 11, 12, 13], "sampl": [4, 8, 9, 11, 12, 13, 45, 46, 47, 49, 59, 68, 69, 86, 100], "from_tensor": [4, 5, 8, 9, 11, 12, 13], "received_td": [4, 8, 9, 11, 12, 13], "verifi": [4, 8, 9, 11, 12, 13], "signal": [4, 8, 9, 11, 12, 13], "test": [4, 8, 9, 11, 12, 13, 80, 83, 87, 91, 92, 96, 102], "complet": [4, 8, 9, 11, 12, 13, 88, 100], "successfulli": [4, 8, 9, 11, 12, 13, 92], "timeout": [4, 8, 9, 11, 12, 13, 95], "wait": [4, 8, 9, 11, 12, 13, 97], "close": [4, 8, 9, 11, 12, 13], "insert": [4, 8, 9, 11, 12, 13], "int16": [4, 8, 9, 11, 12, 13], "int32": [4, 8, 9, 11, 12, 13], "int8": [4, 8, 9, 11, 12, 13], "irecv": [4, 8, 9, 11, 12, 13], "return_prematur": [4, 8, 9, 11, 12, 13], "init_tag": [4, 8, 9, 11, 12, 13], "pseudo_rand": [4, 8, 9, 11, 12, 13], "isend": [4, 8, 9, 11, 12, 13], "withing": [4, 8, 9, 11, 12, 13], "tag": [4, 8, 9, 11, 12, 13], "pseudo": [4, 8, 9, 11, 12, 13], "random": [4, 8, 9, 11, 12, 13, 45, 46, 92, 97, 101], "overlap": [4, 8, 9, 11, 12, 13], "1e": [4, 8, 9, 11, 12, 13, 58, 60, 61, 91, 96], "sec": [4, 8, 9, 11, 12, 13, 95], "slow": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "down": [4, 8, 9, 11, 12, 13], "runtim": [4, 8, 9, 11, 12, 13, 48, 86, 92, 97], "your": [4, 8, 9, 11, 12, 13, 43, 46, 76, 87, 89, 97], "algorithm": [4, 8, 9, 11, 12, 13], "is_consolid": [4, 8, 9, 11, 12, 13], "is_contigu": [4, 8, 9, 11, 12, 13], "is_empti": [4, 8, 9, 11, 12, 13], "is_floating_point": [4, 8, 9, 11, 12, 13], "__not__": [4, 8, 9, 11, 12, 13, 57], "share_memory_": [4, 8, 9, 11, 12, 13], "eg": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "increment": [4, 8, 9, 11, 12, 13, 95], "fut": [4, 8, 9, 11, 12, 13], "isfinit": [4, 8, 9, 11, 12, 13], "finit": [4, 8, 9, 11, 12, 13], "nan": [4, 8, 9, 11, 12, 13], "neg": [4, 8, 9, 11, 12, 13, 98, 102], "infin": [4, 8, 9, 11, 12, 13], "imaginari": [4, 8, 9, 11, 12, 13], "part": [4, 8, 9, 11, 12, 13, 43, 47, 59, 86, 89, 92, 97], "isnan": [4, 8, 9, 11, 12, 13], "isneginf": [4, 8, 9, 11, 12, 13], "isposinf": [4, 8, 9, 11, 12, 13], "isreal": [4, 8, 9, 11, 12, 13], "Be": [4, 8, 9, 11, 12, 13], "mind": [4, 8, 9, 11, 12, 13, 44, 102], "signific": [4, 8, 9, 10, 11, 12, 13, 20, 80, 97], "deal": [4, 8, 9, 11, 12, 13, 48, 88, 92, 95], "larg": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 89, 92, 97, 98], "_lazystackedtensordictkeysview": [4, 8], "shoulb": [4, 8, 9, 11, 12, 13], "lerp": [4, 8, 9, 11, 12, 13], "end": [4, 8, 9, 11, 12, 13, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "interpol": [4, 8, 9, 11, 12, 13], "formula": [4, 8, 9, 11, 12, 13], "lerp_": [4, 8, 9, 11, 12, 13], "lgamma": [4, 8, 9, 11, 12, 13], "lgamma_": [4, 8, 9, 11, 12, 13], "pathlib": [4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 38, 97], "load_memmap": [4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 87, 89], "load_": [4, 6, 7, 8, 9, 10, 11, 12, 13], "load_memmap_": [4, 6, 7, 8, 9, 10, 11, 12, 13], "folder": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "fetch": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "sens": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 92], "total": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "synchron": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "encod": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 62, 66], "decod": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "legaci": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 43], "emit": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41], "deprec": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 68, 102], "warn": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41, 56], "fall": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 40, 41], "Will": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 41], "saved_td": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "td_load": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 89], "fake": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "temporarydirectori": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38, 89], "_subclass": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "faketensormod": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "faketensor": [4, 6, 7, 8, 9, 10, 11, 12, 13, 38], "info": [4, 8, 9, 11, 12, 13, 92], "ordereddict": [4, 8, 9, 11, 12, 13, 47, 51], "strict": [4, 6, 7, 8, 9, 10, 11, 12, 13, 48, 87, 92], "from_flatten": [4, 6, 7, 8, 9, 10, 11, 12, 13], "format": [4, 8, 9, 11, 12, 13, 73, 87, 89, 95], "preserv": [4, 8, 9, 11, 12, 13, 43, 47, 51, 100], "data_zero": [4, 8, 9, 11, 12, 13], "sd": [4, 8, 9, 11, 12, 13], "lock_": [4, 8, 9, 11, 12, 13, 88, 102], "__setitem__": [4, 8, 9, 11, 12, 13], "rename_key_": [4, 8, 9, 11, 12, 13, 98], "decor": [4, 8, 9, 10, 11, 12, 13, 54, 70, 76, 78, 80, 87, 92], "is_lock": [4, 8, 9, 11, 12, 13, 88], "error": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 47, 83, 84, 89, 91, 96], "except": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 48, 50, 57, 62, 87, 88, 89, 95, 101], "del": [4, 8, 9, 11, 12, 13, 89, 98], "No": [4, 8, 9, 11, 12, 13, 100], "move": [4, 8, 9, 11, 12, 13, 72, 97, 99], "log": [4, 8, 9, 11, 12, 13, 46, 47, 56, 59, 68, 92, 100], "log10": [4, 8, 9, 11, 12, 13], "log10_": [4, 8, 9, 11, 12, 13], "log1p": [4, 8, 9, 11, 12, 13], "log1p_": [4, 8, 9, 11, 12, 13], "log2": [4, 8, 9, 11, 12, 13], "log2_": [4, 8, 9, 11, 12, 13], "log_": [4, 8, 9, 11, 12, 13], "logical_and": [4, 8, 9, 11, 12, 13], "logic": [4, 8, 9, 11, 12, 13, 92, 96, 97, 100], "logsumexp": [4, 8, 9, 11, 12, 13], "exponenti": [4, 8, 9, 11, 12, 13], "row": [4, 8, 9, 11, 12, 13, 101, 103], "stabil": [4, 8, 9, 11, 12, 13], "len": [4, 8, 9, 11, 12, 13, 72, 91, 95, 96, 97, 102], "fewer": [4, 8, 9, 11, 12, 13], "retain": [4, 8, 9, 11, 12, 13], "make_memmap": [4, 8, 9, 11, 12, 13], "memmap_refresh_": [4, 6, 7, 8, 9, 10, 11, 12, 13], "special": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 80, 100], "make_memmap_from_storag": [4, 8, 9, 11, 12, 13], "untypedstorag": [4, 8, 9, 11, 12, 13], "associ": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 42, 84, 99], "make_memmap_from_tensor": [4, 8, 9, 11, 12, 13], "copy_data": [4, 5, 8, 9, 11, 12, 13], "replic": [4, 8, 9, 11, 12, 13], "num_work": [4, 8, 9, 11, 12, 13, 97], "chunksiz": [4, 8, 9, 11, 12, 13], "num_chunk": [4, 8, 9, 11, 12, 13], "pool": [4, 8, 9, 11, 12, 13], "max_tasks_per_child": [4, 8, 9, 11, 12, 13], "worker_thread": [4, 8, 9, 11, 12, 13], "index_with_gener": [4, 8, 9, 11, 12, 13], "pbar": [4, 8, 9, 11, 12, 13, 97], "mp_start_method": [4, 8, 9, 11, 12, 13], "callab": [4, 8, 9, 11, 12, 13], "virtual": [4, 8, 9, 11, 12, 13], "tread": [4, 8, 9, 11, 12, 13], "tb": [4, 8, 9, 11, 12, 13], "ndim": [4, 8, 9, 11, 12, 13], "inward": [4, 8, 9, 11, 12, 13], "restack": [4, 8, 9, 11, 12, 13], "equat": [4, 8, 9, 11, 12, 13, 66], "doabl": [4, 8, 9, 11, 12, 13], "job": [4, 8, 9, 11, 12, 13], "seed": [4, 8, 9, 11, 12, 13], "unseed": [4, 8, 9, 11, 12, 13], "taken": [4, 8, 9, 11, 12, 13], "low": [4, 8, 9, 11, 12, 13], "autocorrel": [4, 8, 9, 11, 12, 13], "experi": [4, 8, 9, 11, 12, 13, 97], "These": [4, 8, 9, 11, 12, 13, 51, 77, 88, 89, 101, 102], "NOT": [4, 8, 9, 11, 12, 13, 89], "imposs": [4, 8, 9, 11, 12, 13], "pick": [4, 8, 9, 11, 12, 13], "howev": [4, 8, 9, 11, 12, 13, 47, 87, 88, 89, 95, 98, 99, 100], "uncorrel": [4, 8, 9, 11, 12, 13], "child": [4, 8, 9, 11, 12, 13, 47], "spare": [4, 8, 9, 11, 12, 13], "init": [4, 8, 9, 11, 12, 13], "gain": [4, 8, 9, 11, 12, 13], "progress": [4, 8, 9, 11, 12, 13], "bar": [4, 8, 9, 11, 12, 13, 97], "fork": [4, 8, 9, 11, 12, 13], "process_data": [4, 8, 9, 11, 12, 13], "1_000_000": [4, 6, 7, 8, 9, 10, 11, 12, 13, 88, 89, 100], "map_it": [4, 8, 9, 11, 12, 13], "shuffl": [4, 8, 9, 11, 12, 13], "yield": [4, 8, 9, 11, 12, 13, 89], "dataload": [4, 8, 9, 11, 12, 13, 89, 97], "fashion": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "prohibit": [4, 8, 9, 11, 12, 13, 100], "unlock_": [4, 8, 9, 11, 12, 13, 88, 102], "break": [4, 8, 9, 11, 12, 13, 89, 91, 96, 100], "masked_fil": [4, 8, 9, 11, 12, 13, 97], "masked_fill_": [4, 8, 9, 11, 12, 13], "masked_select": [4, 8, 9, 11, 12, 13], "td_mask": [4, 8, 9, 11, 12, 13], "dimensionless": [4, 8, 9, 11, 12, 13], "2942": [4, 8, 9, 11, 12, 13], "maximum_": [4, 8, 9, 11, 12, 13], "maybe_dense_stack": [4, 6, 7, 8, 9, 11, 12, 13], "liter": [4, 6, 7, 8, 9, 11, 12, 13], "permit": [4, 5, 8, 9, 11, 12, 13], "overflow": [4, 8, 9, 11, 12, 13], "0547": [4, 8, 9, 11, 12, 13], "existsok": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "correct": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 91, 96], "non_tensor": [4, 6, 7, 8, 9, 10, 11, 12, 13, 87], "oom": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "throw": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "onc": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 50, 88, 92, 97, 102], "unlock": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 88], "turn": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 44, 86, 92], "becaus": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 87, 88, 89, 91, 92, 96, 97, 101], "cross": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 43, 91, 96], "anymor": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 89], "tensordictfutur": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "might": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "deepli": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41], "recommend": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 76], "insid": [4, 6, 7, 8, 9, 10, 11, 12, 13, 41, 91, 96, 97], "memmap_lik": [4, 6, 7, 8, 9, 10, 11, 12, 13, 89, 99], "contentless": [4, 6, 7, 8, 9, 10, 11, 12, 13], "64": [4, 6, 7, 8, 9, 10, 11, 12, 13, 89, 91, 95, 96, 97], "refresh": [4, 6, 7, 8, 9, 10, 11, 12, 13], "saved_path": [4, 6, 7, 8, 9, 10, 11, 12, 13], "9953": [4, 8, 9, 11, 12, 13], "minimum_": [4, 8, 9, 11, 12, 13], "subtract": [4, 8, 9, 11, 12, 13, 88], "mul_": [4, 8, 9, 11, 12, 13], "named_appli": [4, 8, 9, 11, 12, 13], "nested_kei": [4, 8, 9, 11, 12, 13], "condit": [4, 8, 9, 11, 12, 13, 47, 51, 66], "atensordict": [4, 8, 9, 11, 12, 13], "name_filt": [4, 8, 9, 11, 12, 13], "nanmean": [4, 8, 9, 11, 12, 13], "nansum": [4, 8, 9, 11, 12, 13], "neg_": [4, 8, 9, 11, 12, 13], "new_empti": [4, 8, 9, 11, 12, 13], "requires_grad": [4, 8, 9, 11, 12, 13, 88], "empty_lazi": [4, 8, 9, 11, 12, 13], "emtpi": [4, 8, 9, 11, 12, 13], "By": [4, 8, 9, 11, 12, 13, 46, 76, 92, 95, 98, 99, 100], "unchang": [4, 8, 9, 11, 12, 13], "record": [4, 8, 9, 11, 12, 13], "new_ful": [4, 8, 9, 11, 12, 13], "fill_valu": [4, 5, 8, 9, 11, 12, 13], "new_on": [4, 8, 9, 11, 12, 13], "new_tensor": [4, 8, 9, 11, 12, 13], "new_zero": [4, 8, 9, 11, 12, 13], "non_tensor_item": [4, 8, 9, 11, 12, 13], "mayb": [4, 8, 9, 11, 12, 13], "least": [4, 8, 9, 11, 12, 13, 47, 87], "expos": [4, 8, 9, 11, 12, 13, 47, 48, 88, 96, 97, 100, 102], "seealso": [4, 8, 9, 11, 12, 13, 14], "struct": [4, 8, 9, 11, 12, 13], "param_count": [4, 8, 9, 11, 12, 13], "dims_list": [4, 8, 9, 11, 12, 13], "permutedtensordict": [4, 8, 9, 11, 12, 13], "threadpoolexecutor": [4, 8, 9, 11, 12, 13], "max_work": [4, 8, 9, 11, 12, 13], "pin_memory_": [4, 8, 9, 11, 12, 13], "pop": [4, 8, 9, 11, 12, 13], "thrown": [4, 5, 8, 9, 11, 12, 13, 87], "popitem": [4, 8, 9, 11, 12, 13], "pow": [4, 8, 9, 11, 12, 13], "expon": [4, 8, 9, 11, 12, 13], "pow_": [4, 8, 9, 11, 12, 13], "prod": [4, 8, 9, 11, 12, 13], "qint32": [4, 8, 9, 11, 12, 13], "qint8": [4, 8, 9, 11, 12, 13], "quint4x2": [4, 8, 9, 11, 12, 13], "quint8": [4, 8, 9, 11, 12, 13], "reciproc": [4, 8, 9, 11, 12, 13], "reciprocal_": [4, 8, 9, 11, 12, 13], "record_stream": [4, 8, 9, 11, 12, 13], "dealloc": [4, 8, 9, 11, 12, 13], "reus": [4, 8, 9, 11, 12, 13], "queu": [4, 8, 9, 11, 12, 13], "recv": [4, 8, 9, 11, 12, 13], "async_op": [4, 8, 9, 11, 12, 13], "machin": [4, 8, 9, 11, 12, 13], "go": [4, 8, 9, 11, 12, 13, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "lift": [4, 8, 9, 11, 12, 13], "coexist": [4, 8, 9, 11, 12, 13], "nice": [4, 8, 9, 11, 12, 13, 95], "awar": [4, 8, 9, 11, 12, 13, 43], "greedili": [4, 8, 9, 11, 12, 13], "tdr": [4, 8, 9, 11, 12, 13], "rename_map": [4, 8, 9, 11, 12, 13], "abcd": [4, 8, 9, 11, 12, 13], "td_renam": [4, 8, 9, 11, 12, 13], "abgd": [4, 8, 9, 11, 12, 13], "rename_": [4, 8, 9, 11, 12, 13], "old_kei": [4, 8, 9, 11, 12, 13], "new_kei": [4, 8, 9, 11, 12, 13], "behav": [4, 8, 9, 11, 12, 13, 50, 62, 102], "tile": [4, 8, 9, 11, 12, 13], "repeat_interleav": [4, 8, 9, 11, 12, 13], "repetit": [4, 8, 9, 11, 12, 13], "replac": [4, 8, 9, 11, 12, 13, 49, 102], "addition": [4, 8, 9, 11, 12, 13, 98], "requires_grad_": [4, 8, 9, 11, 12, 13], "round": [4, 8, 9, 11, 12, 13], "round_": [4, 8, 9, 11, 12, 13], "rsub": [4, 8, 9, 11, 12, 13], "valish": [4, 8, 9, 11, 12, 13], "soon": [4, 8, 9, 11, 12, 13, 95, 102], "select": [4, 8, 9, 11, 12, 13, 34, 49, 51, 86, 88, 89, 95, 103], "depriv": [4, 8, 9, 11, 12, 13], "split_kei": [4, 8, 9, 11, 12, 13], "td_a_c": [4, 8, 9, 11, 12, 13], "host": [4, 8, 9, 11, 12, 13], "yet": [4, 8, 9, 11, 12, 13, 92, 97], "set_at_": [4, 8, 9, 11, 12, 13], "setdefault": [4, 8, 9, 11, 12, 13, 98], "sigmoid_": [4, 8, 9, 11, 12, 13], "sign": [4, 8, 9, 11, 12, 13], "sign_": [4, 8, 9, 11, 12, 13], "sin": [4, 8, 9, 11, 12, 13], "sin_": [4, 8, 9, 11, 12, 13], "sinh": [4, 8, 9, 11, 12, 13], "sinh_": [4, 8, 9, 11, 12, 13], "sorted_kei": [4, 8, 9, 11, 12, 13], "_nestedkei": [4, 8, 9, 11, 12, 13, 73], "cach": [4, 8, 9, 11, 12, 13, 100], "split_siz": [4, 5, 8, 9, 11, 12, 13], "key_set": [4, 8, 9, 11, 12, 13], "reproduce_struct": [4, 8, 9, 11, 12, 13], "subset": [4, 8, 9, 11, 12, 13, 97, 98, 102], "td_a": [4, 8, 9, 11, 12, 13], "td_bc": [4, 8, 9, 11, 12, 13], "td_d": [4, 8, 9, 11, 12, 13], "sqrt": [4, 8, 9, 11, 12, 13, 88], "squar": [4, 8, 9, 11, 12, 13], "sqrt_": [4, 8, 9, 11, 12, 13], "singleton": [4, 8, 9, 11, 12, 13, 102], "alter": [4, 8, 9, 11, 12, 13], "implicit": [4, 8, 9, 11, 12, 13], "stack_from_tensordict": [4, 8, 9, 11, 12, 13], "stack_tensor": [4, 8, 9, 11, 12, 13], "keep_var": [4, 6, 7, 8, 9, 10, 11, 12, 13, 89], "rebuild": [4, 8, 9, 11, 12, 13, 89, 100], "compos": [4, 8, 9, 11, 12, 13, 95, 97], "__batch_siz": [4, 8, 9, 11, 12, 13], "__devic": [4, 8, 9, 11, 12, 13], "std": [4, 8, 9, 11, 12, 13, 58, 61], "standard": [4, 8, 9, 11, 12, 13, 88, 92], "deviat": [4, 8, 9, 11, 12, 13], "freedom": [4, 8, 9, 11, 12, 13], "bessel": [4, 8, 9, 11, 12, 13], "0006": [4, 8, 9, 11, 12, 13], "sub_": [4, 8, 9, 11, 12, 13], "tan": [4, 8, 9, 11, 12, 13], "tan_": [4, 8, 9, 11, 12, 13], "tanh": [4, 8, 9, 11, 12, 13], "tanh_": [4, 8, 9, 11, 12, 13], "tensor_split": [4, 8, 9, 11, 12, 13], "indices_or_sect": [4, 8, 9, 11, 12, 13], "1d": [4, 8, 9, 11, 12, 13], "dimension": [4, 8, 9, 11, 12, 13], "rest": [4, 8, 9, 11, 12, 13, 73, 95], "whose": [4, 8, 9, 11, 12, 13, 51, 98, 100, 101, 102, 103], "memory_format": [4, 8, 9, 11, 12, 13, 92], "4d": [4, 8, 9, 11, 12, 13], "undertook": [4, 8, 9, 11, 12, 13], "non_blocking_pin": [4, 8, 9, 11, 12, 13], "slower": [4, 8, 9, 11, 12, 13, 95], "multithread": [4, 8, 9, 11, 12, 13], "benefici": [4, 8, 9, 11, 12, 13], "outweigh": [4, 8, 9, 11, 12, 13], "benefit": [4, 8, 9, 11, 12, 13, 92], "small": [4, 8, 9, 11, 12, 13, 89, 92, 102], "get_num_thread": [4, 8, 9, 11, 12, 13], "cancel": [4, 8, 9, 11, 12, 13, 95], "data_cuda": [4, 8, 9, 11, 12, 13], "data_int": [4, 8, 9, 11, 12, 13], "data_cuda_int": [4, 8, 9, 11, 12, 13], "retain_non": [4, 6, 7, 8, 9, 10, 11, 12, 13], "convert_tensor": [4, 6, 7, 8, 9, 11, 12, 13], "tolist_first": [4, 6, 7, 8, 9, 11, 12, 13], "remain": [4, 6, 7, 8, 9, 11, 12, 13, 87, 98, 101], "to_h5": [4, 8, 9, 11, 12, 13], "h5py": [4, 8, 9, 11, 12, 13], "create_dataset": [4, 8, 9, 11, 12, 13], "persitenttensordict": [4, 8, 9, 11, 12, 13], "link": [4, 8, 9, 11, 12, 13], "newli": [4, 8, 9, 11, 12, 13], "timeit": [4, 8, 9, 11, 12, 13], "namedtemporaryfil": [4, 5, 8, 9, 11, 12, 13], "td_h5": [4, 8, 9, 11, 12, 13], "compress": [4, 8, 9, 11, 12, 13], "gzip": [4, 8, 9, 11, 12, 13], "compression_opt": [4, 8, 9, 11, 12, 13], "1000000": [4, 8, 9, 11, 12, 13], "to_lazystack": [4, 8, 9, 11, 12, 13], "swap": [4, 8, 9, 11, 12, 13, 102], "td3": [4, 8, 9, 11, 12, 13], "to_md": [4, 8, 9, 11, 12, 13], "column": [4, 8, 9, 11, 12, 13], "keep_loc": [4, 8, 9, 11, 12, 13], "hash": [4, 8, 9, 11, 12, 13], "size_limit": [4, 8, 9, 11, 12, 13], "67108864": [4, 8, 9, 11, 12, 13], "writer": [4, 8, 9, 11, 12, 13], "mdswriter": [4, 8, 9, 11, 12, 13], "shard": [4, 8, 9, 11, 12, 13], "upload": [4, 8, 9, 11, 12, 13], "At": [4, 8, 9, 11, 12, 13], "temp": [4, 8, 9, 11, 12, 13], "local_dir": [4, 8, 9, 11, 12, 13], "remote_dir": [4, 8, 9, 11, 12, 13], "limit": [4, 8, 9, 11, 12, 13, 87, 92], "everyth": [4, 8, 9, 11, 12, 13], "human": [4, 8, 9, 11, 12, 13], "100kb": [4, 8, 9, 11, 12, 13], "kilobyt": [4, 8, 9, 11, 12, 13], "1024": [4, 8, 9, 11, 12, 13], "proper": [4, 8, 9, 11, 12, 13, 102], "mosaicml": [4, 8, 9, 11, 12, 13], "instal": [4, 8, 9, 11, 12, 13], "fix": [4, 8, 9, 11, 12, 13, 43, 96], "mosaic": [4, 8, 9, 11, 12, 13], "doc": [4, 8, 9, 11, 12, 13, 100], "project": [4, 8, 9, 11, 12, 13], "tempdir": [4, 8, 9, 11, 12, 13, 89], "streamingdataset": [4, 8, 9, 11, 12, 13], "from_list": [4, 8, 9, 11, 12, 13], "collate_fn": [4, 8, 9, 11, 12, 13, 91, 96, 97], "dl": [4, 8, 9, 11, 12, 13, 97], "return_swap": [4, 8, 9, 11, 12, 13], "swap_dest": [4, 8, 9, 11, 12, 13], "memo": [4, 8, 9, 11, 12, 13], "temporarili": [4, 8, 9, 11, 12, 13, 47, 88], "zero_": [4, 8, 9, 11, 12, 13, 88], "rubric": [4, 8, 9, 11, 12, 13, 49, 51], "remak": [4, 8, 9, 11, 12, 13], "repopul": [4, 8, 9, 11, 12, 13], "to_padded_tensor": [4, 8, 9, 11, 12, 13], "mask_kei": [4, 8, 9, 11, 12, 13], "adapt": [4, 8, 9, 11, 12, 13, 102], "valid": [4, 8, 9, 10, 11, 12, 13, 20, 43, 73, 80, 87, 97, 99], "arr": [4, 8, 9, 11, 12, 13], "convert_nod": [4, 9, 11, 12, 13], "as_linked_list": [4, 6, 7, 8, 9, 11, 12, 13], "inner": [4, 9, 11, 12, 13], "linkedlist": [4, 6, 7, 8, 9, 11, 12, 13], "transpos": [4, 8, 9, 11, 12, 13, 77, 102], "dim0": [4, 8, 9, 11, 12, 13], "dim1": [4, 8, 9, 11, 12, 13], "tensordict_transpos": [4, 8, 9, 11, 12, 13], "trunc": [4, 8, 9, 11, 12, 13], "trunc_": [4, 8, 9, 11, 12, 13], "dst_type": [4, 8, 9, 11, 12, 13], "uint16": [4, 8, 9, 11, 12, 13], "uint32": [4, 8, 9, 11, 12, 13], "uint64": [4, 8, 9, 11, 12, 13], "unflattened_s": [4, 8, 9, 11, 12, 13], "td_unflat": [4, 8, 9, 11, 12, 13], "compris": [4, 8, 9, 11, 12, 13], "input_dict_or_td": [4, 8, 9, 11, 12, 13], "keys_to_upd": [4, 8, 9, 11, 12, 13], "update_batch_s": [4, 8, 9, 11, 12, 13], "corrupt": [4, 8, 9, 11, 12, 13], "hope": [4, 8, 9, 11, 12, 13, 95], "catch": [4, 8, 9, 11, 12, 13], "patch": [4, 8, 9, 11, 12, 13], "key_to_upd": [4, 8, 9, 11, 12, 13], "data_dest": [4, 8, 9, 11, 12, 13], "data_src": [4, 8, 9, 11, 12, 13], "lazystacktensordict": [4, 8, 9, 11, 12, 13], "unabl": [4, 8, 9, 11, 12, 13], "ignore_lock": [4, 8, 9, 11, 12, 13], "statu": [4, 8, 9, 11, 12, 13, 30], "dest": [4, 8, 9, 11, 12, 13, 57, 81], "reli": [4, 8, 9, 11, 12, 13, 47, 51, 87, 89, 100, 102], "other_td": [4, 8, 9, 11, 12, 13], "though": [4, 8, 9, 11, 12, 13, 87, 92, 97, 102], "unknown": [4, 8, 9, 11, 12, 13], "valid_kei": [4, 8], "var": [4, 8, 9, 11, 12, 13], "varianc": [4, 8, 9, 11, 12, 13, 58, 61], "td_view": [4, 8, 9, 11, 12, 13], "depend": [4, 8, 9, 11, 12, 13, 43, 46, 47, 51, 70, 92], "booltensor": [4, 8, 9, 11, 12, 13, 103], "nonzero": [4, 8, 9, 11, 12, 13], "set_to_non": [4, 8, 9, 11, 12, 13, 30], "resid": 5, "filepath": 5, "undefin": [5, 13, 87], "memmap_tensor": 5, "memmap_tensor_empti": 5, "empty_lik": 5, "memmap_tensor_zero": 5, "ones_lik": [5, 88], "ok": [5, 100], "overwrit": 5, "empty_nest": 5, "nested_shap": 5, "from_filenam": 5, "nested_tensor": [5, 95], "from_handl": 5, "inadvert": [5, 89], "overrid": [5, 13, 92], "full_lik": 5, "seq": [5, 44, 47, 48, 49, 51, 52, 92], "_metadata": [6, 7], "_is_non_tensor": [6, 7], "from_tensordict": [6, 7, 10], "non_tensordict": [6, 7, 10], "wrapper": [6, 7, 8, 10, 13, 43, 46, 48, 50, 52, 100], "attemptedli": [6, 7, 10], "maybe_to_stack": [6, 7, 8], "nontensordatabas": [6, 7], "setattr": [6, 7, 10], "tent": [6, 7, 10], "discrard": [6, 7, 10], "thin": 8, "around": [8, 46, 48, 52, 95, 100], "recogniz": 8, "j": 8, "valueerror": [8, 13, 47], "interchang": 8, "extract": [8, 88, 92, 97], "persist": [9, 13, 89], "materi": 9, "reman": 9, "ptd": 9, "recur": [9, 11, 12, 13, 100], "_persistenttdkeysview": 9, "better": [10, 97], "python": [10, 43, 48, 49, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "frozen": [10, 20, 80], "immut": [10, 20], "autocast": [10, 20, 80], "enabl": [10, 13, 20, 78, 86, 87, 100], "nocast": [10, 20, 80], "disabl": [10, 13, 20, 78, 80, 87], "tensor_onli": [10, 20, 80], "bring": [10, 20, 80], "speed": [10, 20, 80, 88, 89, 97], "interact": [10, 20, 45, 46, 47, 80, 88, 89], "shadow": [10, 20, 80], "unintend": [10, 20, 80], "consequ": [10, 20, 80], "bracket": 10, "anticip": 10, "conflict": [10, 100], "parent": [10, 12, 13, 89], "notabl": 11, "algebra": [11, 45], "expend": 11, "td_unsqueez": 11, "a_view": 11, "td_cpu": 11, "td_or_dict": 11, "old_nam": 11, "new_nam": 11, "tensordict_list": 11, "lsit": 11, "deliv": [11, 102], "fastest": 11, "movement": 11, "creation": 11, "potenti": [11, 13, 84], "td_unqueez": 11, "hasn": 11, "_tensordictkeysview": 11, "no_convert": 13, "exposur": 13, "hold": [13, 91, 96, 97], "seamless": 13, "named_paramet": [13, 98], "compar": [13, 48, 97, 100], "afterward": [13, 46, 50, 52, 100], "p": [13, 47], "custommodul": 13, "add_modul": 13, "submodul": [13, 48, 51], "direct": 13, "member": 13, "xdoctest": 13, "skip": [13, 46, 70], "buf": 13, "20l": 13, "1l": 13, "5l": 13, "__call__": [13, 46, 48, 97], "eval": [13, 91, 96], "dropout": 13, "batchnorm": 13, "comparison": 13, "mechan": 13, "confus": 13, "extra_repr": 13, "line": [13, 89, 100], "multi": [13, 100], "overridden": [13, 46, 50, 52], "recip": [13, 46, 50, 52], "get_buff": 13, "docstr": 13, "get_submodul": 13, "explan": 13, "correctli": [13, 92], "fulli": [13, 92, 97, 100], "qualifi": 13, "referenc": 13, "attributeerror": 13, "invalid": 13, "resolv": [13, 100], "get_extra_st": 13, "set_extra_st": 13, "picklabl": 13, "form": [13, 44, 46, 66, 72], "get_paramet": 13, "sai": 13, "net_b": 13, "net_c": 13, "conv": 13, "conv2d": 13, "kernel_s": 13, "in_featur": [13, 91, 96], "out_featur": [13, 91, 96], "200": [13, 100], "diagram": 13, "named_modul": 13, "o": [13, 97], "transit": 13, "ipu": 13, "network": [13, 48, 86, 92, 100], "l": 13, "mtia": 13, "named_buff": 13, "remove_dupl": 13, "prepend": 13, "running_var": 13, "named_children": 13, "conv4": 13, "conv5": 13, "typic": [13, 47, 48, 49, 89, 95], "register_backward_hook": 13, "removablehandl": 13, "favor": [13, 68], "register_full_backward_hook": 13, "register_buff": 13, "running_mean": 13, "alongsid": 13, "num_featur": 13, "register_forward_hook": 13, "with_kwarg": 13, "always_cal": 13, "posit": [13, 58, 61], "fire": 13, "register_module_forward_hook": 13, "register_forward_pre_hook": 13, "invok": [13, 92], "And": [13, 100], "forward_pr": 13, "register_module_forward_pre_hook": 13, "rule": [13, 46, 100], "ordinarili": 13, "grad_input": 13, "grad_output": 13, "technic": 13, "caller": 13, "register_module_full_backward_hook": 13, "register_full_backward_pre_hook": 13, "backward_pr": 13, "register_module_full_backward_pre_hook": 13, "register_get_post_hook": 13, "register_load_state_dict_post_hook": 13, "post": 13, "incompatible_kei": 13, "missing_kei": 13, "unexpected_kei": 13, "register_load_state_dict_pre_hook": 13, "local_metadata": 13, "error_msg": 13, "noqa": [13, 91, 96, 97], "b950": 13, "register_modul": 13, "alia": [13, 16, 32], "register_paramet": 13, "register_state_dict_post_hook": 13, "register_state_dict_pre_hook": 13, "set_submodul": 13, "doesn": 13, "to_empti": 13, "xpu": 13, "allow_non": [14, 34, 36], "captur": [14, 43, 76, 92], "set_capture_non_tensor_stack": 14, "_default_is_leaf": 16, "td_list": [17, 89], "obtrain": 17, "infeas": 17, "thu": [17, 47, 51], "assert_allclose_td": 17, "td_lazi": 17, "td_contain": 17, "td_container_clon": 17, "push": 17, "reveal": 17, "x2": 20, "h5_file": 22, "arg0": 31, "_is_leaf_nontensor": 32, "datatyp": 33, "lib": [33, 92], "istanc": 33, "set_list_to_stack": 36, "incompat": [39, 65], "callback_exist": 42, "merg": 42, "callback": 42, "b0": 42, "b1": 42, "warmup": [43, 100], "cudagraph": [43, 100], "friendli": 43, "gpu": [43, 97, 100], "essenti": [43, 97], "meet": 43, "fullfil": 43, "flow": 43, "fail": [43, 57], "fortun": [43, 95], "constant": [43, 72], "loss_val": 43, "loss_fn": [43, 91, 96], "differnti": 43, "differenti": [43, 88], "adam": 43, "lr": [43, 91, 96], "irrespect": 43, "discourag": 43, "pytreeabl": 43, "coupl": 43, "suffici": [43, 89], "treat": [43, 78], "alik": 43, "tip": 43, "debug": [43, 74, 92], "hide": 43, "inter": 43, "cudageneratorimpl": 43, "current_se": 43, "recompil": 43, "torch_log": 43, "myscrip": 43, "py": [43, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "enough": [43, 95], "pleas": [43, 92, 102], "struggl": 43, "num_copi": [44, 86], "parameter_init_funct": 44, "expand_input": 44, "cnn": 44, "mlp": [44, 100], "mod": [44, 47, 48, 49, 51, 52, 86, 92], "off": 44, "bork": [44, 49], "dork": [44, 49], "next_modul": 44, "spork": 44, "e0": 44, "e1": 44, "median": [45, 46, 100], "rsampl": [45, 46, 59], "determinist": [45, 46, 47, 69, 92], "fallback": [45, 89], "analyt": 45, "tractabl": 45, "rude": 45, "estim": 45, "lack": 45, "trigger": [45, 49, 51], "deterministic_sampl": 45, "from_str": 45, "type_str": 45, "interaction_typ": [45, 46, 47, 100], "insensit": 45, "probabilist": [46, 47, 59, 69, 92], "parametr": [46, 61, 92, 100], "embed": [46, 48, 92], "loos": 46, "speak": 46, "default_interaction_typ": [46, 47, 92, 100], "get_dist": [46, 47, 100], "suppli": 46, "delta": 46, "importantli": 46, "interest": [46, 92], "loc": [46, 47, 51, 58, 59, 61, 63, 68, 86, 92, 97, 100], "normal": [46, 47, 51, 59, 63, 68, 86, 92, 97, 100], "randomli": [46, 97], "drawn": 46, "dictat": 46, "probabilistictdmodul": [46, 69], "datacollectorbas": 46, "paliat": 46, "get_mod": 46, "get_median": 46, "get_mean": 46, "distribution_class": [46, 47, 51, 86, 92, 100], "compositedistribut": [46, 47, 56, 68], "distribution_map": [46, 59, 68], "name_map": [46, 59], "keywork": 46, "distribution_kwarg": [46, 47], "return_log_prob": [46, 51, 86, 100], "log_prob_kei": [46, 59], "log_prob": [46, 47, 59, 68], "sample_key_nam": 46, "_log_prob": [46, 59], "sample_log_prob": [46, 51, 59, 86], "cache_dist": 46, "diverg": 46, "action": [46, 86, 88, 99, 100], "ppo": 46, "n_empirical_estim": 46, "empir": 46, "normalparamextractor": [46, 51, 53, 86, 92, 100], "functional_modul": [46, 51], "make_funct": [46, 51], "hidden": [46, 48, 51, 86, 92, 100], "grucel": [46, 48, 86, 100], "normal_param": [46, 51, 61], "indepnorm": 46, "prob_modul": [46, 86], "td_modul": [46, 48, 50, 51, 86, 88, 100], "td_vmap": [46, 51], "build_dist_from_param": [46, 47], "dist_params_kei": [46, 47], "dist_sample_kei": [46, 47], "_requires_sampl": 46, "return_composit": 47, "interdepend": 47, "termin": [47, 95], "partial_toler": [47, 51], "scan": [47, 51], "neither": 47, "met": [47, 66], "prob": [47, 62, 68, 92], "9189": 47, "sample0": 47, "loc2": 47, "sample1": 47, "sample0_log_prob": 47, "sample1_log_prob": 47, "revers": [47, 48, 102], "get_dist_param": 47, "composit": [47, 59], "space": [48, 92, 97], "nestedstr": 48, "out_to_in_map": 48, "invert": [48, 64], "prevail": 48, "taensordict": 48, "method_kwarg": 48, "get_kwarg": 48, "particularili": 48, "neural": [48, 100], "128": [48, 100], "tgt": 48, "mynet": 48, "my_func": 48, "an_integ": 48, "td_function": 48, "td_state": 48, "character": 49, "convent": 49, "tensordict_in": 49, "properli": 49, "select_out_kei": [49, 51, 92, 100], "static": 49, "is_tdmodule_compat": 49, "reset_out_kei": [49, 51, 92], "reset_parameters_recurs": 49, "old_param": 49, "reset_paramet": 49, "rid": [49, 51, 100], "presenc": [49, 51], "out_keys_sourc": [49, 51], "simplest": [49, 51, 100], "revert": [49, 51, 92], "tensordictsequenci": 51, "who": 51, "selected_out_kei": [51, 92, 100], "wish": [51, 95, 100], "clariti": 51, "7214": 51, "8748": 51, "1571": 51, "1138": 51, "grad_fn": [51, 92], "addbackward0": 51, "tensordictsequ": 51, "net1": 51, "module1": 51, "td_module1": 51, "module2": 51, "td_module2": 51, "absent": 51, "pattern": 51, "acord": 51, "idn": 51, "modulelist": 51, "0x126ed1ca0": 51, "0x129efae50": 51, "y0": 51, "y1": 51, "visibl": 52, "my_map": 53, "npe": 53, "scale_map": [53, 58, 61, 92], "scale_lb": [53, 58, 61, 92], "my_method": 54, "my_funct": [54, 76], "min_val": [55, 66, 92], "01": [55, 90, 92, 94, 96], "bias": 55, "softplu": [55, 58, 61, 64, 66, 92], "_bia": 55, "shift": 55, "nowarn": 56, "entropi": [56, 59, 68, 91, 96], "aggreg": [56, 59, 68], "mymodul": [57, 70], "keys_in": 57, "keys_out": 57, "dispatch_kwarg": 57, "mymodulenest": 57, "a_c": 57, "sep": 57, "asepc": 57, "oopsi": 57, "scale_shap": 58, "0001": [58, 61, 92], "make_param": 58, "init_valu": 58, "trainabl": 58, "biased_softplus_1": [58, 61], "num_output": 58, "module_norm": 58, "lstm": [58, 61], "extra_kwarg": 59, "entropy_kei": 59, "log_prob_composit": 59, "entropy_composit": 59, "cdf": 59, "icdf": 59, "tbe": 59, "sample_nam": 59, "_entropi": 59, "plu": [59, 88], "cont": [59, 68], "disc": [59, 68], "categor": [59, 62, 68], "cont_log_prob": [59, 68], "disc_log_prob": [59, 68], "atol": 60, "06": [60, 96], "rtol": 60, "batch_shap": 60, "event_shap": 60, "rel": [60, 91, 96, 102], "outcom": 60, "hot": 62, "excacli": 62, "discret": [62, 92, 95], "validate_arg": 63, "truncat": 63, "peopl": 63, "sc": 63, "fsu": 63, "edu": 63, "jburkardt": 63, "truncated_norm": 63, "pdf": 63, "invers": 64, "expln": 66, "biased_softplu": 66, "begin": [66, 76], "biased_softplus_": 66, "add_custom_map": 66, "do_softmax": 67, "somewhat": 68, "lp": 68, "0886": 68, "2155": 68, "0414": 68, "8973": 68, "5165": 68, "4402": 68, "2806": 68, "2799": 68, "1733": 68, "0407": 68, "3593": 68, "5763": [68, 97], "polici": 69, "in_key_attr": 70, "out_key_attr": 70, "skip_exist": 70, "abl": [70, 87, 89, 92, 95, 97, 102, 103], "fun": 70, "partial": [70, 87, 89], "intend": [70, 74], "outsid": 70, "hello": 70, "ot": 70, "mistakenli": 70, "subgraph": 70, "deactiv": [70, 87], "pad_siz": 72, "padding_left": 72, "padding_right": 72, "padding_top": 72, "padding_bottom": 72, "dim0_left": 72, "dim0_right": 72, "dim1_left": 72, "dim1_right": 72, "padded_td": [72, 73], "list_of_tensordict": 73, "pad_dim": 73, "return_mask": 73, "stack_len": 73, "new_shap": 73, "max_seq_length": 73, "list_td": 73, "pars": 74, "repr": [74, 87], "capture_non_tensor_stack": 76, "stackabl": 78, "entiti": 78, "list_to_stack": 78, "thie": 80, "mydata": [80, 87], "expand_and_mask": 80, "nestingmydata": 80, "nesting_data": 80, "hint": [80, 87], "help": [80, 87, 95, 97], "td_ref": 83, "in_refer": 83, "expected_in_refer": 83, "assert_clos": [83, 102], "detect": 84, "identifi": 84, "corrspond": 84, "unique_indic": 84, "occurr": 84, "return_index": 84, "output_tensordict": 84, "remove_duplicate_el": 84, "expected_output": 84, "ml": 86, "pipelin": [86, 88, 91, 95, 96, 97, 100], "basic": [86, 95, 97], "512": [86, 91, 96], "necessarili": [86, 100], "suffic": 86, "sub_modul": 86, "summari": 86, "statist": 86, "straightforward": [86, 88], "reiniti": 86, "ensemblemodul": 86, "compon": [86, 92, 97], "reach": 86, "predefin": 87, "__future__": [87, 89], "annot": [87, 89], "floatdata": 87, "intdata": 87, "non_tensordata": 87, "check_nest": 87, "nested_test": 87, "omit": [87, 98], "intern": 87, "test_chang": 87, "nested_test_chang": 87, "data2": 87, "cat_tc": 87, "catted_tc": 87, "json": [87, 89], "deseri": 87, "data_load": 87, "inequ": 87, "discrep": 87, "userwarn": 87, "test_new": 87, "stack_tc": 87, "__setattr__": 87, "tc": [87, 89], "tc_autocast": 87, "tc_not_autocast": 87, "type0": 87, "type1": 87, "widespread": 87, "drastic": 87, "pack": 88, "situat": [88, 89], "undon": 88, "primit": [88, 92], "handi": 88, "eas": 88, "de": 88, "goe": 88, "pointer": 88, "my_imag": 88, "unint8": 88, "mini_batch": 88, "er": 88, "think": 88, "_foreach_": 88, "fuse": 88, "kernel": 88, "pyfunc": 88, "shine": 88, "td_in": 88, "td_out": 88, "imagin": 89, "mainli": 89, "magnitud": 89, "__faster__": 89, "relianc": 89, "explain": [89, 92, 97], "mmap": 89, "unsaf": 89, "memorybuff": 89, "amort": 89, "io": 89, "launch": 89, "concurr": 89, "appar": 89, "disadvantag": 89, "Not": 89, "four": 89, "weights_disk": 89, "dir": 89, "new_weight": 89, "prealloc": 89, "make_datum": 89, "255": [89, 97, 100], "dataset_s": 89, "datum": 89, "data_disk": 89, "date": 89, "system": 89, "releant": 89, "print_directory_tre": 89, "loaded_data": 89, "tmpzy1jcaoq": 89, "_tensordict": 89, "tmpdir_0": 89, "tmpdir_1": 89, "memorymap": 89, "mainten": 89, "discontinu": 89, "checkpoint": 89, "moreov": [89, 95], "buit": 89, "huge": 89, "hundr": 89, "gb": 89, "ram": [89, 97], "don": 89, "advanc": 89, "margin": 89, "tensordict_sourc": 89, "snapshot": 89, "app_stat": 89, "my": 89, "hood": [89, 100], "tensordict_target": 89, "state_target": 89, "restor": 89, "uuid": 89, "uuid4": 89, "tensordict2": 89, "target_st": 89, "price": 89, "pai": 89, "again": [89, 98], "statedict": 89, "explicitli": [89, 100], "my_tensordict_sourc": 89, "implic": 89, "unnot": 89, "td_dest": 89, "saniti": 89, "fairli": 89, "tc_dest": 89, "02": [90, 94, 96], "582": [90, 94], "galleri": [90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "mem": [90, 94], "mb": [90, 94], "tensorclass_fashion": [90, 94, 96], "04": [90, 94], "408": [90, 94, 96], "data_fashion": [90, 91, 94], "00": [90, 94, 96, 97], "022": [90, 91, 94], "tensordict_modul": [90, 94, 100], "878": [90, 94, 100], "streamed_tensordict": [90, 94, 95], "026": [90, 94, 95], "505": [90, 92, 94], "tensorclass_imagenet": [90, 94, 97], "712": [90, 94, 97], "tensordict_kei": [90, 94, 98], "010": [90, 94, 98], "tensordict_shap": [90, 94, 102], "008": [90, 94, 102], "tensordict_memori": [90, 94, 99], "005": [90, 94, 99, 103], "tensordict_sl": [90, 94, 103], "tensordict_prealloc": [90, 94, 101], "003": [90, 94, 101], "download": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "transpar": [91, 96, 97], "heavili": [91, 96], "quickstart": [91, 96], "torchvis": [91, 96, 97], "totensor": [91, 96, 97], "is_avail": [91, 96, 97], "conveni": [91, 96, 97, 100], "prepar": [91, 96], "fashionmnist": [91, 96], "cloth": [91, 96], "classifi": [91, 96], "bag": [91, 96, 102], "sneaker": [91, 96], "training_data": [91, 96], "test_data": [91, 96], "repeatedli": [91, 96], "training_data_td": 91, "test_data_td": 91, "Then": 91, "front": 91, "img": 91, "__len__": [91, 96, 97], "__getitem__": [91, 96, 97], "__getitems__": [91, 96, 97], "style": [91, 96, 97], "collat": [91, 96, 97], "train_dataload": [91, 96, 97], "tor401": [91, 96, 97], "test_dataload": [91, 96], "train_dataloader_td": 91, "test_dataloader_td": 91, "linear_relu_stack": [91, 96], "model_td": 91, "784": [91, 96], "optimis": [91, 96], "stochast": [91, 92, 96], "descent": [91, 96], "crossentropyloss": [91, 96], "sgd": [91, 96], "optimizer_td": 91, "pred": [91, 96], "7f": [91, 96], "5d": [91, 96], "adjust": [91, 96], "unpack": [91, 92, 96], "explicit": [91, 96], "train_td": 91, "num_batch": [91, 96], "test_loss": [91, 96], "no_grad": [91, 96], "argmax": [91, 96], "accuraci": [91, 96], "1f": [91, 96], "avg": [91, 96], "8f": [91, 96], "test_td": 91, "epoch": [91, 96, 97], "4f": [91, 96, 97, 100], "301062": 91, "60000": [91, 96], "294650": 91, "6400": [91, 96], "274653": 91, "12800": [91, 96], "267888": 91, "19200": [91, 96], "258060": 91, "25600": [91, 96], "225675": 91, "32000": [91, 96], "240006": 91, "38400": [91, 96], "200413": 91, "44800": [91, 96], "202364": 91, "51200": [91, 96], "178982": 91, "57600": [91, 96], "169589": 91, "178837": 91, "169870": [91, 96], "116293": 91, "127164": 91, "081059": 91, "032124": 91, "058713": 91, "983018": 91, "989899": 91, "927003": 91, "61": [91, 95], "918708": 91, "950750": 91, "920872": 91, "808823": 91, "840343": 91, "733963": 91, "697750": 91, "708158": 91, "616235": 91, "636816": 91, "531745": 91, "62": [91, 95, 96], "549051": 91, "618212": 91, "582174": 91, "433725": 91, "493666": 91, "372837": 91, "382267": 91, "382179": 91, "316978": 91, "348909": 91, "242706": 91, "63": [91, 95, 96], "273492": 91, "358715": 91, "336883": 91, "171460": 91, "265336": 91, "137851": 91, "177808": 91, "184706": 91, "133206": 91, "169612": 91, "078699": 91, "104280": 91, "8605": 91, "308559": 91, "298075": 91, "267063": 91, "257815": 91, "251490": 91, "212545": 91, "234980": 91, "197786": 91, "190975": 91, "153899": 91, "148722": 91, "166590": 91, "151617": 91, "086301": 91, "100768": 91, "060200": 91, "995413": 91, "029481": 91, "952719": 91, "954673": 91, "877815": 91, "873121": 91, "910882": 91, "872000": 91, "752153": 91, "797003": 91, "685629": 91, "641889": 91, "661434": 91, "568761": 91, "590949": 91, "482356": 91, "495837": 91, "564932": 91, "521047": 91, "373975": 91, "450523": 91, "329550": 91, "328318": 91, "339795": 91, "273234": 91, "305240": 91, "205707": 91, "229061": 91, "304663": 91, "281663": 91, "120496": 91, "230770": 91, "107500": 91, "127207": 91, "148869": 91, "094455": 91, "130545": 91, "050718": 91, "65": [91, 95, 96], "068339": 91, "3177": 91, "minut": [91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "jupyt": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "notebook": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "ipynb": [91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "zip": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "sphinx": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103], "author": [92, 95, 98, 99, 100, 101, 102, 103], "vincent": [92, 95, 100], "moen": [92, 95, 100], "often": [92, 95, 100], "isol": [92, 100], "hardwar": 92, "robot": 92, "drone": 92, "altogeth": 92, "onnx": 92, "ai": 92, "latent": 92, "0000": 92, "2130": 92, "relubackward0": 92, "4297": 92, "4880": 92, "0696": 92, "4153": 92, "addmmbackward0": 92, "splitbackward0": 92, "9568": 92, "7597": 92, "clampminbackward0": 92, "quit": 92, "annoi": 92, "wast": 92, "exportedprogram": 92, "explor": [92, 95], "graph_signatur": 92, "focu": 92, "clearer": 92, "model_export": 92, "graphmodul": 92, "_guards_fn": 92, "guardsfn": 92, "fx_pytre": 92, "tree_flatten_spec": 92, "_in_spec": 92, "module_0_module_weight": 92, "module_0_module_bia": 92, "module_2_module_weight": 92, "module_2_module_bia": 92, "aten": 92, "linear_1": 92, "5254586935043335": 92, "add_1": 92, "broadcast_tensor": 92, "getitem_2": 92, "getitem_3": 92, "tree_unflatten": 92, "_out_spec": 92, "print_read": 92, "tdmodul": 92, "1e6": 92, "2f": 92, "micro": 92, "584": 92, "388": 92, "p_l__args___0_module_0_module_weight": 92, "f32": 92, "p_l__args___0_module_0_module_bia": 92, "p_l__args___0_module_2_module_weight": 92, "p_l__args___0_module_2_module_bia": 92, "1133": [92, 100], "_call_modul": [92, 100], "continu": [92, 95], "85": 92, "70": [92, 95], "86": 92, "env": 92, "python3": 92, "site": 92, "broadcast_al": 92, "underscor": 92, "model_nest": 92, "model_nested_export": 92, "some_kei": 92, "pure": 92, "protocol": 92, "convention": 92, "pt2": 92, "extens": 92, "recal": 92, "argu": 92, "neglig": 92, "induc": 92, "unwant": [92, 100], "module_filt": 92, "discuss": [92, 103], "address": 92, "enum": 92, "domain": 92, "recap": 92, "respond": 92, "normal_": 92, "add_2": 92, "deploy": 92, "aotinductor": 92, "tutorials_python": 93, "tutorials_jupyt": 93, "world": 95, "vari": 95, "frequenc": 95, "sensor": 95, "iot": 95, "financi": 95, "transact": 95, "social": 95, "media": [95, 97], "analyz": 95, "bucket": 95, "incom": 95, "analysi": 95, "challeng": 95, "interv": 95, "life": 95, "upcom": 95, "rectangular": 95, "bucket0": 95, "stream0": 95, "stream1": 95, "bucket1": 95, "principl": [95, 97], "data_select": 95, "data_plus_1": 95, "data_appli": 95, "data_cont": 95, "switch": [95, 100], "concret": 95, "asyncio": 95, "async": 95, "generate_numb": 95, "await": 95, "sleep": 95, "collect_data": 95, "stop": 95, "wait_for": 95, "nonloc": 95, "create_task": 95, "timeouterror": 95, "wait7hz": 95, "generate_task": 95, "collect_data_task": 95, "streamedtensordict": 95, "from_stream": 95, "values_task": 95, "hz": 95, "7hz": 95, "3hz": 95, "_nested_tensor_s": 95, "66": 95, "67": 95, "68": 95, "seen": [95, 100], "leverag": 95, "scalabl": 95, "demand": [95, 102], "thank": [95, 100], "4m": 96, "5k": 96, "362kb": 96, "229k": 96, "682kb": 96, "918k": 96, "10mb": 96, "64m": 96, "94mb": 96, "75m": 96, "8mb": 96, "6m": 96, "2mb": 96, "71": 96, "7m": 96, "9mb": 96, "94": 96, "8m": 96, "4mb": 96, "325kb": 96, "42m": 96, "359kb": 96, "676kb": 96, "09mb": 96, "83": 96, "67m": 96, "23mb": 96, "05mb": 96, "15k": 96, "7mb": 96, "good": [96, 97], "encapsul": [96, 97], "from_dataset": [96, 97], "fashionmnistdata": 96, "training_data_tc": 96, "test_data_tc": 96, "train_dataloader_tc": [96, 97], "test_dataloader_tc": 96, "model_tc": 96, "optimizer_tc": 96, "train_tc": 96, "test_tc": 96, "304295": 96, "292467": 96, "265522": 96, "257981": 96, "254022": 96, "207552": 96, "230046": 96, "188623": 96, "189116": 96, "152918": 96, "144971": 96, "158692": 96, "149089": 96, "080663": 96, "096974": 96, "054928": 96, "980426": 96, "017216": 96, "933484": 96, "944679": 96, "859434": 96, "859403": 96, "896417": 96, "863619": 96, "738634": 96, "777920": 96, "675339": 96, "616699": 96, "643870": 96, "548713": 96, "579284": 96, "459953": 96, "483177": 96, "555154": 96, "518547": 96, "363401": 96, "432712": 96, "326595": 96, "311536": 96, "330818": 96, "260638": 96, "298013": 96, "189928": 96, "219119": 96, "298967": 96, "281926": 96, "108016": 96, "214697": 96, "103521": 96, "113738": 96, "142686": 96, "084141": 96, "123867": 96, "035319": 96, "058954": 96, "9914": 96, "298965": 96, "288681": 96, "268647": 96, "269204": 96, "250088": 96, "214026": 96, "234497": 96, "191831": 96, "199696": 96, "158191": 96, "154577": 96, "162175": 96, "152566": 96, "092871": 96, "117188": 96, "060330": 96, "994441": 96, "040400": 96, "952990": 96, "974477": 96, "882735": 96, "888445": 96, "918317": 96, "884190": 96, "774226": 96, "824897": 96, "701611": 96, "659600": 96, "694573": 96, "594756": 96, "626263": 96, "507696": 96, "533214": 96, "592811": 96, "556855": 96, "418763": 96, "489531": 96, "363783": 96, "371256": 96, "385797": 96, "314782": 96, "346173": 96, "236126": 96, "267828": 96, "339264": 96, "319841": 96, "163704": 96, "264053": 96, "136299": 96, "173272": 96, "189150": 96, "133814": 96, "072969": 96, "099948": 96, "4593": 96, "idea": 97, "raw": 97, "10x": 97, "speedup": 97, "imagenet": [97, 99], "subdirectori": 97, "strtobool": 97, "overfit": 97, "train_transform": 97, "randomresizedcrop": 97, "224": 97, "randomhorizontalflip": 97, "485": 97, "456": 97, "406": 97, "229": 97, "225": 97, "val_transform": 97, "resiz": 97, "256": [97, 100], "centercrop": 97, "imagefold": 97, "data_dir": 97, "hymenoptera_data": 97, "train_data": 97, "val_data": 97, "train_data_raw": 97, "piltotensor": 97, "vector": 97, "invaffin": 97, "crop": 97, "flip": 97, "randomhflip": 97, "bernoulli_": 97, "randomcrop": 97, "index0": 97, "index1": 97, "collate_transform": 97, "known": 97, "apriori": 97, "imagenetdata": 97, "_batch": 97, "train_data_tc": 97, "val_data_tc": 97, "helper": 97, "parallel": 97, "But": 97, "val_dataload": 97, "val_dataloader_tc": 97, "measur": 97, "rate": 97, "fp": 97, "bigger": 97, "improv": 97, "aw": 97, "ec2": 97, "a100": 97, "png": 97, "alt": 97, "chart": 97, "henc": [97, 99], "__": 97, "blob": 97, "244": 97, "234": 97, "86it": 97, "710": 97, "87it": 97, "153": 97, "187": 97, "24it": 97, "383": 97, "27it": 97, "318": 97, "89it": 97, "908": 97, "0572": 97, "2423": 97, "1341": 97, "1640": 97, "531": 97, "9231": 97, "2425": 97, "22559": 97, "4236": 97, "0057": 97, "tom": [98, 99, 101, 102, 103], "beglei": [98, 99, 101, 102, 103], "accomplish": 98, "request": 98, "banana": 98, "statement": 98, "chosen": 98, "furthermor": 98, "nested_tensordict": 98, "double_nest": 98, "double_nested_a": 98, "nested_a": 98, "top": 98, "conjunct": [98, 102], "lookup": 98, "flattened_tensordict": 98, "meth": 98, "clear_devic": 99, "slowli": 99, "mm_tensordict": 99, "pt": 99, "nicola": 100, "dufour": 100, "exemplifi": 100, "introduc": 100, "unwat": 100, "programat": 100, "programmat": 100, "architectur": 100, "resnet": 100, "tini": 100, "perceptron": 100, "presum": 100, "feed": 100, "linear0": 100, "incorpor": 100, "convolut": 100, "vision": 100, "forward_hook": 100, "activ": 100, "relu0": 100, "fly": 100, "block0": 100, "relu1": 100, "linear2": 100, "block1": 100, "residu": 100, "flesh": 100, "genuin": 100, "concern": 100, "accumul": 100, "anywai": 100, "garbag": 100, "collector": 100, "opportun": 100, "deconstruct": 100, "greatli": 100, "residualblock": 100, "block_notd": 100, "block_tdm": 100, "block_td": 100, "tdm": 100, "block_notd_c": 100, "block_tdm_c": 100, "block_tds_c": 100, "221": 100, "5332": 100, "290": 100, "9700": 100, "527": 100, "8610": 100, "partit": 100, "due": 100, "201": 100, "202": 100, "203": 100, "204": 100, "366": 100, "5070": 100, "319": 100, "_self": 100, "369": 100, "1174": 100, "tensors_out": 100, "365": 100, "2570": 100, "633": 100, "tensordict_exec": 100, "_run_modul": 100, "579": 100, "328": 100, "131": 100, "377": 100, "2970": 100, "onverhead": 100, "disappear": 100, "fact": 100, "workspac": 100, "freed": 100, "preced": 100, "wire": 100, "extractor": 100, "action_log_prob": 100, "oblivi": 100, "manner": 100, "neat": 100, "make_tensordict": 101, "perhap": 101, "initialis": 101, "prepopul": 101, "random_tensordict": 101, "agre": [102, 103], "indexed_tensordict": 102, "reshaped_tensordict": 102, "interpret": 102, "throughout": 102, "conceptu": 102, "cloned_tensordict": 102, "stacked_tensordict": 102, "set_lazy_legaci": 102, "dense_stack": 102, "concatenated_tensordict": 102, "exp_tensordict": 102, "squeezed_tensordict": 102, "unsqueezed_tensordict": 102, "were": 102, "lazy_unsqueez": 102, "dense_unsqueez": 102, "bear": 102, "ever": 102, "unaffect": 102, "drop": [102, 103], "_viewedtensordict": 102, "viewed_tensordict": 102, "permuted_tensordict": 102, "quick": 102, "tdt": 102, "gathered_tensordict": 102, "0980": 102, "4639": 102, "7610": 102, "0350": 102, "8796": 102, "7016": 102, "8746": 102, "4600": 102, "2030": 102, "7199": 102, "7543": 102, "2191": 102, "simultan": 103, "new_tensordict": 103}, "objects": {"tensordict": [[4, 0, 1, "", "LazyStackedTensorDict"], [5, 0, 1, "", "MemoryMappedTensor"], [6, 0, 1, "", "MetaData"], [7, 0, 1, "", "NonTensorData"], [8, 0, 1, "", "NonTensorStack"], [9, 0, 1, "", "PersistentTensorDict"], [10, 0, 1, "", "TensorClass"], [11, 0, 1, "", "TensorDict"], [12, 0, 1, "", "TensorDictBase"], [13, 0, 1, "", "TensorDictParams"], [14, 0, 1, "", "capture_non_tensor_stack"], [15, 0, 1, "", "cat"], [16, 3, 1, "", "default_is_leaf"], [17, 0, 1, "", "dense_stack_tds"], [18, 0, 1, "", "from_any"], [19, 0, 1, "", "from_consolidated"], [20, 0, 1, "", "from_dataclass"], [21, 0, 1, "", "from_dict"], [22, 0, 1, "", "from_h5"], [23, 0, 1, "", "from_module"], [24, 0, 1, "", "from_modules"], [25, 0, 1, "", "from_namedtuple"], [26, 0, 1, "", "from_pytree"], [27, 0, 1, "", "from_struct_array"], [28, 0, 1, "", "from_tuple"], [29, 0, 1, "", "fromkeys"], [30, 0, 1, "", "get_defaults_to_none"], [31, 0, 1, "", "is_batchedtensor"], [32, 3, 1, "", "is_leaf_nontensor"], [33, 0, 1, "", "is_tensor_collection"], [34, 0, 1, "", "lazy_legacy"], [35, 0, 1, "", "lazy_stack"], [36, 0, 1, "", "list_to_stack"], [37, 0, 1, "", "load"], [38, 0, 1, "", "load_memmap"], [39, 0, 1, "", "make_tensordict"], [40, 0, 1, "", "maybe_dense_stack"], [41, 0, 1, "", "memmap"], [42, 0, 1, "", "merge_tensordicts"], [72, 0, 1, "", "pad"], [73, 0, 1, "", "pad_sequence"], [74, 0, 1, "", "parse_tensor_dict_string"], [75, 0, 1, "", "save"], [76, 0, 1, "", "set_capture_non_tensor_stack"], [77, 0, 1, "", "set_lazy_legacy"], [78, 0, 1, "", "set_list_to_stack"], [79, 0, 1, "", "stack"], [80, 0, 1, "", "tensorclass"]], "tensordict.LazyStackedTensorDict": [[4, 1, 1, "", "abs"], [4, 1, 1, "", "abs_"], [4, 1, 1, "", "acos"], [4, 1, 1, "", "acos_"], [4, 1, 1, "", "add"], [4, 1, 1, "", "add_"], [4, 1, 1, "", "addcdiv"], [4, 1, 1, "", "addcdiv_"], [4, 1, 1, "", "addcmul"], [4, 1, 1, "", "addcmul_"], [4, 1, 1, "", "all"], [4, 1, 1, "", "amax"], [4, 1, 1, "", "amin"], [4, 1, 1, "", "any"], [4, 1, 1, "", "append"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_"], [4, 1, 1, "", "as_tensor"], [4, 1, 1, "", "asin"], [4, 1, 1, "", "asin_"], [4, 1, 1, "", "atan"], [4, 1, 1, "", "atan_"], [4, 1, 1, "", "auto_batch_size_"], [4, 1, 1, "", "auto_device_"], [4, 2, 1, "", "batch_dims"], [4, 2, 1, "", "batch_size"], [4, 1, 1, "", "bfloat16"], [4, 1, 1, "", "bitwise_and"], [4, 1, 1, "", "bool"], [4, 1, 1, "", "bytes"], [4, 1, 1, "", "cat"], [4, 1, 1, "", "cat_from_tensordict"], [4, 1, 1, "", "cat_tensors"], [4, 1, 1, "", "ceil"], [4, 1, 1, "", "ceil_"], [4, 1, 1, "", "chunk"], [4, 1, 1, "", "clamp"], [4, 1, 1, "", "clamp_max"], [4, 1, 1, "", "clamp_max_"], [4, 1, 1, "", "clamp_min"], [4, 1, 1, "", "clamp_min_"], [4, 1, 1, "", "clear"], [4, 1, 1, "", "clear_device_"], [4, 1, 1, "", "clear_refs_for_compile_"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "complex128"], [4, 1, 1, "", "complex32"], [4, 1, 1, "", "complex64"], [4, 1, 1, "", "consolidate"], [4, 1, 1, "", "contiguous"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "copy_"], [4, 1, 1, "", "copy_at_"], [4, 1, 1, "", "cos"], [4, 1, 1, "", "cos_"], [4, 1, 1, "", "cosh"], [4, 1, 1, "", "cosh_"], [4, 1, 1, "", "cpu"], [4, 1, 1, "", "create_nested"], [4, 1, 1, "", "cuda"], [4, 1, 1, "", "cummax"], [4, 1, 1, "", "cummin"], [4, 2, 1, "", "data"], [4, 1, 1, "", "data_ptr"], [4, 1, 1, "", "del_"], [4, 1, 1, "", "densify"], [4, 2, 1, "", "depth"], [4, 1, 1, "", "detach"], [4, 1, 1, "", "detach_"], [4, 2, 1, "", "device"], [4, 1, 1, "", "dim"], [4, 1, 1, "", "div"], [4, 1, 1, "", "div_"], [4, 1, 1, "", "double"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "dumps"], [4, 1, 1, "", "empty"], [4, 1, 1, "", "entry_class"], [4, 1, 1, "", "erf"], [4, 1, 1, "", "erf_"], [4, 1, 1, "", "erfc"], [4, 1, 1, "", "erfc_"], [4, 1, 1, "", "exclude"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "exp_"], [4, 1, 1, "", "expand"], [4, 1, 1, "", "expand_as"], [4, 1, 1, "", "expm1"], [4, 1, 1, "", "expm1_"], [4, 1, 1, "", "extend"], [4, 1, 1, "", "fill_"], [4, 1, 1, "", "filter_empty_"], [4, 1, 1, "", "filter_non_tensor_data"], [4, 1, 1, "", "flatten"], [4, 1, 1, "", "flatten_keys"], [4, 1, 1, "", "float"], [4, 1, 1, "", "float16"], [4, 1, 1, "", "float32"], [4, 1, 1, "", "float64"], [4, 1, 1, "", "floor"], [4, 1, 1, "", "floor_"], [4, 1, 1, "", "frac"], [4, 1, 1, "", "frac_"], [4, 1, 1, "", "from_any"], [4, 1, 1, "", "from_dataclass"], [4, 1, 1, "", "from_dict"], [4, 1, 1, "", "from_dict_instance"], [4, 1, 1, "", "from_h5"], [4, 1, 1, "", "from_module"], [4, 1, 1, "", "from_modules"], [4, 1, 1, "", "from_namedtuple"], [4, 1, 1, "", "from_pytree"], [4, 1, 1, "", "from_remote_init"], [4, 1, 1, "", "from_struct_array"], [4, 1, 1, "", "from_tuple"], [4, 1, 1, "", "fromkeys"], [4, 1, 1, "", "gather"], [4, 1, 1, "", "gather_and_stack"], [4, 1, 1, "", "get"], [4, 1, 1, "", "get_at"], [4, 1, 1, "", "get_item_shape"], [4, 1, 1, "", "get_nestedtensor"], [4, 1, 1, "", "get_non_tensor"], [4, 2, 1, "", "grad"], [4, 1, 1, "", "half"], [4, 1, 1, "", "init_remote"], [4, 1, 1, "", "insert"], [4, 1, 1, "", "int"], [4, 1, 1, "", "int16"], [4, 1, 1, "", "int32"], [4, 1, 1, "", "int64"], [4, 1, 1, "", "int8"], [4, 1, 1, "", "irecv"], [4, 1, 1, "", "is_consolidated"], [4, 1, 1, "", "is_contiguous"], [4, 1, 1, "", "is_empty"], [4, 1, 1, "", "is_floating_point"], [4, 1, 1, "", "is_memmap"], [4, 1, 1, "", "is_shared"], [4, 1, 1, "", "isend"], [4, 1, 1, "", "isfinite"], [4, 1, 1, "", "isnan"], [4, 1, 1, "", "isneginf"], [4, 1, 1, "", "isposinf"], [4, 1, 1, "", "isreal"], [4, 1, 1, "", "items"], [4, 1, 1, "", "keys"], [4, 1, 1, "", "lazy_stack"], [4, 1, 1, "", "lerp"], [4, 1, 1, "", "lerp_"], [4, 1, 1, "", "lgamma"], [4, 1, 1, "", "lgamma_"], [4, 1, 1, "", "load"], [4, 1, 1, "", "load_"], [4, 1, 1, "", "load_memmap"], [4, 1, 1, "", "load_memmap_"], [4, 1, 1, "", "load_state_dict"], [4, 1, 1, "", "lock_"], [4, 1, 1, "", "log"], [4, 1, 1, "", "log10"], [4, 1, 1, "", "log10_"], [4, 1, 1, "", "log1p"], [4, 1, 1, "", "log1p_"], [4, 1, 1, "", "log2"], [4, 1, 1, "", "log2_"], [4, 1, 1, "", "log_"], [4, 1, 1, "", "logical_and"], [4, 1, 1, "", "logsumexp"], [4, 1, 1, "", "make_memmap"], [4, 1, 1, "", "make_memmap_from_storage"], [4, 1, 1, "", "make_memmap_from_tensor"], [4, 1, 1, "", "map"], [4, 1, 1, "", "map_iter"], [4, 1, 1, "", "masked_fill"], [4, 1, 1, "", "masked_fill_"], [4, 1, 1, "", "masked_select"], [4, 1, 1, "", "max"], [4, 1, 1, "", "maximum"], [4, 1, 1, "", "maximum_"], [4, 1, 1, "", "maybe_dense_stack"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "memmap"], [4, 1, 1, "", "memmap_"], [4, 1, 1, "", "memmap_like"], [4, 1, 1, "", "memmap_refresh_"], [4, 1, 1, "", "min"], [4, 1, 1, "", "minimum"], [4, 1, 1, "", "minimum_"], [4, 1, 1, "", "mul"], [4, 1, 1, "", "mul_"], [4, 1, 1, "", "named_apply"], [4, 2, 1, "", "names"], [4, 1, 1, "", "nanmean"], [4, 1, 1, "", "nansum"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "ndimension"], [4, 1, 1, "", "neg"], [4, 1, 1, "", "neg_"], [4, 1, 1, "", "new_empty"], [4, 1, 1, "", "new_full"], [4, 1, 1, "", "new_ones"], [4, 1, 1, "", "new_tensor"], [4, 1, 1, "", "new_zeros"], [4, 1, 1, "", "non_tensor_items"], [4, 1, 1, "", "norm"], [4, 1, 1, "", "numel"], [4, 1, 1, "", "numpy"], [4, 1, 1, "", "param_count"], [4, 1, 1, "", "permute"], [4, 1, 1, "", "pin_memory"], [4, 1, 1, "", "pin_memory_"], [4, 1, 1, "", "pop"], [4, 1, 1, "", "popitem"], [4, 1, 1, "", "pow"], [4, 1, 1, "", "pow_"], [4, 1, 1, "", "prod"], [4, 1, 1, "", "qint32"], [4, 1, 1, "", "qint8"], [4, 1, 1, "", "quint4x2"], [4, 1, 1, "", "quint8"], [4, 1, 1, "", "reciprocal"], [4, 1, 1, "", "reciprocal_"], [4, 1, 1, "", "record_stream"], [4, 1, 1, "", "recv"], [4, 1, 1, "", "reduce"], [4, 1, 1, "", "refine_names"], [4, 1, 1, "", "rename"], [4, 1, 1, "", "rename_"], [4, 1, 1, "", "rename_key_"], [4, 1, 1, "", "repeat"], [4, 1, 1, "", "repeat_interleave"], [4, 1, 1, "", "replace"], [4, 1, 1, "", "requires_grad_"], [4, 1, 1, "", "reshape"], [4, 1, 1, "", "round"], [4, 1, 1, "", "round_"], [4, 1, 1, "", "rsub"], [4, 1, 1, "", "save"], [4, 2, 1, "", "saved_path"], [4, 1, 1, "", "select"], [4, 1, 1, "", "send"], [4, 1, 1, "", "separates"], [4, 1, 1, "", "set"], [4, 1, 1, "", "set_"], [4, 1, 1, "", "set_at_"], [4, 1, 1, "", "set_non_tensor"], [4, 1, 1, "", "setdefault"], [4, 2, 1, "", "shape"], [4, 1, 1, "", "share_memory_"], [4, 1, 1, "", "sigmoid"], [4, 1, 1, "", "sigmoid_"], [4, 1, 1, "", "sign"], [4, 1, 1, "", "sign_"], [4, 1, 1, "", "sin"], [4, 1, 1, "", "sin_"], [4, 1, 1, "", "sinh"], [4, 1, 1, "", "sinh_"], [4, 1, 1, "", "size"], [4, 1, 1, "", "softmax"], [4, 2, 1, "", "sorted_keys"], [4, 1, 1, "", "split"], [4, 1, 1, "", "split_keys"], [4, 1, 1, "", "sqrt"], [4, 1, 1, "", "sqrt_"], [4, 1, 1, "", "squeeze"], [4, 1, 1, "", "stack"], [4, 1, 1, "", "stack_from_tensordict"], [4, 1, 1, "", "stack_tensors"], [4, 1, 1, "", "state_dict"], [4, 1, 1, "", "std"], [4, 1, 1, "", "sub"], [4, 1, 1, "", "sub_"], [4, 1, 1, "", "sum"], [4, 1, 1, "", "tan"], [4, 1, 1, "", "tan_"], [4, 1, 1, "", "tanh"], [4, 1, 1, "", "tanh_"], [4, 1, 1, "", "tensor_split"], [4, 1, 1, "", "to"], [4, 1, 1, "", "to_dict"], [4, 1, 1, "", "to_h5"], [4, 1, 1, "", "to_lazystack"], [4, 1, 1, "", "to_mds"], [4, 1, 1, "", "to_module"], [4, 1, 1, "", "to_namedtuple"], [4, 1, 1, "", "to_padded_tensor"], [4, 1, 1, "", "to_pytree"], [4, 1, 1, "", "to_struct_array"], [4, 1, 1, "", "to_tensordict"], [4, 1, 1, "", "tolist"], [4, 1, 1, "", "transpose"], [4, 1, 1, "", "trunc"], [4, 1, 1, "", "trunc_"], [4, 1, 1, "", "type"], [4, 1, 1, "", "uint16"], [4, 1, 1, "", "uint32"], [4, 1, 1, "", "uint64"], [4, 1, 1, "", "uint8"], [4, 1, 1, "", "unbind"], [4, 1, 1, "", "unflatten"], [4, 1, 1, "", "unflatten_keys"], [4, 1, 1, "", "unlock_"], [4, 1, 1, "", "unsqueeze"], [4, 1, 1, "", "update"], [4, 1, 1, "", "update_"], [4, 1, 1, "", "update_at_"], [4, 1, 1, "", "valid_keys"], [4, 1, 1, "", "values"], [4, 1, 1, "", "var"], [4, 1, 1, "", "view"], [4, 1, 1, "", "where"], [4, 1, 1, "", "zero_"], [4, 1, 1, "", "zero_grad"]], "tensordict.MemoryMappedTensor": [[5, 1, 1, "", "chunk"], [5, 1, 1, "", "empty"], [5, 1, 1, "", "empty_like"], [5, 1, 1, "", "empty_nested"], [5, 2, 1, "", "filename"], [5, 1, 1, "", "from_filename"], [5, 1, 1, "", "from_handler"], [5, 1, 1, "", "from_tensor"], [5, 1, 1, "", "full"], [5, 1, 1, "", "full_like"], [5, 1, 1, "", "ones"], [5, 1, 1, "", "ones_like"], [5, 1, 1, "", "split"], [5, 1, 1, "", "unbind"], [5, 1, 1, "", "zeros"], [5, 1, 1, "", "zeros_like"]], "tensordict.MetaData": [[6, 1, 1, "", "cat"], [6, 2, 1, "", "device"], [6, 1, 1, "", "dumps"], [6, 1, 1, "", "fields"], [6, 1, 1, "", "from_any"], [6, 1, 1, "", "from_dataclass"], [6, 1, 1, "", "from_h5"], [6, 1, 1, "", "from_modules"], [6, 1, 1, "", "from_namedtuple"], [6, 1, 1, "", "from_pytree"], [6, 1, 1, "", "from_remote_init"], [6, 1, 1, "", "from_struct_array"], [6, 1, 1, "", "from_tensordict"], [6, 1, 1, "", "from_tuple"], [6, 1, 1, "", "fromkeys"], [6, 1, 1, "", "get"], [6, 1, 1, "", "lazy_stack"], [6, 1, 1, "", "load"], [6, 1, 1, "", "load_"], [6, 1, 1, "", "load_memmap"], [6, 1, 1, "", "load_state_dict"], [6, 1, 1, "", "maybe_dense_stack"], [6, 1, 1, "", "maybe_to_stack"], [6, 1, 1, "", "memmap"], [6, 1, 1, "", "memmap_"], [6, 1, 1, "", "memmap_like"], [6, 1, 1, "", "memmap_refresh_"], [6, 1, 1, "", "save"], [6, 1, 1, "", "set"], [6, 1, 1, "", "stack"], [6, 1, 1, "", "state_dict"], [6, 1, 1, "", "to_tensordict"], [6, 1, 1, "", "tolist"], [6, 1, 1, "", "unbind"]], "tensordict.NonTensorData": [[7, 1, 1, "", "cat"], [7, 2, 1, "", "device"], [7, 1, 1, "", "dumps"], [7, 1, 1, "", "fields"], [7, 1, 1, "", "from_any"], [7, 1, 1, "", "from_dataclass"], [7, 1, 1, "", "from_h5"], [7, 1, 1, "", "from_modules"], [7, 1, 1, "", "from_namedtuple"], [7, 1, 1, "", "from_pytree"], [7, 1, 1, "", "from_remote_init"], [7, 1, 1, "", "from_struct_array"], [7, 1, 1, "", "from_tensordict"], [7, 1, 1, "", "from_tuple"], [7, 1, 1, "", "fromkeys"], [7, 1, 1, "", "get"], [7, 1, 1, "", "lazy_stack"], [7, 1, 1, "", "load"], [7, 1, 1, "", "load_"], [7, 1, 1, "", "load_memmap"], [7, 1, 1, "", "load_state_dict"], [7, 1, 1, "", "maybe_dense_stack"], [7, 1, 1, "", "maybe_to_stack"], [7, 1, 1, "", "memmap"], [7, 1, 1, "", "memmap_"], [7, 1, 1, "", "memmap_like"], [7, 1, 1, "", "memmap_refresh_"], [7, 1, 1, "", "save"], [7, 1, 1, "", "set"], [7, 1, 1, "", "stack"], [7, 1, 1, "", "state_dict"], [7, 1, 1, "", "to_tensordict"], [7, 1, 1, "", "tolist"], [7, 1, 1, "", "unbind"]], "tensordict.NonTensorStack": [[8, 1, 1, "", "abs"], [8, 1, 1, "", "abs_"], [8, 1, 1, "", "acos"], [8, 1, 1, "", "acos_"], [8, 1, 1, "", "add"], [8, 1, 1, "", "add_"], [8, 1, 1, "", "addcdiv"], [8, 1, 1, "", "addcdiv_"], [8, 1, 1, "", "addcmul"], [8, 1, 1, "", "addcmul_"], [8, 1, 1, "", "all"], [8, 1, 1, "", "amax"], [8, 1, 1, "", "amin"], [8, 1, 1, "", "any"], [8, 1, 1, "", "append"], [8, 1, 1, "", "apply"], [8, 1, 1, "", "apply_"], [8, 1, 1, "", "as_tensor"], [8, 1, 1, "", "asin"], [8, 1, 1, "", "asin_"], [8, 1, 1, "", "atan"], [8, 1, 1, "", "atan_"], [8, 1, 1, "", "auto_batch_size_"], [8, 1, 1, "", "auto_device_"], [8, 2, 1, "", "batch_dims"], [8, 2, 1, "", "batch_size"], [8, 1, 1, "", "bfloat16"], [8, 1, 1, "", "bitwise_and"], [8, 1, 1, "", "bool"], [8, 1, 1, "", "bytes"], [8, 1, 1, "", "cat"], [8, 1, 1, "", "cat_from_tensordict"], [8, 1, 1, "", "cat_tensors"], [8, 1, 1, "", "ceil"], [8, 1, 1, "", "ceil_"], [8, 1, 1, "", "chunk"], [8, 1, 1, "", "clamp"], [8, 1, 1, "", "clamp_max"], [8, 1, 1, "", "clamp_max_"], [8, 1, 1, "", "clamp_min"], [8, 1, 1, "", "clamp_min_"], [8, 1, 1, "", "clear"], [8, 1, 1, "", "clear_device_"], [8, 1, 1, "", "clear_refs_for_compile_"], [8, 1, 1, "", "clone"], [8, 1, 1, "", "complex128"], [8, 1, 1, "", "complex32"], [8, 1, 1, "", "complex64"], [8, 1, 1, "", "consolidate"], [8, 1, 1, "", "contiguous"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "copy_"], [8, 1, 1, "", "copy_at_"], [8, 1, 1, "", "cos"], [8, 1, 1, "", "cos_"], [8, 1, 1, "", "cosh"], [8, 1, 1, "", "cosh_"], [8, 1, 1, "", "cpu"], [8, 1, 1, "", "create_nested"], [8, 1, 1, "", "cuda"], [8, 1, 1, "", "cummax"], [8, 1, 1, "", "cummin"], [8, 2, 1, "", "data"], [8, 1, 1, "", "data_ptr"], [8, 1, 1, "", "del_"], [8, 1, 1, "", "densify"], [8, 2, 1, "", "depth"], [8, 1, 1, "", "detach"], [8, 1, 1, "", "detach_"], [8, 2, 1, "", "device"], [8, 1, 1, "", "dim"], [8, 1, 1, "", "div"], [8, 1, 1, "", "div_"], [8, 1, 1, "", "double"], [8, 2, 1, "", "dtype"], [8, 1, 1, "", "dumps"], [8, 1, 1, "", "empty"], [8, 1, 1, "", "entry_class"], [8, 1, 1, "", "erf"], [8, 1, 1, "", "erf_"], [8, 1, 1, "", "erfc"], [8, 1, 1, "", "erfc_"], [8, 1, 1, "", "exclude"], [8, 1, 1, "", "exp"], [8, 1, 1, "", "exp_"], [8, 1, 1, "", "expand"], [8, 1, 1, "", "expand_as"], [8, 1, 1, "", "expm1"], [8, 1, 1, "", "expm1_"], [8, 1, 1, "", "extend"], [8, 1, 1, "", "fill_"], [8, 1, 1, "", "filter_empty_"], [8, 1, 1, "", "filter_non_tensor_data"], [8, 1, 1, "", "flatten"], [8, 1, 1, "", "flatten_keys"], [8, 1, 1, "", "float"], [8, 1, 1, "", "float16"], [8, 1, 1, "", "float32"], [8, 1, 1, "", "float64"], [8, 1, 1, "", "floor"], [8, 1, 1, "", "floor_"], [8, 1, 1, "", "frac"], [8, 1, 1, "", "frac_"], [8, 1, 1, "", "from_any"], [8, 1, 1, "", "from_dataclass"], [8, 1, 1, "", "from_dict"], [8, 1, 1, "", "from_dict_instance"], [8, 1, 1, "", "from_h5"], [8, 1, 1, "", "from_module"], [8, 1, 1, "", "from_modules"], [8, 1, 1, "", "from_namedtuple"], [8, 1, 1, "", "from_pytree"], [8, 1, 1, "", "from_remote_init"], [8, 1, 1, "", "from_struct_array"], [8, 1, 1, "", "from_tuple"], [8, 1, 1, "", "fromkeys"], [8, 1, 1, "", "gather"], [8, 1, 1, "", "gather_and_stack"], [8, 1, 1, "", "get"], [8, 1, 1, "", "get_at"], [8, 1, 1, "", "get_item_shape"], [8, 1, 1, "", "get_nestedtensor"], [8, 1, 1, "", "get_non_tensor"], [8, 2, 1, "", "grad"], [8, 1, 1, "", "half"], [8, 1, 1, "", "init_remote"], [8, 1, 1, "", "insert"], [8, 1, 1, "", "int"], [8, 1, 1, "", "int16"], [8, 1, 1, "", "int32"], [8, 1, 1, "", "int64"], [8, 1, 1, "", "int8"], [8, 1, 1, "", "irecv"], [8, 1, 1, "", "is_consolidated"], [8, 1, 1, "", "is_contiguous"], [8, 1, 1, "", "is_empty"], [8, 1, 1, "", "is_floating_point"], [8, 1, 1, "", "is_memmap"], [8, 1, 1, "", "is_shared"], [8, 1, 1, "", "isend"], [8, 1, 1, "", "isfinite"], [8, 1, 1, "", "isnan"], [8, 1, 1, "", "isneginf"], [8, 1, 1, "", "isposinf"], [8, 1, 1, "", "isreal"], [8, 1, 1, "", "items"], [8, 1, 1, "", "keys"], [8, 1, 1, "", "lazy_stack"], [8, 1, 1, "", "lerp"], [8, 1, 1, "", "lerp_"], [8, 1, 1, "", "lgamma"], [8, 1, 1, "", "lgamma_"], [8, 1, 1, "", "load"], [8, 1, 1, "", "load_"], [8, 1, 1, "", "load_memmap"], [8, 1, 1, "", "load_memmap_"], [8, 1, 1, "", "load_state_dict"], [8, 1, 1, "", "lock_"], [8, 1, 1, "", "log"], [8, 1, 1, "", "log10"], [8, 1, 1, "", "log10_"], [8, 1, 1, "", "log1p"], [8, 1, 1, "", "log1p_"], [8, 1, 1, "", "log2"], [8, 1, 1, "", "log2_"], [8, 1, 1, "", "log_"], [8, 1, 1, "", "logical_and"], [8, 1, 1, "", "logsumexp"], [8, 1, 1, "", "make_memmap"], [8, 1, 1, "", "make_memmap_from_storage"], [8, 1, 1, "", "make_memmap_from_tensor"], [8, 1, 1, "", "map"], [8, 1, 1, "", "map_iter"], [8, 1, 1, "", "masked_fill"], [8, 1, 1, "", "masked_fill_"], [8, 1, 1, "", "masked_select"], [8, 1, 1, "", "max"], [8, 1, 1, "", "maximum"], [8, 1, 1, "", "maximum_"], [8, 1, 1, "", "maybe_dense_stack"], [8, 1, 1, "", "maybe_to_stack"], [8, 1, 1, "", "mean"], [8, 1, 1, "", "memmap"], [8, 1, 1, "", "memmap_"], [8, 1, 1, "", "memmap_like"], [8, 1, 1, "", "memmap_refresh_"], [8, 1, 1, "", "min"], [8, 1, 1, "", "minimum"], [8, 1, 1, "", "minimum_"], [8, 1, 1, "", "mul"], [8, 1, 1, "", "mul_"], [8, 1, 1, "", "named_apply"], [8, 2, 1, "", "names"], [8, 1, 1, "", "nanmean"], [8, 1, 1, "", "nansum"], [8, 2, 1, "", "ndim"], [8, 1, 1, "", "ndimension"], [8, 1, 1, "", "neg"], [8, 1, 1, "", "neg_"], [8, 1, 1, "", "new_empty"], [8, 1, 1, "", "new_full"], [8, 1, 1, "", "new_ones"], [8, 1, 1, "", "new_tensor"], [8, 1, 1, "", "new_zeros"], [8, 1, 1, "", "non_tensor_items"], [8, 1, 1, "", "norm"], [8, 1, 1, "", "numel"], [8, 1, 1, "", "numpy"], [8, 1, 1, "", "param_count"], [8, 1, 1, "", "permute"], [8, 1, 1, "", "pin_memory"], [8, 1, 1, "", "pin_memory_"], [8, 1, 1, "", "pop"], [8, 1, 1, "", "popitem"], [8, 1, 1, "", "pow"], [8, 1, 1, "", "pow_"], [8, 1, 1, "", "prod"], [8, 1, 1, "", "qint32"], [8, 1, 1, "", "qint8"], [8, 1, 1, "", "quint4x2"], [8, 1, 1, "", "quint8"], [8, 1, 1, "", "reciprocal"], [8, 1, 1, "", "reciprocal_"], [8, 1, 1, "", "record_stream"], [8, 1, 1, "", "recv"], [8, 1, 1, "", "reduce"], [8, 1, 1, "", "refine_names"], [8, 1, 1, "", "rename"], [8, 1, 1, "", "rename_"], [8, 1, 1, "", "rename_key_"], [8, 1, 1, "", "repeat"], [8, 1, 1, "", "repeat_interleave"], [8, 1, 1, "", "replace"], [8, 1, 1, "", "requires_grad_"], [8, 1, 1, "", "reshape"], [8, 1, 1, "", "round"], [8, 1, 1, "", "round_"], [8, 1, 1, "", "rsub"], [8, 1, 1, "", "save"], [8, 2, 1, "", "saved_path"], [8, 1, 1, "", "select"], [8, 1, 1, "", "send"], [8, 1, 1, "", "separates"], [8, 1, 1, "", "set"], [8, 1, 1, "", "set_"], [8, 1, 1, "", "set_at_"], [8, 1, 1, "", "set_non_tensor"], [8, 1, 1, "", "setdefault"], [8, 2, 1, "", "shape"], [8, 1, 1, "", "share_memory_"], [8, 1, 1, "", "sigmoid"], [8, 1, 1, "", "sigmoid_"], [8, 1, 1, "", "sign"], [8, 1, 1, "", "sign_"], [8, 1, 1, "", "sin"], [8, 1, 1, "", "sin_"], [8, 1, 1, "", "sinh"], [8, 1, 1, "", "sinh_"], [8, 1, 1, "", "size"], [8, 1, 1, "", "softmax"], [8, 2, 1, "", "sorted_keys"], [8, 1, 1, "", "split"], [8, 1, 1, "", "split_keys"], [8, 1, 1, "", "sqrt"], [8, 1, 1, "", "sqrt_"], [8, 1, 1, "", "squeeze"], [8, 1, 1, "", "stack"], [8, 1, 1, "", "stack_from_tensordict"], [8, 1, 1, "", "stack_tensors"], [8, 1, 1, "", "state_dict"], [8, 1, 1, "", "std"], [8, 1, 1, "", "sub"], [8, 1, 1, "", "sub_"], [8, 1, 1, "", "sum"], [8, 1, 1, "", "tan"], [8, 1, 1, "", "tan_"], [8, 1, 1, "", "tanh"], [8, 1, 1, "", "tanh_"], [8, 1, 1, "", "tensor_split"], [8, 1, 1, "", "to"], [8, 1, 1, "", "to_dict"], [8, 1, 1, "", "to_h5"], [8, 1, 1, "", "to_lazystack"], [8, 1, 1, "", "to_mds"], [8, 1, 1, "", "to_module"], [8, 1, 1, "", "to_namedtuple"], [8, 1, 1, "", "to_padded_tensor"], [8, 1, 1, "", "to_pytree"], [8, 1, 1, "", "to_struct_array"], [8, 1, 1, "", "to_tensordict"], [8, 1, 1, "", "tolist"], [8, 1, 1, "", "transpose"], [8, 1, 1, "", "trunc"], [8, 1, 1, "", "trunc_"], [8, 1, 1, "", "type"], [8, 1, 1, "", "uint16"], [8, 1, 1, "", "uint32"], [8, 1, 1, "", "uint64"], [8, 1, 1, "", "uint8"], [8, 1, 1, "", "unbind"], [8, 1, 1, "", "unflatten"], [8, 1, 1, "", "unflatten_keys"], [8, 1, 1, "", "unlock_"], [8, 1, 1, "", "unsqueeze"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_"], [8, 1, 1, "", "update_at_"], [8, 1, 1, "", "valid_keys"], [8, 1, 1, "", "values"], [8, 1, 1, "", "var"], [8, 1, 1, "", "view"], [8, 1, 1, "", "where"], [8, 1, 1, "", "zero_"], [8, 1, 1, "", "zero_grad"]], "tensordict.PersistentTensorDict": [[9, 1, 1, "", "abs"], [9, 1, 1, "", "abs_"], [9, 1, 1, "", "acos"], [9, 1, 1, "", "acos_"], [9, 1, 1, "", "add"], [9, 1, 1, "", "add_"], [9, 1, 1, "", "addcdiv"], [9, 1, 1, "", "addcdiv_"], [9, 1, 1, "", "addcmul"], [9, 1, 1, "", "addcmul_"], [9, 1, 1, "", "all"], [9, 1, 1, "", "amax"], [9, 1, 1, "", "amin"], [9, 1, 1, "", "any"], [9, 1, 1, "", "apply"], [9, 1, 1, "", "apply_"], [9, 1, 1, "", "as_tensor"], [9, 1, 1, "", "asin"], [9, 1, 1, "", "asin_"], [9, 1, 1, "", "atan"], [9, 1, 1, "", "atan_"], [9, 1, 1, "", "auto_batch_size_"], [9, 1, 1, "", "auto_device_"], [9, 2, 1, "", "batch_dims"], [9, 2, 1, "", "batch_size"], [9, 1, 1, "", "bfloat16"], [9, 1, 1, "", "bitwise_and"], [9, 1, 1, "", "bool"], [9, 1, 1, "", "bytes"], [9, 1, 1, "", "cat"], [9, 1, 1, "", "cat_from_tensordict"], [9, 1, 1, "", "cat_tensors"], [9, 1, 1, "", "ceil"], [9, 1, 1, "", "ceil_"], [9, 1, 1, "", "chunk"], [9, 1, 1, "", "clamp"], [9, 1, 1, "", "clamp_max"], [9, 1, 1, "", "clamp_max_"], [9, 1, 1, "", "clamp_min"], [9, 1, 1, "", "clamp_min_"], [9, 1, 1, "", "clear"], [9, 1, 1, "", "clear_device_"], [9, 1, 1, "", "clear_refs_for_compile_"], [9, 1, 1, "", "clone"], [9, 1, 1, "", "close"], [9, 1, 1, "", "complex128"], [9, 1, 1, "", "complex32"], [9, 1, 1, "", "complex64"], [9, 1, 1, "", "consolidate"], [9, 1, 1, "", "contiguous"], [9, 1, 1, "", "copy"], [9, 1, 1, "", "copy_"], [9, 1, 1, "", "copy_at_"], [9, 1, 1, "", "cos"], [9, 1, 1, "", "cos_"], [9, 1, 1, "", "cosh"], [9, 1, 1, "", "cosh_"], [9, 1, 1, "", "cpu"], [9, 1, 1, "", "create_nested"], [9, 1, 1, "", "cuda"], [9, 1, 1, "", "cummax"], [9, 1, 1, "", "cummin"], [9, 2, 1, "", "data"], [9, 1, 1, "", "data_ptr"], [9, 1, 1, "", "del_"], [9, 1, 1, "", "densify"], [9, 2, 1, "", "depth"], [9, 1, 1, "", "detach"], [9, 1, 1, "", "detach_"], [9, 2, 1, "", "device"], [9, 1, 1, "", "dim"], [9, 1, 1, "", "div"], [9, 1, 1, "", "div_"], [9, 1, 1, "", "double"], [9, 2, 1, "", "dtype"], [9, 1, 1, "", "dumps"], [9, 1, 1, "", "empty"], [9, 1, 1, "", "entry_class"], [9, 1, 1, "", "erf"], [9, 1, 1, "", "erf_"], [9, 1, 1, "", "erfc"], [9, 1, 1, "", "erfc_"], [9, 1, 1, "", "exclude"], [9, 1, 1, "", "exp"], [9, 1, 1, "", "exp_"], [9, 1, 1, "", "expand"], [9, 1, 1, "", "expand_as"], [9, 1, 1, "", "expm1"], [9, 1, 1, "", "expm1_"], [9, 1, 1, "", "fill_"], [9, 1, 1, "", "filter_empty_"], [9, 1, 1, "", "filter_non_tensor_data"], [9, 1, 1, "", "flatten"], [9, 1, 1, "", "flatten_keys"], [9, 1, 1, "", "float"], [9, 1, 1, "", "float16"], [9, 1, 1, "", "float32"], [9, 1, 1, "", "float64"], [9, 1, 1, "", "floor"], [9, 1, 1, "", "floor_"], [9, 1, 1, "", "frac"], [9, 1, 1, "", "frac_"], [9, 1, 1, "", "from_any"], [9, 1, 1, "", "from_dataclass"], [9, 1, 1, "", "from_dict"], [9, 1, 1, "", "from_dict_instance"], [9, 1, 1, "", "from_h5"], [9, 1, 1, "", "from_module"], [9, 1, 1, "", "from_modules"], [9, 1, 1, "", "from_namedtuple"], [9, 1, 1, "", "from_pytree"], [9, 1, 1, "", "from_remote_init"], [9, 1, 1, "", "from_struct_array"], [9, 1, 1, "", "from_tuple"], [9, 1, 1, "", "fromkeys"], [9, 1, 1, "", "gather"], [9, 1, 1, "", "gather_and_stack"], [9, 1, 1, "", "get"], [9, 1, 1, "", "get_at"], [9, 1, 1, "", "get_item_shape"], [9, 1, 1, "", "get_non_tensor"], [9, 2, 1, "", "grad"], [9, 1, 1, "", "half"], [9, 1, 1, "", "init_remote"], [9, 1, 1, "", "int"], [9, 1, 1, "", "int16"], [9, 1, 1, "", "int32"], [9, 1, 1, "", "int64"], [9, 1, 1, "", "int8"], [9, 1, 1, "", "irecv"], [9, 1, 1, "", "is_consolidated"], [9, 1, 1, "", "is_contiguous"], [9, 1, 1, "", "is_empty"], [9, 1, 1, "", "is_floating_point"], [9, 1, 1, "", "is_memmap"], [9, 1, 1, "", "is_shared"], [9, 1, 1, "", "isend"], [9, 1, 1, "", "isfinite"], [9, 1, 1, "", "isnan"], [9, 1, 1, "", "isneginf"], [9, 1, 1, "", "isposinf"], [9, 1, 1, "", "isreal"], [9, 1, 1, "", "items"], [9, 1, 1, "", "keys"], [9, 1, 1, "", "lazy_stack"], [9, 1, 1, "", "lerp"], [9, 1, 1, "", "lerp_"], [9, 1, 1, "", "lgamma"], [9, 1, 1, "", "lgamma_"], [9, 1, 1, "", "load"], [9, 1, 1, "", "load_"], [9, 1, 1, "", "load_memmap"], [9, 1, 1, "", "load_memmap_"], [9, 1, 1, "", "load_state_dict"], [9, 1, 1, "", "lock_"], [9, 1, 1, "", "log"], [9, 1, 1, "", "log10"], [9, 1, 1, "", "log10_"], [9, 1, 1, "", "log1p"], [9, 1, 1, "", "log1p_"], [9, 1, 1, "", "log2"], [9, 1, 1, "", "log2_"], [9, 1, 1, "", "log_"], [9, 1, 1, "", "logical_and"], [9, 1, 1, "", "logsumexp"], [9, 1, 1, "", "make_memmap"], [9, 1, 1, "", "make_memmap_from_storage"], [9, 1, 1, "", "make_memmap_from_tensor"], [9, 1, 1, "", "map"], [9, 1, 1, "", "map_iter"], [9, 1, 1, "", "masked_fill"], [9, 1, 1, "", "masked_fill_"], [9, 1, 1, "", "masked_select"], [9, 1, 1, "", "max"], [9, 1, 1, "", "maximum"], [9, 1, 1, "", "maximum_"], [9, 1, 1, "", "maybe_dense_stack"], [9, 1, 1, "", "mean"], [9, 1, 1, "", "memmap"], [9, 1, 1, "", "memmap_"], [9, 1, 1, "", "memmap_like"], [9, 1, 1, "", "memmap_refresh_"], [9, 1, 1, "", "min"], [9, 1, 1, "", "minimum"], [9, 1, 1, "", "minimum_"], [9, 1, 1, "", "mul"], [9, 1, 1, "", "mul_"], [9, 1, 1, "", "named_apply"], [9, 2, 1, "", "names"], [9, 1, 1, "", "nanmean"], [9, 1, 1, "", "nansum"], [9, 2, 1, "", "ndim"], [9, 1, 1, "", "ndimension"], [9, 1, 1, "", "neg"], [9, 1, 1, "", "neg_"], [9, 1, 1, "", "new_empty"], [9, 1, 1, "", "new_full"], [9, 1, 1, "", "new_ones"], [9, 1, 1, "", "new_tensor"], [9, 1, 1, "", "new_zeros"], [9, 1, 1, "", "non_tensor_items"], [9, 1, 1, "", "norm"], [9, 1, 1, "", "numel"], [9, 1, 1, "", "numpy"], [9, 1, 1, "", "param_count"], [9, 1, 1, "", "permute"], [9, 1, 1, "", "pin_memory"], [9, 1, 1, "", "pin_memory_"], [9, 1, 1, "", "pop"], [9, 1, 1, "", "popitem"], [9, 1, 1, "", "pow"], [9, 1, 1, "", "pow_"], [9, 1, 1, "", "prod"], [9, 1, 1, "", "qint32"], [9, 1, 1, "", "qint8"], [9, 1, 1, "", "quint4x2"], [9, 1, 1, "", "quint8"], [9, 1, 1, "", "reciprocal"], [9, 1, 1, "", "reciprocal_"], [9, 1, 1, "", "record_stream"], [9, 1, 1, "", "recv"], [9, 1, 1, "", "reduce"], [9, 1, 1, "", "refine_names"], [9, 1, 1, "", "rename"], [9, 1, 1, "", "rename_"], [9, 1, 1, "", "rename_key_"], [9, 1, 1, "", "repeat"], [9, 1, 1, "", "repeat_interleave"], [9, 1, 1, "", "replace"], [9, 1, 1, "", "requires_grad_"], [9, 1, 1, "", "reshape"], [9, 1, 1, "", "round"], [9, 1, 1, "", "round_"], [9, 1, 1, "", "rsub"], [9, 1, 1, "", "save"], [9, 2, 1, "", "saved_path"], [9, 1, 1, "", "select"], [9, 1, 1, "", "send"], [9, 1, 1, "", "separates"], [9, 1, 1, "", "set"], [9, 1, 1, "", "set_"], [9, 1, 1, "", "set_at_"], [9, 1, 1, "", "set_non_tensor"], [9, 1, 1, "", "setdefault"], [9, 2, 1, "", "shape"], [9, 1, 1, "", "share_memory_"], [9, 1, 1, "", "sigmoid"], [9, 1, 1, "", "sigmoid_"], [9, 1, 1, "", "sign"], [9, 1, 1, "", "sign_"], [9, 1, 1, "", "sin"], [9, 1, 1, "", "sin_"], [9, 1, 1, "", "sinh"], [9, 1, 1, "", "sinh_"], [9, 1, 1, "", "size"], [9, 1, 1, "", "softmax"], [9, 2, 1, "", "sorted_keys"], [9, 1, 1, "", "split"], [9, 1, 1, "", "split_keys"], [9, 1, 1, "", "sqrt"], [9, 1, 1, "", "sqrt_"], [9, 1, 1, "", "squeeze"], [9, 1, 1, "", "stack"], [9, 1, 1, "", "stack_from_tensordict"], [9, 1, 1, "", "stack_tensors"], [9, 1, 1, "", "state_dict"], [9, 1, 1, "", "std"], [9, 1, 1, "", "sub"], [9, 1, 1, "", "sub_"], [9, 1, 1, "", "sum"], [9, 1, 1, "", "tan"], [9, 1, 1, "", "tan_"], [9, 1, 1, "", "tanh"], [9, 1, 1, "", "tanh_"], [9, 1, 1, "", "tensor_split"], [9, 1, 1, "", "to"], [9, 1, 1, "", "to_dict"], [9, 1, 1, "", "to_h5"], [9, 1, 1, "", "to_lazystack"], [9, 1, 1, "", "to_mds"], [9, 1, 1, "", "to_module"], [9, 1, 1, "", "to_namedtuple"], [9, 1, 1, "", "to_padded_tensor"], [9, 1, 1, "", "to_pytree"], [9, 1, 1, "", "to_struct_array"], [9, 1, 1, "", "to_tensordict"], [9, 1, 1, "", "tolist"], [9, 1, 1, "", "transpose"], [9, 1, 1, "", "trunc"], [9, 1, 1, "", "trunc_"], [9, 1, 1, "", "type"], [9, 1, 1, "", "uint16"], [9, 1, 1, "", "uint32"], [9, 1, 1, "", "uint64"], [9, 1, 1, "", "uint8"], [9, 1, 1, "", "unbind"], [9, 1, 1, "", "unflatten"], [9, 1, 1, "", "unflatten_keys"], [9, 1, 1, "", "unlock_"], [9, 1, 1, "", "unsqueeze"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_"], [9, 1, 1, "", "update_at_"], [9, 1, 1, "", "values"], [9, 1, 1, "", "var"], [9, 1, 1, "", "view"], [9, 1, 1, "", "where"], [9, 1, 1, "", "zero_"], [9, 1, 1, "", "zero_grad"]], "tensordict.TensorClass": [[10, 1, 1, "", "dumps"], [10, 1, 1, "", "from_tensordict"], [10, 1, 1, "", "get"], [10, 1, 1, "", "load"], [10, 1, 1, "", "load_"], [10, 1, 1, "", "load_memmap"], [10, 1, 1, "", "load_state_dict"], [10, 1, 1, "", "memmap"], [10, 1, 1, "", "memmap_"], [10, 1, 1, "", "memmap_like"], [10, 1, 1, "", "memmap_refresh_"], [10, 1, 1, "", "save"], [10, 1, 1, "", "set"], [10, 1, 1, "", "state_dict"], [10, 1, 1, "", "to_tensordict"], [10, 1, 1, "", "unbind"]], "tensordict.TensorDict": [[11, 1, 1, "", "abs"], [11, 1, 1, "", "abs_"], [11, 1, 1, "", "acos"], [11, 1, 1, "", "acos_"], [11, 1, 1, "", "add"], [11, 1, 1, "", "add_"], [11, 1, 1, "", "addcdiv"], [11, 1, 1, "", "addcdiv_"], [11, 1, 1, "", "addcmul"], [11, 1, 1, "", "addcmul_"], [11, 1, 1, "", "all"], [11, 1, 1, "", "amax"], [11, 1, 1, "", "amin"], [11, 1, 1, "", "any"], [11, 1, 1, "", "apply"], [11, 1, 1, "", "apply_"], [11, 1, 1, "", "as_tensor"], [11, 1, 1, "", "asin"], [11, 1, 1, "", "asin_"], [11, 1, 1, "", "atan"], [11, 1, 1, "", "atan_"], [11, 1, 1, "", "auto_batch_size_"], [11, 1, 1, "", "auto_device_"], [11, 2, 1, "", "batch_dims"], [11, 2, 1, "", "batch_size"], [11, 1, 1, "", "bfloat16"], [11, 1, 1, "", "bitwise_and"], [11, 1, 1, "", "bool"], [11, 1, 1, "", "bytes"], [11, 1, 1, "", "cat"], [11, 1, 1, "", "cat_from_tensordict"], [11, 1, 1, "", "cat_tensors"], [11, 1, 1, "", "ceil"], [11, 1, 1, "", "ceil_"], [11, 1, 1, "", "chunk"], [11, 1, 1, "", "clamp"], [11, 1, 1, "", "clamp_max"], [11, 1, 1, "", "clamp_max_"], [11, 1, 1, "", "clamp_min"], [11, 1, 1, "", "clamp_min_"], [11, 1, 1, "", "clear"], [11, 1, 1, "", "clear_device_"], [11, 1, 1, "", "clear_refs_for_compile_"], [11, 1, 1, "", "clone"], [11, 1, 1, "", "complex128"], [11, 1, 1, "", "complex32"], [11, 1, 1, "", "complex64"], [11, 1, 1, "", "consolidate"], [11, 1, 1, "", "contiguous"], [11, 1, 1, "", "copy"], [11, 1, 1, "", "copy_"], [11, 1, 1, "", "copy_at_"], [11, 1, 1, "", "cos"], [11, 1, 1, "", "cos_"], [11, 1, 1, "", "cosh"], [11, 1, 1, "", "cosh_"], [11, 1, 1, "", "cpu"], [11, 1, 1, "", "create_nested"], [11, 1, 1, "", "cuda"], [11, 1, 1, "", "cummax"], [11, 1, 1, "", "cummin"], [11, 2, 1, "", "data"], [11, 1, 1, "", "data_ptr"], [11, 1, 1, "", "del_"], [11, 1, 1, "", "densify"], [11, 2, 1, "", "depth"], [11, 1, 1, "", "detach"], [11, 1, 1, "", "detach_"], [11, 2, 1, "", "device"], [11, 1, 1, "", "dim"], [11, 1, 1, "", "div"], [11, 1, 1, "", "div_"], [11, 1, 1, "", "double"], [11, 2, 1, "", "dtype"], [11, 1, 1, "", "dumps"], [11, 1, 1, "", "empty"], [11, 1, 1, "", "entry_class"], [11, 1, 1, "", "erf"], [11, 1, 1, "", "erf_"], [11, 1, 1, "", "erfc"], [11, 1, 1, "", "erfc_"], [11, 1, 1, "", "exclude"], [11, 1, 1, "", "exp"], [11, 1, 1, "", "exp_"], [11, 1, 1, "", "expand"], [11, 1, 1, "", "expand_as"], [11, 1, 1, "", "expm1"], [11, 1, 1, "", "expm1_"], [11, 1, 1, "", "fill_"], [11, 1, 1, "", "filter_empty_"], [11, 1, 1, "", "filter_non_tensor_data"], [11, 1, 1, "", "flatten"], [11, 1, 1, "", "flatten_keys"], [11, 1, 1, "", "float"], [11, 1, 1, "", "float16"], [11, 1, 1, "", "float32"], [11, 1, 1, "", "float64"], [11, 1, 1, "", "floor"], [11, 1, 1, "", "floor_"], [11, 1, 1, "", "frac"], [11, 1, 1, "", "frac_"], [11, 1, 1, "", "from_any"], [11, 1, 1, "", "from_dataclass"], [11, 1, 1, "", "from_dict"], [11, 1, 1, "", "from_dict_instance"], [11, 1, 1, "", "from_h5"], [11, 1, 1, "", "from_module"], [11, 1, 1, "", "from_modules"], [11, 1, 1, "", "from_namedtuple"], [11, 1, 1, "", "from_pytree"], [11, 1, 1, "", "from_remote_init"], [11, 1, 1, "", "from_struct_array"], [11, 1, 1, "", "from_tuple"], [11, 1, 1, "", "fromkeys"], [11, 1, 1, "", "gather"], [11, 1, 1, "", "gather_and_stack"], [11, 1, 1, "", "get"], [11, 1, 1, "", "get_at"], [11, 1, 1, "", "get_item_shape"], [11, 1, 1, "", "get_non_tensor"], [11, 2, 1, "", "grad"], [11, 1, 1, "", "half"], [11, 1, 1, "", "init_remote"], [11, 1, 1, "", "int"], [11, 1, 1, "", "int16"], [11, 1, 1, "", "int32"], [11, 1, 1, "", "int64"], [11, 1, 1, "", "int8"], [11, 1, 1, "", "irecv"], [11, 1, 1, "", "is_consolidated"], [11, 1, 1, "", "is_contiguous"], [11, 1, 1, "", "is_empty"], [11, 1, 1, "", "is_floating_point"], [11, 1, 1, "", "is_memmap"], [11, 1, 1, "", "is_shared"], [11, 1, 1, "", "isend"], [11, 1, 1, "", "isfinite"], [11, 1, 1, "", "isnan"], [11, 1, 1, "", "isneginf"], [11, 1, 1, "", "isposinf"], [11, 1, 1, "", "isreal"], [11, 1, 1, "", "items"], [11, 1, 1, "", "keys"], [11, 1, 1, "", "lazy_stack"], [11, 1, 1, "", "lerp"], [11, 1, 1, "", "lerp_"], [11, 1, 1, "", "lgamma"], [11, 1, 1, "", "lgamma_"], [11, 1, 1, "", "load"], [11, 1, 1, "", "load_"], [11, 1, 1, "", "load_memmap"], [11, 1, 1, "", "load_memmap_"], [11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "lock_"], [11, 1, 1, "", "log"], [11, 1, 1, "", "log10"], [11, 1, 1, "", "log10_"], [11, 1, 1, "", "log1p"], [11, 1, 1, "", "log1p_"], [11, 1, 1, "", "log2"], [11, 1, 1, "", "log2_"], [11, 1, 1, "", "log_"], [11, 1, 1, "", "logical_and"], [11, 1, 1, "", "logsumexp"], [11, 1, 1, "", "make_memmap"], [11, 1, 1, "", "make_memmap_from_storage"], [11, 1, 1, "", "make_memmap_from_tensor"], [11, 1, 1, "", "map"], [11, 1, 1, "", "map_iter"], [11, 1, 1, "", "masked_fill"], [11, 1, 1, "", "masked_fill_"], [11, 1, 1, "", "masked_select"], [11, 1, 1, "", "max"], [11, 1, 1, "", "maximum"], [11, 1, 1, "", "maximum_"], [11, 1, 1, "", "maybe_dense_stack"], [11, 1, 1, "", "mean"], [11, 1, 1, "", "memmap"], [11, 1, 1, "", "memmap_"], [11, 1, 1, "", "memmap_like"], [11, 1, 1, "", "memmap_refresh_"], [11, 1, 1, "", "min"], [11, 1, 1, "", "minimum"], [11, 1, 1, "", "minimum_"], [11, 1, 1, "", "mul"], [11, 1, 1, "", "mul_"], [11, 1, 1, "", "named_apply"], [11, 2, 1, "", "names"], [11, 1, 1, "", "nanmean"], [11, 1, 1, "", "nansum"], [11, 2, 1, "", "ndim"], [11, 1, 1, "", "ndimension"], [11, 1, 1, "", "neg"], [11, 1, 1, "", "neg_"], [11, 1, 1, "", "new_empty"], [11, 1, 1, "", "new_full"], [11, 1, 1, "", "new_ones"], [11, 1, 1, "", "new_tensor"], [11, 1, 1, "", "new_zeros"], [11, 1, 1, "", "non_tensor_items"], [11, 1, 1, "", "norm"], [11, 1, 1, "", "numel"], [11, 1, 1, "", "numpy"], [11, 1, 1, "", "param_count"], [11, 1, 1, "", "permute"], [11, 1, 1, "", "pin_memory"], [11, 1, 1, "", "pin_memory_"], [11, 1, 1, "", "pop"], [11, 1, 1, "", "popitem"], [11, 1, 1, "", "pow"], [11, 1, 1, "", "pow_"], [11, 1, 1, "", "prod"], [11, 1, 1, "", "qint32"], [11, 1, 1, "", "qint8"], [11, 1, 1, "", "quint4x2"], [11, 1, 1, "", "quint8"], [11, 1, 1, "", "reciprocal"], [11, 1, 1, "", "reciprocal_"], [11, 1, 1, "", "record_stream"], [11, 1, 1, "", "recv"], [11, 1, 1, "", "reduce"], [11, 1, 1, "", "refine_names"], [11, 1, 1, "", "rename"], [11, 1, 1, "", "rename_"], [11, 1, 1, "", "rename_key_"], [11, 1, 1, "", "repeat"], [11, 1, 1, "", "repeat_interleave"], [11, 1, 1, "", "replace"], [11, 1, 1, "", "requires_grad_"], [11, 1, 1, "", "reshape"], [11, 1, 1, "", "round"], [11, 1, 1, "", "round_"], [11, 1, 1, "", "rsub"], [11, 1, 1, "", "save"], [11, 2, 1, "", "saved_path"], [11, 1, 1, "", "select"], [11, 1, 1, "", "send"], [11, 1, 1, "", "separates"], [11, 1, 1, "", "set"], [11, 1, 1, "", "set_"], [11, 1, 1, "", "set_at_"], [11, 1, 1, "", "set_non_tensor"], [11, 1, 1, "", "setdefault"], [11, 2, 1, "", "shape"], [11, 1, 1, "", "share_memory_"], [11, 1, 1, "", "sigmoid"], [11, 1, 1, "", "sigmoid_"], [11, 1, 1, "", "sign"], [11, 1, 1, "", "sign_"], [11, 1, 1, "", "sin"], [11, 1, 1, "", "sin_"], [11, 1, 1, "", "sinh"], [11, 1, 1, "", "sinh_"], [11, 1, 1, "", "size"], [11, 1, 1, "", "softmax"], [11, 2, 1, "", "sorted_keys"], [11, 1, 1, "", "split"], [11, 1, 1, "", "split_keys"], [11, 1, 1, "", "sqrt"], [11, 1, 1, "", "sqrt_"], [11, 1, 1, "", "squeeze"], [11, 1, 1, "", "stack"], [11, 1, 1, "", "stack_from_tensordict"], [11, 1, 1, "", "stack_tensors"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "std"], [11, 1, 1, "", "sub"], [11, 1, 1, "", "sub_"], [11, 1, 1, "", "sum"], [11, 1, 1, "", "tan"], [11, 1, 1, "", "tan_"], [11, 1, 1, "", "tanh"], [11, 1, 1, "", "tanh_"], [11, 1, 1, "", "tensor_split"], [11, 1, 1, "", "to"], [11, 1, 1, "", "to_dict"], [11, 1, 1, "", "to_h5"], [11, 1, 1, "", "to_lazystack"], [11, 1, 1, "", "to_mds"], [11, 1, 1, "", "to_module"], [11, 1, 1, "", "to_namedtuple"], [11, 1, 1, "", "to_padded_tensor"], [11, 1, 1, "", "to_pytree"], [11, 1, 1, "", "to_struct_array"], [11, 1, 1, "", "to_tensordict"], [11, 1, 1, "", "tolist"], [11, 1, 1, "", "transpose"], [11, 1, 1, "", "trunc"], [11, 1, 1, "", "trunc_"], [11, 1, 1, "", "type"], [11, 1, 1, "", "uint16"], [11, 1, 1, "", "uint32"], [11, 1, 1, "", "uint64"], [11, 1, 1, "", "uint8"], [11, 1, 1, "", "unbind"], [11, 1, 1, "", "unflatten"], [11, 1, 1, "", "unflatten_keys"], [11, 1, 1, "", "unlock_"], [11, 1, 1, "", "unsqueeze"], [11, 1, 1, "", "update"], [11, 1, 1, "", "update_"], [11, 1, 1, "", "update_at_"], [11, 1, 1, "", "values"], [11, 1, 1, "", "var"], [11, 1, 1, "", "view"], [11, 1, 1, "", "where"], [11, 1, 1, "", "zero_"], [11, 1, 1, "", "zero_grad"]], "tensordict.TensorDictBase": [[12, 1, 1, "", "abs"], [12, 1, 1, "", "abs_"], [12, 1, 1, "", "acos"], [12, 1, 1, "", "acos_"], [12, 1, 1, "", "add"], [12, 1, 1, "", "add_"], [12, 1, 1, "", "addcdiv"], [12, 1, 1, "", "addcdiv_"], [12, 1, 1, "", "addcmul"], [12, 1, 1, "", "addcmul_"], [12, 1, 1, "", "all"], [12, 1, 1, "", "amax"], [12, 1, 1, "", "amin"], [12, 1, 1, "", "any"], [12, 1, 1, "", "apply"], [12, 1, 1, "", "apply_"], [12, 1, 1, "", "as_tensor"], [12, 1, 1, "", "asin"], [12, 1, 1, "", "asin_"], [12, 1, 1, "", "atan"], [12, 1, 1, "", "atan_"], [12, 1, 1, "", "auto_batch_size_"], [12, 1, 1, "", "auto_device_"], [12, 2, 1, "", "batch_dims"], [12, 2, 1, "", "batch_size"], [12, 1, 1, "", "bfloat16"], [12, 1, 1, "", "bitwise_and"], [12, 1, 1, "", "bool"], [12, 1, 1, "", "bytes"], [12, 1, 1, "", "cat"], [12, 1, 1, "", "cat_from_tensordict"], [12, 1, 1, "", "cat_tensors"], [12, 1, 1, "", "ceil"], [12, 1, 1, "", "ceil_"], [12, 1, 1, "", "chunk"], [12, 1, 1, "", "clamp"], [12, 1, 1, "", "clamp_max"], [12, 1, 1, "", "clamp_max_"], [12, 1, 1, "", "clamp_min"], [12, 1, 1, "", "clamp_min_"], [12, 1, 1, "", "clear"], [12, 1, 1, "", "clear_device_"], [12, 1, 1, "", "clear_refs_for_compile_"], [12, 1, 1, "", "clone"], [12, 1, 1, "", "complex128"], [12, 1, 1, "", "complex32"], [12, 1, 1, "", "complex64"], [12, 1, 1, "", "consolidate"], [12, 1, 1, "", "contiguous"], [12, 1, 1, "", "copy"], [12, 1, 1, "", "copy_"], [12, 1, 1, "", "copy_at_"], [12, 1, 1, "", "cos"], [12, 1, 1, "", "cos_"], [12, 1, 1, "", "cosh"], [12, 1, 1, "", "cosh_"], [12, 1, 1, "", "cpu"], [12, 1, 1, "", "create_nested"], [12, 1, 1, "", "cuda"], [12, 1, 1, "", "cummax"], [12, 1, 1, "", "cummin"], [12, 2, 1, "", "data"], [12, 1, 1, "", "data_ptr"], [12, 1, 1, "", "del_"], [12, 1, 1, "", "densify"], [12, 2, 1, "", "depth"], [12, 1, 1, "", "detach"], [12, 1, 1, "", "detach_"], [12, 2, 1, "", "device"], [12, 1, 1, "", "dim"], [12, 1, 1, "", "div"], [12, 1, 1, "", "div_"], [12, 1, 1, "", "double"], [12, 2, 1, "", "dtype"], [12, 1, 1, "", "dumps"], [12, 1, 1, "", "empty"], [12, 1, 1, "", "entry_class"], [12, 1, 1, "", "erf"], [12, 1, 1, "", "erf_"], [12, 1, 1, "", "erfc"], [12, 1, 1, "", "erfc_"], [12, 1, 1, "", "exclude"], [12, 1, 1, "", "exp"], [12, 1, 1, "", "exp_"], [12, 1, 1, "", "expand"], [12, 1, 1, "", "expand_as"], [12, 1, 1, "", "expm1"], [12, 1, 1, "", "expm1_"], [12, 1, 1, "", "fill_"], [12, 1, 1, "", "filter_empty_"], [12, 1, 1, "", "filter_non_tensor_data"], [12, 1, 1, "", "flatten"], [12, 1, 1, "", "flatten_keys"], [12, 1, 1, "", "float"], [12, 1, 1, "", "float16"], [12, 1, 1, "", "float32"], [12, 1, 1, "", "float64"], [12, 1, 1, "", "floor"], [12, 1, 1, "", "floor_"], [12, 1, 1, "", "frac"], [12, 1, 1, "", "frac_"], [12, 1, 1, "", "from_any"], [12, 1, 1, "", "from_dataclass"], [12, 1, 1, "", "from_dict"], [12, 1, 1, "", "from_dict_instance"], [12, 1, 1, "", "from_h5"], [12, 1, 1, "", "from_module"], [12, 1, 1, "", "from_modules"], [12, 1, 1, "", "from_namedtuple"], [12, 1, 1, "", "from_pytree"], [12, 1, 1, "", "from_remote_init"], [12, 1, 1, "", "from_struct_array"], [12, 1, 1, "", "from_tuple"], [12, 1, 1, "", "fromkeys"], [12, 1, 1, "", "gather"], [12, 1, 1, "", "gather_and_stack"], [12, 1, 1, "", "get"], [12, 1, 1, "", "get_at"], [12, 1, 1, "", "get_item_shape"], [12, 1, 1, "", "get_non_tensor"], [12, 2, 1, "", "grad"], [12, 1, 1, "", "half"], [12, 1, 1, "", "init_remote"], [12, 1, 1, "", "int"], [12, 1, 1, "", "int16"], [12, 1, 1, "", "int32"], [12, 1, 1, "", "int64"], [12, 1, 1, "", "int8"], [12, 1, 1, "", "irecv"], [12, 1, 1, "", "is_consolidated"], [12, 1, 1, "", "is_contiguous"], [12, 1, 1, "", "is_empty"], [12, 1, 1, "", "is_floating_point"], [12, 1, 1, "", "is_memmap"], [12, 1, 1, "", "is_shared"], [12, 1, 1, "", "isend"], [12, 1, 1, "", "isfinite"], [12, 1, 1, "", "isnan"], [12, 1, 1, "", "isneginf"], [12, 1, 1, "", "isposinf"], [12, 1, 1, "", "isreal"], [12, 1, 1, "", "items"], [12, 1, 1, "", "keys"], [12, 1, 1, "", "lazy_stack"], [12, 1, 1, "", "lerp"], [12, 1, 1, "", "lerp_"], [12, 1, 1, "", "lgamma"], [12, 1, 1, "", "lgamma_"], [12, 1, 1, "", "load"], [12, 1, 1, "", "load_"], [12, 1, 1, "", "load_memmap"], [12, 1, 1, "", "load_memmap_"], [12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "lock_"], [12, 1, 1, "", "log"], [12, 1, 1, "", "log10"], [12, 1, 1, "", "log10_"], [12, 1, 1, "", "log1p"], [12, 1, 1, "", "log1p_"], [12, 1, 1, "", "log2"], [12, 1, 1, "", "log2_"], [12, 1, 1, "", "log_"], [12, 1, 1, "", "logical_and"], [12, 1, 1, "", "logsumexp"], [12, 1, 1, "", "make_memmap"], [12, 1, 1, "", "make_memmap_from_storage"], [12, 1, 1, "", "make_memmap_from_tensor"], [12, 1, 1, "", "map"], [12, 1, 1, "", "map_iter"], [12, 1, 1, "", "masked_fill"], [12, 1, 1, "", "masked_fill_"], [12, 1, 1, "", "masked_select"], [12, 1, 1, "", "max"], [12, 1, 1, "", "maximum"], [12, 1, 1, "", "maximum_"], [12, 1, 1, "", "maybe_dense_stack"], [12, 1, 1, "", "mean"], [12, 1, 1, "", "memmap"], [12, 1, 1, "", "memmap_"], [12, 1, 1, "", "memmap_like"], [12, 1, 1, "", "memmap_refresh_"], [12, 1, 1, "", "min"], [12, 1, 1, "", "minimum"], [12, 1, 1, "", "minimum_"], [12, 1, 1, "", "mul"], [12, 1, 1, "", "mul_"], [12, 1, 1, "", "named_apply"], [12, 2, 1, "", "names"], [12, 1, 1, "", "nanmean"], [12, 1, 1, "", "nansum"], [12, 2, 1, "", "ndim"], [12, 1, 1, "", "ndimension"], [12, 1, 1, "", "neg"], [12, 1, 1, "", "neg_"], [12, 1, 1, "", "new_empty"], [12, 1, 1, "", "new_full"], [12, 1, 1, "", "new_ones"], [12, 1, 1, "", "new_tensor"], [12, 1, 1, "", "new_zeros"], [12, 1, 1, "", "non_tensor_items"], [12, 1, 1, "", "norm"], [12, 1, 1, "", "numel"], [12, 1, 1, "", "numpy"], [12, 1, 1, "", "param_count"], [12, 1, 1, "", "permute"], [12, 1, 1, "", "pin_memory"], [12, 1, 1, "", "pin_memory_"], [12, 1, 1, "", "pop"], [12, 1, 1, "", "popitem"], [12, 1, 1, "", "pow"], [12, 1, 1, "", "pow_"], [12, 1, 1, "", "prod"], [12, 1, 1, "", "qint32"], [12, 1, 1, "", "qint8"], [12, 1, 1, "", "quint4x2"], [12, 1, 1, "", "quint8"], [12, 1, 1, "", "reciprocal"], [12, 1, 1, "", "reciprocal_"], [12, 1, 1, "", "record_stream"], [12, 1, 1, "", "recv"], [12, 1, 1, "", "reduce"], [12, 1, 1, "", "refine_names"], [12, 1, 1, "", "rename"], [12, 1, 1, "", "rename_"], [12, 1, 1, "", "rename_key_"], [12, 1, 1, "", "repeat"], [12, 1, 1, "", "repeat_interleave"], [12, 1, 1, "", "replace"], [12, 1, 1, "", "requires_grad_"], [12, 1, 1, "", "reshape"], [12, 1, 1, "", "round"], [12, 1, 1, "", "round_"], [12, 1, 1, "", "rsub"], [12, 1, 1, "", "save"], [12, 2, 1, "", "saved_path"], [12, 1, 1, "", "select"], [12, 1, 1, "", "send"], [12, 1, 1, "", "separates"], [12, 1, 1, "", "set"], [12, 1, 1, "", "set_"], [12, 1, 1, "", "set_at_"], [12, 1, 1, "", "set_non_tensor"], [12, 1, 1, "", "setdefault"], [12, 2, 1, "", "shape"], [12, 1, 1, "", "share_memory_"], [12, 1, 1, "", "sigmoid"], [12, 1, 1, "", "sigmoid_"], [12, 1, 1, "", "sign"], [12, 1, 1, "", "sign_"], [12, 1, 1, "", "sin"], [12, 1, 1, "", "sin_"], [12, 1, 1, "", "sinh"], [12, 1, 1, "", "sinh_"], [12, 1, 1, "", "size"], [12, 1, 1, "", "softmax"], [12, 2, 1, "", "sorted_keys"], [12, 1, 1, "", "split"], [12, 1, 1, "", "split_keys"], [12, 1, 1, "", "sqrt"], [12, 1, 1, "", "sqrt_"], [12, 1, 1, "", "squeeze"], [12, 1, 1, "", "stack"], [12, 1, 1, "", "stack_from_tensordict"], [12, 1, 1, "", "stack_tensors"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "std"], [12, 1, 1, "", "sub"], [12, 1, 1, "", "sub_"], [12, 1, 1, "", "sum"], [12, 1, 1, "", "tan"], [12, 1, 1, "", "tan_"], [12, 1, 1, "", "tanh"], [12, 1, 1, "", "tanh_"], [12, 1, 1, "", "tensor_split"], [12, 1, 1, "", "to"], [12, 1, 1, "", "to_dict"], [12, 1, 1, "", "to_h5"], [12, 1, 1, "", "to_lazystack"], [12, 1, 1, "", "to_mds"], [12, 1, 1, "", "to_module"], [12, 1, 1, "", "to_namedtuple"], [12, 1, 1, "", "to_padded_tensor"], [12, 1, 1, "", "to_pytree"], [12, 1, 1, "", "to_struct_array"], [12, 1, 1, "", "to_tensordict"], [12, 1, 1, "", "tolist"], [12, 1, 1, "", "transpose"], [12, 1, 1, "", "trunc"], [12, 1, 1, "", "trunc_"], [12, 1, 1, "", "type"], [12, 1, 1, "", "uint16"], [12, 1, 1, "", "uint32"], [12, 1, 1, "", "uint64"], [12, 1, 1, "", "uint8"], [12, 1, 1, "", "unbind"], [12, 1, 1, "", "unflatten"], [12, 1, 1, "", "unflatten_keys"], [12, 1, 1, "", "unlock_"], [12, 1, 1, "", "unsqueeze"], [12, 1, 1, "", "update"], [12, 1, 1, "", "update_"], [12, 1, 1, "", "update_at_"], [12, 1, 1, "", "values"], [12, 1, 1, "", "var"], [12, 1, 1, "", "view"], [12, 1, 1, "", "where"], [12, 1, 1, "", "zero_"], [12, 1, 1, "", "zero_grad"]], "tensordict.TensorDictParams": [[13, 1, 1, "", "abs"], [13, 1, 1, "", "abs_"], [13, 1, 1, "", "acos"], [13, 1, 1, "", "acos_"], [13, 1, 1, "", "add"], [13, 1, 1, "", "add_"], [13, 1, 1, "", "add_module"], [13, 1, 1, "", "addcdiv"], [13, 1, 1, "", "addcdiv_"], [13, 1, 1, "", "addcmul"], [13, 1, 1, "", "addcmul_"], [13, 1, 1, "", "all"], [13, 1, 1, "", "amax"], [13, 1, 1, "", "amin"], [13, 1, 1, "", "any"], [13, 1, 1, "", "apply"], [13, 1, 1, "", "apply_"], [13, 1, 1, "", "as_tensor"], [13, 1, 1, "", "asin"], [13, 1, 1, "", "asin_"], [13, 1, 1, "", "atan"], [13, 1, 1, "", "atan_"], [13, 1, 1, "", "auto_batch_size_"], [13, 1, 1, "", "auto_device_"], [13, 2, 1, "", "batch_dims"], [13, 2, 1, "", "batch_size"], [13, 1, 1, "", "bfloat16"], [13, 1, 1, "", "bitwise_and"], [13, 1, 1, "", "bool"], [13, 1, 1, "", "buffers"], [13, 1, 1, "", "bytes"], [13, 1, 1, "", "cat"], [13, 1, 1, "", "cat_from_tensordict"], [13, 1, 1, "", "cat_tensors"], [13, 1, 1, "", "ceil"], [13, 1, 1, "", "ceil_"], [13, 1, 1, "", "children"], [13, 1, 1, "", "chunk"], [13, 1, 1, "", "clamp"], [13, 1, 1, "", "clamp_max"], [13, 1, 1, "", "clamp_max_"], [13, 1, 1, "", "clamp_min"], [13, 1, 1, "", "clamp_min_"], [13, 1, 1, "", "clear"], [13, 1, 1, "", "clear_device_"], [13, 1, 1, "", "clear_refs_for_compile_"], [13, 1, 1, "", "clone"], [13, 1, 1, "", "compile"], [13, 1, 1, "", "complex128"], [13, 1, 1, "", "complex32"], [13, 1, 1, "", "complex64"], [13, 1, 1, "", "consolidate"], [13, 1, 1, "", "contiguous"], [13, 1, 1, "", "copy"], [13, 1, 1, "", "copy_"], [13, 1, 1, "", "copy_at_"], [13, 1, 1, "", "cos"], [13, 1, 1, "", "cos_"], [13, 1, 1, "", "cosh"], [13, 1, 1, "", "cosh_"], [13, 1, 1, "", "cpu"], [13, 1, 1, "", "create_nested"], [13, 1, 1, "", "cuda"], [13, 1, 1, "", "cummax"], [13, 1, 1, "", "cummin"], [13, 2, 1, "", "data"], [13, 1, 1, "", "data_ptr"], [13, 1, 1, "", "del_"], [13, 1, 1, "", "densify"], [13, 2, 1, "", "depth"], [13, 1, 1, "", "detach"], [13, 1, 1, "", "detach_"], [13, 2, 1, "", "device"], [13, 1, 1, "", "dim"], [13, 1, 1, "", "div"], [13, 1, 1, "", "div_"], [13, 1, 1, "", "double"], [13, 2, 1, "", "dtype"], [13, 1, 1, "", "dumps"], [13, 1, 1, "", "empty"], [13, 1, 1, "", "entry_class"], [13, 1, 1, "", "erf"], [13, 1, 1, "", "erf_"], [13, 1, 1, "", "erfc"], [13, 1, 1, "", "erfc_"], [13, 1, 1, "", "eval"], [13, 1, 1, "", "exclude"], [13, 1, 1, "", "exp"], [13, 1, 1, "", "exp_"], [13, 1, 1, "", "expand"], [13, 1, 1, "", "expand_as"], [13, 1, 1, "", "expm1"], [13, 1, 1, "", "expm1_"], [13, 1, 1, "", "extra_repr"], [13, 1, 1, "", "fill_"], [13, 1, 1, "", "filter_empty_"], [13, 1, 1, "", "filter_non_tensor_data"], [13, 1, 1, "", "flatten"], [13, 1, 1, "", "flatten_keys"], [13, 1, 1, "", "float"], [13, 1, 1, "", "float16"], [13, 1, 1, "", "float32"], [13, 1, 1, "", "float64"], [13, 1, 1, "", "floor"], [13, 1, 1, "", "floor_"], [13, 1, 1, "", "forward"], [13, 1, 1, "", "frac"], [13, 1, 1, "", "frac_"], [13, 1, 1, "", "from_any"], [13, 1, 1, "", "from_dataclass"], [13, 1, 1, "", "from_dict"], [13, 1, 1, "", "from_dict_instance"], [13, 1, 1, "", "from_h5"], [13, 1, 1, "", "from_module"], [13, 1, 1, "", "from_modules"], [13, 1, 1, "", "from_namedtuple"], [13, 1, 1, "", "from_pytree"], [13, 1, 1, "", "from_remote_init"], [13, 1, 1, "", "from_struct_array"], [13, 1, 1, "", "from_tuple"], [13, 1, 1, "", "fromkeys"], [13, 1, 1, "", "gather"], [13, 1, 1, "", "gather_and_stack"], [13, 1, 1, "", "get"], [13, 1, 1, "", "get_at"], [13, 1, 1, "", "get_buffer"], [13, 1, 1, "", "get_extra_state"], [13, 1, 1, "", "get_item_shape"], [13, 1, 1, "", "get_non_tensor"], [13, 1, 1, "", "get_parameter"], [13, 1, 1, "", "get_submodule"], [13, 2, 1, "", "grad"], [13, 1, 1, "", "half"], [13, 1, 1, "", "init_remote"], [13, 1, 1, "", "int"], [13, 1, 1, "", "int16"], [13, 1, 1, "", "int32"], [13, 1, 1, "", "int64"], [13, 1, 1, "", "int8"], [13, 1, 1, "", "ipu"], [13, 1, 1, "", "irecv"], [13, 1, 1, "", "is_consolidated"], [13, 1, 1, "", "is_contiguous"], [13, 1, 1, "", "is_empty"], [13, 1, 1, "", "is_floating_point"], [13, 2, 1, "", "is_memmap"], [13, 2, 1, "", "is_shared"], [13, 1, 1, "", "isend"], [13, 1, 1, "", "isfinite"], [13, 1, 1, "", "isnan"], [13, 1, 1, "", "isneginf"], [13, 1, 1, "", "isposinf"], [13, 1, 1, "", "isreal"], [13, 1, 1, "", "items"], [13, 1, 1, "", "keys"], [13, 1, 1, "", "lazy_stack"], [13, 1, 1, "", "lerp"], [13, 1, 1, "", "lerp_"], [13, 1, 1, "", "lgamma"], [13, 1, 1, "", "lgamma_"], [13, 1, 1, "", "load"], [13, 1, 1, "", "load_"], [13, 1, 1, "", "load_memmap"], [13, 1, 1, "", "load_memmap_"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "lock_"], [13, 1, 1, "", "log"], [13, 1, 1, "", "log10"], [13, 1, 1, "", "log10_"], [13, 1, 1, "", "log1p"], [13, 1, 1, "", "log1p_"], [13, 1, 1, "", "log2"], [13, 1, 1, "", "log2_"], [13, 1, 1, "", "log_"], [13, 1, 1, "", "logical_and"], [13, 1, 1, "", "logsumexp"], [13, 1, 1, "", "make_memmap"], [13, 1, 1, "", "make_memmap_from_storage"], [13, 1, 1, "", "make_memmap_from_tensor"], [13, 1, 1, "", "map"], [13, 1, 1, "", "map_iter"], [13, 1, 1, "", "masked_fill"], [13, 1, 1, "", "masked_fill_"], [13, 1, 1, "", "masked_select"], [13, 1, 1, "", "max"], [13, 1, 1, "", "maximum"], [13, 1, 1, "", "maximum_"], [13, 1, 1, "", "maybe_dense_stack"], [13, 1, 1, "", "mean"], [13, 1, 1, "", "memmap"], [13, 1, 1, "", "memmap_"], [13, 1, 1, "", "memmap_like"], [13, 1, 1, "", "memmap_refresh_"], [13, 1, 1, "", "min"], [13, 1, 1, "", "minimum"], [13, 1, 1, "", "minimum_"], [13, 1, 1, "", "modules"], [13, 1, 1, "", "mtia"], [13, 1, 1, "", "mul"], [13, 1, 1, "", "mul_"], [13, 1, 1, "", "named_apply"], [13, 1, 1, "", "named_buffers"], [13, 1, 1, "", "named_children"], [13, 1, 1, "", "named_modules"], [13, 1, 1, "", "named_parameters"], [13, 2, 1, "", "names"], [13, 1, 1, "", "nanmean"], [13, 1, 1, "", "nansum"], [13, 2, 1, "", "ndim"], [13, 1, 1, "", "ndimension"], [13, 1, 1, "", "neg"], [13, 1, 1, "", "neg_"], [13, 1, 1, "", "new_empty"], [13, 1, 1, "", "new_full"], [13, 1, 1, "", "new_ones"], [13, 1, 1, "", "new_tensor"], [13, 1, 1, "", "new_zeros"], [13, 1, 1, "", "non_tensor_items"], [13, 1, 1, "", "norm"], [13, 1, 1, "", "numel"], [13, 1, 1, "", "numpy"], [13, 1, 1, "", "param_count"], [13, 1, 1, "", "parameters"], [13, 1, 1, "", "permute"], [13, 1, 1, "", "pin_memory"], [13, 1, 1, "", "pin_memory_"], [13, 1, 1, "", "pop"], [13, 1, 1, "", "popitem"], [13, 1, 1, "", "pow"], [13, 1, 1, "", "pow_"], [13, 1, 1, "", "prod"], [13, 1, 1, "", "qint32"], [13, 1, 1, "", "qint8"], [13, 1, 1, "", "quint4x2"], [13, 1, 1, "", "quint8"], [13, 1, 1, "", "reciprocal"], [13, 1, 1, "", "reciprocal_"], [13, 1, 1, "", "record_stream"], [13, 1, 1, "", "recv"], [13, 1, 1, "", "reduce"], [13, 1, 1, "", "refine_names"], [13, 1, 1, "", "register_backward_hook"], [13, 1, 1, "", "register_buffer"], [13, 1, 1, "", "register_forward_hook"], [13, 1, 1, "", "register_forward_pre_hook"], [13, 1, 1, "", "register_full_backward_hook"], [13, 1, 1, "", "register_full_backward_pre_hook"], [13, 1, 1, "", "register_get_post_hook"], [13, 1, 1, "", "register_load_state_dict_post_hook"], [13, 1, 1, "", "register_load_state_dict_pre_hook"], [13, 1, 1, "", "register_module"], [13, 1, 1, "", "register_parameter"], [13, 1, 1, "", "register_state_dict_post_hook"], [13, 1, 1, "", "register_state_dict_pre_hook"], [13, 1, 1, "", "rename"], [13, 1, 1, "", "rename_"], [13, 1, 1, "", "rename_key_"], [13, 1, 1, "", "repeat"], [13, 1, 1, "", "repeat_interleave"], [13, 1, 1, "", "replace"], [13, 1, 1, "", "requires_grad_"], [13, 1, 1, "", "reshape"], [13, 1, 1, "", "round"], [13, 1, 1, "", "round_"], [13, 1, 1, "", "rsub"], [13, 1, 1, "", "save"], [13, 2, 1, "", "saved_path"], [13, 1, 1, "", "select"], [13, 1, 1, "", "send"], [13, 1, 1, "", "separates"], [13, 1, 1, "", "set"], [13, 1, 1, "", "set_"], [13, 1, 1, "", "set_at_"], [13, 1, 1, "", "set_extra_state"], [13, 1, 1, "", "set_non_tensor"], [13, 1, 1, "", "set_submodule"], [13, 1, 1, "", "setdefault"], [13, 2, 1, "", "shape"], [13, 1, 1, "", "share_memory"], [13, 1, 1, "", "share_memory_"], [13, 1, 1, "", "sigmoid"], [13, 1, 1, "", "sigmoid_"], [13, 1, 1, "", "sign"], [13, 1, 1, "", "sign_"], [13, 1, 1, "", "sin"], [13, 1, 1, "", "sin_"], [13, 1, 1, "", "sinh"], [13, 1, 1, "", "sinh_"], [13, 1, 1, "", "size"], [13, 1, 1, "", "softmax"], [13, 2, 1, "", "sorted_keys"], [13, 1, 1, "", "split"], [13, 1, 1, "", "split_keys"], [13, 1, 1, "", "sqrt"], [13, 1, 1, "", "sqrt_"], [13, 1, 1, "", "squeeze"], [13, 1, 1, "", "stack"], [13, 1, 1, "", "stack_from_tensordict"], [13, 1, 1, "", "stack_tensors"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "std"], [13, 1, 1, "", "sub"], [13, 1, 1, "", "sub_"], [13, 1, 1, "", "sum"], [13, 1, 1, "", "tan"], [13, 1, 1, "", "tan_"], [13, 1, 1, "", "tanh"], [13, 1, 1, "", "tanh_"], [13, 1, 1, "", "tensor_split"], [13, 1, 1, "", "to"], [13, 1, 1, "", "to_dict"], [13, 1, 1, "", "to_empty"], [13, 1, 1, "", "to_h5"], [13, 1, 1, "", "to_lazystack"], [13, 1, 1, "", "to_mds"], [13, 1, 1, "", "to_module"], [13, 1, 1, "", "to_namedtuple"], [13, 1, 1, "", "to_padded_tensor"], [13, 1, 1, "", "to_pytree"], [13, 1, 1, "", "to_struct_array"], [13, 1, 1, "", "to_tensordict"], [13, 1, 1, "", "tolist"], [13, 1, 1, "", "train"], [13, 1, 1, "", "transpose"], [13, 1, 1, "", "trunc"], [13, 1, 1, "", "trunc_"], [13, 1, 1, "", "type"], [13, 1, 1, "", "uint16"], [13, 1, 1, "", "uint32"], [13, 1, 1, "", "uint64"], [13, 1, 1, "", "uint8"], [13, 1, 1, "", "unbind"], [13, 1, 1, "", "unflatten"], [13, 1, 1, "", "unflatten_keys"], [13, 1, 1, "", "unlock_"], [13, 1, 1, "", "unsqueeze"], [13, 1, 1, "", "update"], [13, 1, 1, "", "update_"], [13, 1, 1, "", "update_at_"], [13, 1, 1, "", "values"], [13, 1, 1, "", "var"], [13, 1, 1, "", "view"], [13, 1, 1, "", "where"], [13, 1, 1, "", "xpu"], [13, 1, 1, "", "zero_"], [13, 1, 1, "", "zero_grad"]], "tensordict.nn": [[43, 0, 1, "", "CudaGraphModule"], [44, 0, 1, "", "EnsembleModule"], [45, 0, 1, "", "InteractionType"], [46, 0, 1, "", "ProbabilisticTensorDictModule"], [47, 0, 1, "", "ProbabilisticTensorDictSequential"], [48, 0, 1, "", "TensorDictModule"], [49, 0, 1, "", "TensorDictModuleBase"], [50, 0, 1, "", "TensorDictModuleWrapper"], [51, 0, 1, "", "TensorDictSequential"], [52, 0, 1, "", "WrapModule"], [53, 4, 1, "", "add_custom_mapping"], [54, 0, 1, "", "as_tensordict_module"], [55, 0, 1, "", "biased_softplus"], [56, 0, 1, "", "composite_lp_aggregate"], [57, 0, 1, "", "dispatch"], [64, 4, 1, "", "inv_softplus"], [65, 4, 1, "", "make_tensordict"], [66, 4, 1, "", "mappings"], [67, 4, 1, "", "rand_one_hot"], [68, 0, 1, "", "set_composite_lp_aggregate"], [69, 0, 1, "", "set_interaction_type"], [70, 0, 1, "", "set_skip_existing"], [71, 4, 1, "", "skip_existing"]], "tensordict.nn.InteractionType": [[45, 1, 1, "", "from_str"]], "tensordict.nn.ProbabilisticTensorDictModule": [[46, 1, 1, "", "build_dist_from_params"], [46, 2, 1, "", "dist_params_keys"], [46, 2, 1, "", "dist_sample_keys"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_dist"], [46, 1, 1, "", "log_prob"]], "tensordict.nn.ProbabilisticTensorDictSequential": [[47, 1, 1, "", "build_dist_from_params"], [47, 2, 1, "", "default_interaction_type"], [47, 2, 1, "", "dist_params_keys"], [47, 2, 1, "", "dist_sample_keys"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_dist"], [47, 1, 1, "", "get_dist_params"], [47, 1, 1, "", "log_prob"]], "tensordict.nn.TensorDictModule": [[48, 1, 1, "", "forward"]], "tensordict.nn.TensorDictModuleBase": [[49, 1, 1, "", "is_tdmodule_compatible"], [49, 1, 1, "", "reset_out_keys"], [49, 1, 1, "", "reset_parameters_recursive"], [49, 1, 1, "", "select_out_keys"]], "tensordict.nn.TensorDictModuleWrapper": [[50, 1, 1, "", "forward"]], "tensordict.nn.TensorDictSequential": [[51, 1, 1, "", "forward"], [51, 1, 1, "", "reset_out_keys"], [51, 1, 1, "", "select_out_keys"], [51, 1, 1, "", "select_subsequence"]], "tensordict.nn.WrapModule": [[52, 1, 1, "", "forward"]], "tensordict.nn.distributions": [[58, 0, 1, "", "AddStateIndependentNormalScale"], [59, 0, 1, "", "CompositeDistribution"], [60, 0, 1, "", "Delta"], [61, 0, 1, "", "NormalParamExtractor"], [62, 0, 1, "", "OneHotCategorical"], [63, 0, 1, "", "TruncatedNormal"]], "tensordict.utils": [[81, 0, 1, "", "expand_as_right"], [82, 0, 1, "", "expand_right"], [83, 0, 1, "", "isin"], [84, 0, 1, "", "remove_duplicates"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"tensordict": [0, 2, 3, 11, 44, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 86, 88, 89, 91, 92, 95, 98, 99, 100, 101, 102], "distribut": [0, 58, 59, 60, 61, 62, 63, 86, 100], "set": [0, 98, 103], "creat": [0, 3], "memori": [0, 88, 89, 99, 101], "map": [0, 66, 88, 89, 99], "oper": [0, 3, 88], "tensor": [0, 3, 88, 99], "across": 0, "node": 0, "trace": 1, "tensordictmodul": [1, 3, 48, 86, 92, 100], "tensordictsequenti": [1, 51], "welcom": 2, "document": 2, "instal": 2, "tutori": 2, "basic": 2, "nn": [2, 44, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 86], "dataload": [2, 91, 96], "content": [2, 98], "indic": 2, "tabl": 2, "overview": 3, "motiv": 3, "featur": 3, "escap": 3, "shape": [3, 102], "non": 3, "data": [3, 95, 97], "access": 3, "batch": [3, 97, 102], "stack": [3, 79, 95, 100, 102], "name": 3, "dimens": [3, 102], "nest": [3, 92, 98], "lazi": 3, "evalu": 3, "pre": [3, 101], "alloc": [3, 101], "lazystackedtensordict": 4, "memorymappedtensor": [5, 89], "metadata": 6, "nontensordata": 7, "nontensorstack": 8, "persistenttensordict": 9, "tensorclass": [10, 80, 87, 89, 96, 97], "tensordictbas": 12, "tensordictparam": 13, "capture_non_tensor_stack": 14, "cat": 15, "default_is_leaf": 16, "dense_stack_td": 17, "from_ani": 18, "from_consolid": 19, "from_dataclass": 20, "from_dict": 21, "from_h5": 22, "from_modul": [23, 24], "from_namedtupl": 25, "from_pytre": 26, "from_struct_arrai": 27, "from_tupl": 28, "fromkei": 29, "get_defaults_to_non": 30, "is_batchedtensor": 31, "is_leaf_nontensor": 32, "is_tensor_collect": 33, "lazy_legaci": 34, "lazy_stack": 35, "list_to_stack": 36, "load": [37, 89, 97], "load_memmap": 38, "make_tensordict": [39, 65], "maybe_dense_stack": 40, "memmap": 41, "merge_tensordict": 42, "cudagraphmodul": 43, "ensemblemodul": 44, "interactiontyp": 45, "probabilistictensordictmodul": [46, 100], "probabilistictensordictsequenti": 47, "tensordictmodulebas": 49, "tensordictmodulewrapp": 50, "wrapmodul": 52, "add_custom_map": 53, "as_tensordict_modul": 54, "biased_softplu": 55, "composite_lp_aggreg": 56, "dispatch": 57, "addstateindependentnormalscal": 58, "compositedistribut": 59, "delta": 60, "normalparamextractor": 61, "onehotcategor": 62, "truncatednorm": 63, "inv_softplu": 64, "rand_one_hot": 67, "set_composite_lp_aggreg": 68, "set_interaction_typ": 69, "set_skip_exist": 70, "skip_exist": 71, "pad": 72, "pad_sequ": 73, "parse_tensor_dict_str": 74, "save": [75, 89, 92], "set_capture_non_tensor_stack": 76, "set_lazy_legaci": 77, "set_list_to_stack": 78, "expand_as_right": 81, "expand_right": 82, "isin": 83, "remove_dupl": 84, "api": 85, "refer": 85, "packag": [86, 88], "ensembl": 86, "compil": 86, "util": [86, 88], "serial": 87, "edg": 87, "case": [87, 89], "auto": 87, "cast": 87, "constructor": 88, "handler": 88, "context": 88, "manag": [88, 99], "pointwis": 88, "support": [88, 100], "perform": 88, "exampl": [88, 100], "1": 88, "2": 88, "3": 88, "scalar": 88, "broadcast": 88, "rule": 88, "effici": 88, "handl": [88, 89], "miss": 88, "entri": 88, "gradient": 88, "comput": [88, 90, 94], "torch": [88, 92], "autograd": 88, "grad": 88, "simpl": [88, 100], "end": 88, "modul": [88, 92, 100], "object": 89, "memmori": 89, "exist": [89, 98], "torchsnapshot": 89, "compat": 89, "gener": 89, "us": [89, 91, 92, 96, 100, 102], "big": 89, "dataset": [89, 91, 96], "time": [90, 94], "model": [91, 92, 96], "optim": [91, 96], "paramet": [91, 96], "export": 92, "prerequisit": 92, "kei": [92, 98, 100], "learn": 92, "design": 92, "work": [92, 100], "select": [92, 98], "output": 92, "control": 92, "sampl": 92, "strategi": 92, "next": 92, "step": 92, "further": 92, "read": 92, "readm": 93, "tuto": 93, "build": 95, "from": 95, "stream": 95, "heterogen": 95, "togeth": 95, "asynchron": 95, "conclus": [95, 100], "manipul": [98, 102], "get": 98, "renam": 98, "updat": 98, "multipl": [98, 100], "valu": [98, 102, 103], "iter": 98, "over": 98, "s": [98, 100], "check": 98, "flatten": 98, "unflatten": 98, "exclud": 98, "simplifi": 99, "pytorch": 99, "devic": 99, "code": 100, "recurr": 100, "layer": 100, "callabl": 100, "input": 100, "without": 100, "runtim": 100, "do": 100, "don": 100, "t": 100, "index": [102, 103], "reshap": 102, "split": 102, "unbind": 102, "concaten": 102, "expand": 102, "squeez": 102, "unsqueez": 102, "view": 102, "permut": 102, "decor": 102, "gather": 102, "slice": 103, "mask": 103}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})