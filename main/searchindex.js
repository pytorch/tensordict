Search.setIndex({"docnames": ["distributed", "fx", "index", "overview", "reference/generated/tensordict.LazyStackedTensorDict", "reference/generated/tensordict.MemoryMappedTensor", "reference/generated/tensordict.NonTensorData", "reference/generated/tensordict.NonTensorStack", "reference/generated/tensordict.PersistentTensorDict", "reference/generated/tensordict.TensorClass", "reference/generated/tensordict.TensorDict", "reference/generated/tensordict.TensorDictBase", "reference/generated/tensordict.TensorDictParams", "reference/generated/tensordict.capture_non_tensor_stack", "reference/generated/tensordict.cat", "reference/generated/tensordict.default_is_leaf", "reference/generated/tensordict.dense_stack_tds", "reference/generated/tensordict.from_any", "reference/generated/tensordict.from_consolidated", "reference/generated/tensordict.from_dataclass", "reference/generated/tensordict.from_dict", "reference/generated/tensordict.from_h5", "reference/generated/tensordict.from_module", "reference/generated/tensordict.from_modules", "reference/generated/tensordict.from_namedtuple", "reference/generated/tensordict.from_pytree", "reference/generated/tensordict.from_struct_array", "reference/generated/tensordict.from_tuple", "reference/generated/tensordict.fromkeys", "reference/generated/tensordict.get_defaults_to_none", "reference/generated/tensordict.is_batchedtensor", "reference/generated/tensordict.is_leaf_nontensor", "reference/generated/tensordict.is_tensor_collection", "reference/generated/tensordict.lazy_legacy", "reference/generated/tensordict.lazy_stack", "reference/generated/tensordict.list_to_stack", "reference/generated/tensordict.load", "reference/generated/tensordict.load_memmap", "reference/generated/tensordict.make_tensordict", "reference/generated/tensordict.maybe_dense_stack", "reference/generated/tensordict.memmap", "reference/generated/tensordict.merge_tensordicts", "reference/generated/tensordict.nn.CudaGraphModule", "reference/generated/tensordict.nn.EnsembleModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential", "reference/generated/tensordict.nn.TensorDictModule", "reference/generated/tensordict.nn.TensorDictModuleBase", "reference/generated/tensordict.nn.TensorDictModuleWrapper", "reference/generated/tensordict.nn.TensorDictSequential", "reference/generated/tensordict.nn.WrapModule", "reference/generated/tensordict.nn.as_tensordict_module", "reference/generated/tensordict.nn.biased_softplus", "reference/generated/tensordict.nn.composite_lp_aggregate", "reference/generated/tensordict.nn.dispatch", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale", "reference/generated/tensordict.nn.distributions.CompositeDistribution", "reference/generated/tensordict.nn.distributions.Delta", "reference/generated/tensordict.nn.distributions.NormalParamExtractor", "reference/generated/tensordict.nn.distributions.OneHotCategorical", "reference/generated/tensordict.nn.distributions.TruncatedNormal", "reference/generated/tensordict.nn.inv_softplus", "reference/generated/tensordict.nn.make_tensordict", "reference/generated/tensordict.nn.rand_one_hot", "reference/generated/tensordict.nn.set_composite_lp_aggregate", "reference/generated/tensordict.nn.set_skip_existing", "reference/generated/tensordict.nn.skip_existing", "reference/generated/tensordict.pad", "reference/generated/tensordict.pad_sequence", "reference/generated/tensordict.parse_tensor_dict_string", "reference/generated/tensordict.save", "reference/generated/tensordict.set_capture_non_tensor_stack", "reference/generated/tensordict.set_lazy_legacy", "reference/generated/tensordict.set_list_to_stack", "reference/generated/tensordict.stack", "reference/generated/tensordict.tensorclass", "reference/generated/tensordict.utils.expand_as_right", "reference/generated/tensordict.utils.expand_right", "reference/generated/tensordict.utils.isin", "reference/generated/tensordict.utils.remove_duplicates", "reference/index", "reference/nn", "reference/tensorclass", "reference/tensordict", "saving", "sg_execution_times", "tutorials/data_fashion", "tutorials/export", "tutorials/index", "tutorials/sg_execution_times", "tutorials/streamed_tensordict", "tutorials/tensorclass_fashion", "tutorials/tensorclass_imagenet", "tutorials/tensordict_keys", "tutorials/tensordict_memory", "tutorials/tensordict_module", "tutorials/tensordict_preallocation", "tutorials/tensordict_shapes", "tutorials/tensordict_slicing"], "filenames": ["distributed.rst", "fx.rst", "index.rst", "overview.rst", "reference/generated/tensordict.LazyStackedTensorDict.rst", "reference/generated/tensordict.MemoryMappedTensor.rst", "reference/generated/tensordict.NonTensorData.rst", "reference/generated/tensordict.NonTensorStack.rst", "reference/generated/tensordict.PersistentTensorDict.rst", "reference/generated/tensordict.TensorClass.rst", "reference/generated/tensordict.TensorDict.rst", "reference/generated/tensordict.TensorDictBase.rst", "reference/generated/tensordict.TensorDictParams.rst", "reference/generated/tensordict.capture_non_tensor_stack.rst", "reference/generated/tensordict.cat.rst", "reference/generated/tensordict.default_is_leaf.rst", "reference/generated/tensordict.dense_stack_tds.rst", "reference/generated/tensordict.from_any.rst", "reference/generated/tensordict.from_consolidated.rst", "reference/generated/tensordict.from_dataclass.rst", "reference/generated/tensordict.from_dict.rst", "reference/generated/tensordict.from_h5.rst", "reference/generated/tensordict.from_module.rst", "reference/generated/tensordict.from_modules.rst", "reference/generated/tensordict.from_namedtuple.rst", "reference/generated/tensordict.from_pytree.rst", "reference/generated/tensordict.from_struct_array.rst", "reference/generated/tensordict.from_tuple.rst", "reference/generated/tensordict.fromkeys.rst", "reference/generated/tensordict.get_defaults_to_none.rst", "reference/generated/tensordict.is_batchedtensor.rst", "reference/generated/tensordict.is_leaf_nontensor.rst", "reference/generated/tensordict.is_tensor_collection.rst", "reference/generated/tensordict.lazy_legacy.rst", "reference/generated/tensordict.lazy_stack.rst", "reference/generated/tensordict.list_to_stack.rst", "reference/generated/tensordict.load.rst", "reference/generated/tensordict.load_memmap.rst", "reference/generated/tensordict.make_tensordict.rst", "reference/generated/tensordict.maybe_dense_stack.rst", "reference/generated/tensordict.memmap.rst", "reference/generated/tensordict.merge_tensordicts.rst", "reference/generated/tensordict.nn.CudaGraphModule.rst", "reference/generated/tensordict.nn.EnsembleModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictModule.rst", "reference/generated/tensordict.nn.ProbabilisticTensorDictSequential.rst", "reference/generated/tensordict.nn.TensorDictModule.rst", "reference/generated/tensordict.nn.TensorDictModuleBase.rst", "reference/generated/tensordict.nn.TensorDictModuleWrapper.rst", "reference/generated/tensordict.nn.TensorDictSequential.rst", "reference/generated/tensordict.nn.WrapModule.rst", "reference/generated/tensordict.nn.as_tensordict_module.rst", "reference/generated/tensordict.nn.biased_softplus.rst", "reference/generated/tensordict.nn.composite_lp_aggregate.rst", "reference/generated/tensordict.nn.dispatch.rst", "reference/generated/tensordict.nn.distributions.AddStateIndependentNormalScale.rst", "reference/generated/tensordict.nn.distributions.CompositeDistribution.rst", "reference/generated/tensordict.nn.distributions.Delta.rst", "reference/generated/tensordict.nn.distributions.NormalParamExtractor.rst", "reference/generated/tensordict.nn.distributions.OneHotCategorical.rst", "reference/generated/tensordict.nn.distributions.TruncatedNormal.rst", "reference/generated/tensordict.nn.inv_softplus.rst", "reference/generated/tensordict.nn.make_tensordict.rst", "reference/generated/tensordict.nn.rand_one_hot.rst", "reference/generated/tensordict.nn.set_composite_lp_aggregate.rst", "reference/generated/tensordict.nn.set_skip_existing.rst", "reference/generated/tensordict.nn.skip_existing.rst", "reference/generated/tensordict.pad.rst", "reference/generated/tensordict.pad_sequence.rst", "reference/generated/tensordict.parse_tensor_dict_string.rst", "reference/generated/tensordict.save.rst", "reference/generated/tensordict.set_capture_non_tensor_stack.rst", "reference/generated/tensordict.set_lazy_legacy.rst", "reference/generated/tensordict.set_list_to_stack.rst", "reference/generated/tensordict.stack.rst", "reference/generated/tensordict.tensorclass.rst", "reference/generated/tensordict.utils.expand_as_right.rst", "reference/generated/tensordict.utils.expand_right.rst", "reference/generated/tensordict.utils.isin.rst", "reference/generated/tensordict.utils.remove_duplicates.rst", "reference/index.rst", "reference/nn.rst", "reference/tensorclass.rst", "reference/tensordict.rst", "saving.rst", "sg_execution_times.rst", "tutorials/data_fashion.rst", "tutorials/export.rst", "tutorials/index.rst", "tutorials/sg_execution_times.rst", "tutorials/streamed_tensordict.rst", "tutorials/tensorclass_fashion.rst", "tutorials/tensorclass_imagenet.rst", "tutorials/tensordict_keys.rst", "tutorials/tensordict_memory.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_preallocation.rst", "tutorials/tensordict_shapes.rst", "tutorials/tensordict_slicing.rst"], "titles": ["TensorDict in distributed settings", "Tracing TensorDictModule", "Welcome to the TensorDict Documentation!", "Overview", "LazyStackedTensorDict", "MemoryMappedTensor", "NonTensorData", "NonTensorStack", "PersistentTensorDict", "TensorClass", "TensorDict", "TensorDictBase", "TensorDictParams", "capture_non_tensor_stack", "cat", "default_is_leaf", "dense_stack_tds", "from_any", "from_consolidated", "from_dataclass", "from_dict", "from_h5", "from_module", "from_modules", "from_namedtuple", "from_pytree", "from_struct_array", "from_tuple", "fromkeys", "get_defaults_to_none", "is_batchedtensor", "is_leaf_nontensor", "is_tensor_collection", "lazy_legacy", "lazy_stack", "list_to_stack", "load", "load_memmap", "make_tensordict", "maybe_dense_stack", "memmap", "merge_tensordicts", "CudaGraphModule", "tensordict.nn.EnsembleModule", "ProbabilisticTensorDictModule", "ProbabilisticTensorDictSequential", "TensorDictModule", "TensorDictModuleBase", "TensorDictModuleWrapper", "TensorDictSequential", "WrapModule", "as_tensordict_module", "tensordict.nn.biased_softplus", "composite_lp_aggregate", "tensordict.nn.dispatch", "tensordict.nn.distributions.AddStateIndependentNormalScale", "tensordict.nn.distributions.CompositeDistribution", "tensordict.nn.distributions.Delta", "tensordict.nn.distributions.NormalParamExtractor", "tensordict.nn.distributions.OneHotCategorical", "tensordict.nn.distributions.TruncatedNormal", "tensordict.nn.inv_softplus", "tensordict.nn.make_tensordict", "tensordict.nn.rand_one_hot", "set_composite_lp_aggregate", "tensordict.nn.set_skip_existing", "tensordict.nn.skip_existing", "pad", "pad_sequence", "parse_tensor_dict_string", "save", "set_capture_non_tensor_stack", "set_lazy_legacy", "set_list_to_stack", "stack", "tensorclass", "expand_as_right", "expand_right", "isin", "remove_duplicates", "API Reference", "tensordict.nn package", "tensorclass", "tensordict package", "Saving TensorDict and tensorclass objects", "Computation times", "Using TensorDict for datasets", "Exporting tensordict modules", "README Tutos", "Computation times", "Building tensordicts from streams", "Using tensorclasses for datasets", "Batched data loading with tensorclasses", "Manipulating the keys of a TensorDict", "Simplifying PyTorch Memory Management with TensorDict", "TensorDictModule", "Pre-allocating memory with TensorDict", "Manipulating the shape of a TensorDict", "Slicing, Indexing, and Masking"], "terms": {"can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 23, 37, 38, 42, 44, 45, 46, 47, 49, 51, 54, 55, 56, 58, 62, 64, 65, 71, 72, 73, 75, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 33, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 54, 55, 56, 58, 62, 65, 68, 69, 71, 73, 75, 81, 82, 83, 85, 88, 89, 90, 92, 93, 94, 96, 98], "pass": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 16, 19, 23, 25, 32, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 56, 81, 83, 84, 86, 87, 90, 91, 94, 95], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 22, 23, 25, 28, 32, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 58, 62, 64, 65, 67, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98], "one": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 65, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97], "anoth": [0, 3, 4, 5, 7, 8, 10, 11, 12, 46, 54, 76, 79, 84, 90, 93, 95, 97], "If": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 23, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 56, 62, 65, 68, 71, 73, 79, 82, 83, 84, 94, 95, 97], "two": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 25, 44, 67, 83, 84, 86, 90, 91, 92, 95, 98], "have": [0, 3, 4, 7, 8, 10, 11, 12, 16, 19, 20, 22, 23, 38, 42, 43, 45, 46, 49, 54, 56, 62, 65, 78, 82, 83, 84, 87, 90, 94, 95, 96, 97, 98], "access": [0, 2, 4, 5, 7, 8, 10, 11, 12, 47, 49, 83, 84, 93, 97], "share": [0, 4, 6, 7, 8, 10, 11, 12, 40, 97, 98], "physic": [0, 4, 7, 8, 10, 11, 12, 83, 92], "storag": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 75, 83, 90, 92], "effici": [0, 3, 4, 7, 8, 10, 11, 12, 86, 90, 91, 92, 93], "data": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 32, 37, 38, 40, 43, 46, 50, 62, 68, 70, 71, 75, 81, 82, 83, 84, 85, 86, 88, 89, 91, 95], "run": [0, 12, 42, 44, 45, 48, 50, 54, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "process": [0, 3, 4, 6, 7, 8, 10, 11, 12, 40, 50, 72, 83, 90, 92], "here": [0, 3, 81, 82, 84, 87, 90, 91, 92, 95, 97], "we": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 20, 38, 43, 44, 46, 47, 49, 62, 81, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "provid": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 25, 37, 42, 44, 46, 49, 50, 54, 56, 68, 75, 76, 79, 81, 82, 83, 86, 87, 91, 92, 93, 94, 95], "some": [0, 3, 4, 7, 8, 10, 11, 12, 16, 41, 42, 44, 45, 49, 67, 72, 75, 83, 84, 87, 90, 91, 92, 95], "detail": [0, 4, 7, 8, 10, 11, 12, 34, 39, 58, 82], "how": [0, 3, 4, 7, 8, 10, 11, 12, 19, 56, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 25, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 56, 59, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "achiev": [0, 3, 4, 7, 8, 10, 11, 12, 82, 93], "rpc": [0, 5], "For": [0, 2, 3, 4, 7, 8, 10, 11, 12, 25, 42, 47, 56, 67, 81, 82, 83, 87, 90, 92, 93, 94, 95, 97, 98], "more": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 17, 20, 21, 23, 24, 26, 27, 44, 45, 46, 55, 58, 64, 82, 84, 86, 87, 90, 91, 92, 97], "check": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 25, 26, 32, 35, 42, 47, 50, 65, 82, 84, 87, 92, 94], "offici": [0, 87], "pytorch": [0, 2, 3, 8, 12, 42, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 97], "document": [0, 12, 82, 84, 87], "arrai": [0, 4, 7, 8, 10, 11, 12, 26, 73, 83, 92, 96], "great": 0, "advantag": [0, 3, 5, 8, 46, 83, 84, 92, 96, 97], "thei": [0, 3, 4, 7, 8, 10, 11, 12, 16, 65, 83, 84, 87, 90, 91, 92, 94, 95, 96, 97], "store": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 40, 47, 56, 75, 83, 84, 86, 91, 93, 94, 96, 97], "amount": [0, 90], "allow": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 35, 37, 42, 49, 54, 56, 65, 81, 82, 83, 84, 86, 90, 91, 92, 94, 97], "slice": [0, 2, 3, 4, 7, 8, 10, 11, 12, 85, 88, 89, 97], "readili": [0, 44], "without": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 37, 45, 49, 73, 75, 84, 87], "read": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 44, 46, 47, 49, 50, 54, 59, 81, 83, 84, 90, 95], "whole": [0, 82, 84], "file": [0, 4, 5, 6, 7, 8, 10, 11, 12, 18, 21, 37, 40, 42, 83, 84, 85, 87, 89, 92, 94], "offer": [0, 3, 42, 64, 83, 84, 86, 90, 91, 92, 95], "an": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 19, 21, 23, 28, 32, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 54, 62, 75, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97], "interfac": [0, 8, 42, 56, 95], "between": [0, 4, 6, 7, 8, 10, 11, 12, 23, 40, 44, 83, 95], "torch": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 25, 30, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 94, 95, 97], "name": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 25, 26, 46, 54, 56, 65, 75, 81, 95], "memmaptensor": [0, 84], "instanc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 22, 23, 25, 40, 42, 44, 45, 46, 47, 48, 49, 50, 54, 68, 75, 81, 82, 83, 84, 87, 90, 92, 95, 97], "object": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 17, 19, 32, 44, 45, 46, 48, 49, 71, 82, 83, 86, 87, 91], "repres": [0, 4, 5, 7, 8, 10, 11, 12, 23, 44, 84, 87, 90, 92, 95, 98], "big": [0, 2, 4, 7, 8, 10, 11, 12, 83], "dataset": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 83, 85, 88, 89, 92], "disk": [0, 4, 5, 6, 7, 8, 10, 11, 12, 36, 37, 40, 70, 83, 84, 86, 91, 92, 94], "easili": [0, 2, 3, 7, 81, 84, 87], "batch": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 19, 20, 23, 38, 45, 46, 49, 54, 56, 57, 62, 67, 71, 73, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 98], "wai": [0, 3, 4, 7, 8, 9, 10, 11, 12, 46, 83, 87, 92, 93, 95, 97, 98], "A": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 37, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 55, 56, 58, 65, 67, 71, 73, 75, 78, 81, 87, 90, 92, 95, 97], "simpli": [0, 1, 3, 6, 84, 90, 92, 93, 97], "via": [0, 2, 3, 4, 7, 8, 10, 11, 12, 47, 49, 82, 97], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 22, 25, 26, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 58, 64, 67, 73, 75, 78, 79, 81, 82, 84, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98], "popul": [0, 3, 4, 7, 8, 10, 11, 12, 46, 83, 84, 86, 94, 96], "2": [0, 1, 3, 4, 7, 8, 10, 11, 12, 16, 23, 25, 41, 42, 43, 46, 47, 49, 50, 54, 55, 58, 64, 67, 68, 71, 73, 75, 78, 79, 81, 82, 84, 86, 87, 90, 91, 92, 93, 96, 97, 98], "call": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 23, 37, 40, 42, 44, 46, 48, 49, 50, 54, 56, 65, 72, 74, 83, 84, 87, 90, 95, 96, 97], "memmap_": [0, 4, 6, 7, 8, 10, 11, 12, 84, 92, 94], "put": [0, 4, 7, 8, 10, 11, 12, 42, 84, 90, 95], "One": [0, 3, 59, 81, 82, 84, 87, 92, 95], "queri": [0, 3, 4, 6, 7, 8, 10, 11, 12, 45, 49], "is_memmap": [0, 4, 7, 8, 10, 11, 12, 92], "itself": [0, 3, 4, 7, 8, 9, 10, 11, 12, 23, 47, 87, 94], "done": [0, 3, 4, 7, 8, 10, 11, 12, 82, 83, 86, 91, 92, 97], "sever": [0, 4, 7, 8, 10, 11, 12, 23, 83, 84, 87, 95], "firstli": 0, "empti": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 37, 42, 45, 46, 49, 82, 83, 86, 87, 91, 92, 96], "shape": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 55, 56, 57, 58, 62, 64, 65, 67, 68, 76, 77, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98], "size": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 37, 38, 41, 43, 44, 45, 46, 47, 49, 54, 55, 56, 57, 58, 62, 64, 65, 67, 68, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98], "3": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 23, 25, 26, 38, 41, 43, 44, 45, 46, 47, 49, 50, 55, 56, 58, 62, 64, 67, 68, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98], "4": [0, 3, 4, 7, 8, 10, 11, 12, 16, 20, 22, 23, 26, 38, 43, 44, 46, 49, 50, 55, 56, 58, 62, 64, 67, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 95, 96, 97, 98], "5": [0, 3, 4, 7, 8, 10, 11, 12, 43, 46, 50, 64, 68, 76, 77, 78, 79, 81, 82, 83, 86, 90, 91, 95, 97, 98], "prefix": [0, 4, 6, 7, 8, 10, 11, 12, 36, 37, 40, 70, 84, 94], "tmp": [0, 84], "randn": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 20, 23, 25, 38, 42, 43, 44, 46, 49, 55, 56, 58, 62, 64, 81, 82, 83, 84, 87, 90, 95], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 28, 35, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 64, 67, 71, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98], "attribut": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 40, 44, 45, 46, 47, 49, 54, 65, 75, 82, 87, 91, 94, 97], "indic": [0, 4, 5, 6, 7, 8, 10, 11, 12, 47, 50, 52, 54, 65, 68, 73, 75, 79, 84, 86, 87, 91, 95, 98], "where": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 37, 40, 42, 44, 45, 47, 54, 56, 68, 81, 83, 84, 90, 94, 95, 97], "temporari": [0, 94], "ha": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 44, 46, 67, 72, 81, 83, 84, 87, 90, 92, 93, 95, 96, 97], "It": [0, 3, 4, 7, 8, 10, 11, 12, 23, 42, 44, 47, 49, 68, 71, 75, 79, 82, 95, 97], "crucial": [0, 4, 7, 8, 10, 11, 12, 23], "directori": [0, 4, 6, 7, 8, 10, 11, 12, 40, 82, 84, 94], "everi": [0, 4, 7, 8, 10, 11, 12, 41, 44, 48, 50, 68, 84, 87, 97], "option": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 67, 68, 70, 75, 78, 79, 82, 84, 87, 95], "exist": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 40, 41, 42, 44, 45, 65, 66, 87, 97], "former": [0, 3, 4, 7, 8, 10, 11, 12, 44, 48, 50], "method": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 25, 33, 36, 37, 40, 44, 45, 46, 47, 48, 49, 54, 56, 65, 72, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97], "prefer": [0, 4, 7, 8, 10, 11, 12, 54, 87, 94], "when": [0, 3, 4, 5, 7, 8, 10, 11, 12, 16, 22, 23, 35, 39, 44, 45, 46, 47, 49, 50, 52, 54, 56, 64, 65, 73, 75, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 98], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 23, 25, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 65, 73, 75, 78, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "do": [0, 3, 4, 7, 8, 10, 11, 12, 42, 44, 65, 84, 87, 90, 92, 93], "fit": [0, 4, 7, 8, 10, 11, 12, 83, 84], "suitabl": [0, 84], "extrem": [0, 84], "serv": [0, 4, 7, 8, 10, 11, 12], "common": [0, 4, 7, 8, 10, 11, 12, 41, 54, 83, 87, 90, 92, 97, 98], "could": [0, 4, 7, 8, 10, 11, 12, 44, 84, 87, 90, 92, 93, 95, 98], "would": [0, 3, 4, 7, 8, 10, 11, 12, 16, 42, 44, 82, 83, 87, 94, 95, 98], "singl": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 28, 40, 45, 46, 49, 53, 54, 56, 64, 71, 74, 83, 84, 87, 90, 92, 95, 96, 97], "differ": [0, 3, 4, 7, 8, 10, 11, 12, 20, 23, 38, 46, 49, 62, 82, 83, 84, 87, 90, 92, 94, 97], "much": [0, 3, 4, 7, 8, 10, 11, 12, 25, 83, 91, 92, 93, 97], "faster": [0, 4, 7, 8, 10, 11, 12, 83, 97], "than": [0, 3, 4, 7, 8, 9, 10, 11, 12, 42, 44, 46, 55, 58, 67, 83, 84, 86, 87, 90, 91, 92, 97], "each": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 19, 23, 25, 41, 44, 49, 56, 75, 78, 81, 83, 84, 86, 90, 91, 92, 93, 97, 98], "had": [0, 90, 97], "load": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 37, 83, 85, 86, 87, 88, 89, 91, 94], "independ": [0, 4, 7, 8, 10, 11, 12, 44, 55, 83, 84, 87], "imag": [0, 3, 83, 84, 86, 91, 92, 95], "50000": 0, "480": [0, 83], "mask": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 68, 81, 85, 88, 89], "dtype": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 37, 38, 41, 43, 44, 45, 46, 47, 49, 56, 62, 64, 65, 68, 75, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "bool": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 40, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 60, 62, 63, 64, 65, 68, 70, 71, 72, 73, 75, 79, 82, 90, 92], "label": [0, 84, 86], "uint8": [0, 3, 4, 6, 7, 8, 10, 11, 12, 92], "batch_siz": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 37, 38, 41, 43, 44, 45, 46, 47, 49, 50, 56, 62, 64, 65, 67, 68, 71, 73, 75, 78, 79, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98], "devic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 55, 56, 62, 64, 65, 68, 75, 81, 82, 84, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98], "cpu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 56, 62, 64, 65, 68, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "idx": [0, 3, 4, 7, 8, 10, 11, 12, 92], "5020": 0, "34572": 0, "11200": 0, "clone": [0, 2, 4, 7, 8, 10, 11, 12, 16, 42, 46, 47, 82, 83, 97], "field": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 26, 37, 38, 41, 43, 44, 45, 46, 47, 49, 56, 62, 64, 65, 68, 75, 81, 84, 86, 90, 93, 94, 95, 96, 97, 98], "float32": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 20, 22, 23, 37, 38, 43, 44, 45, 46, 47, 49, 56, 62, 64, 65, 68, 75, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "is_shar": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 37, 38, 41, 43, 44, 45, 46, 47, 49, 56, 62, 64, 65, 68, 75, 81, 82, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98], "fals": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 50, 53, 55, 56, 62, 64, 65, 68, 70, 71, 73, 75, 78, 79, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "notic": [0, 3, 4, 7, 8, 10, 11, 12], "syntax": [0, 3, 93, 98], "sugar": 0, "directli": [0, 2, 4, 7, 8, 10, 11, 12, 16, 44, 46, 84, 86, 87, 91, 92, 93, 95], "need": [0, 3, 4, 7, 8, 10, 11, 12, 16, 23, 42, 44, 48, 50, 54, 81, 82, 83, 84, 86, 87, 90, 91, 92, 95, 97, 98], "consider": 0, "take": [0, 3, 4, 7, 8, 10, 11, 12, 19, 23, 42, 43, 44, 48, 49, 50, 55, 58, 65, 81, 84, 86, 87, 90, 91, 92, 95, 96], "account": [0, 4, 7, 8, 10, 11, 12], "current": [0, 4, 6, 7, 8, 10, 11, 12, 13, 25, 35, 45, 73, 83, 86, 91, 94], "compat": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 19, 28, 38, 47, 62, 74, 75, 81, 82, 87, 98], "autograd": [0, 4, 7, 8, 10, 11, 12, 87], "simpl": [0, 3, 4, 7, 8, 10, 11, 12, 42, 44, 86, 91], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 23, 25, 26, 32, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 56, 58, 62, 64, 65, 67, 68, 71, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98], "script": [0, 71, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "send": [0, 3, 4, 7, 8, 10, 11, 12, 94], "its": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 20, 38, 42, 43, 44, 45, 46, 47, 49, 58, 62, 69, 81, 82, 83, 84, 87, 91, 95, 97], "refer": [0, 2, 4, 7, 8, 10, 11, 12, 23, 78, 83, 85, 87, 92], "worker": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 40, 83, 92], "respons": [0, 4, 7, 8, 10, 11, 12, 42, 95], "updat": [0, 3, 4, 6, 7, 8, 10, 11, 12, 40, 41, 44, 47, 49, 82, 84, 90, 92, 95, 96, 97], "you": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 42, 43, 44, 47, 71, 82, 83, 84, 87, 90, 91, 93, 94, 95, 96, 97, 98], "find": [0, 95], "benchmark": [0, 4, 7, 8, 10, 11, 12, 92, 95], "In": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 23, 42, 44, 45, 46, 49, 54, 56, 73, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "short": [0, 87], "our": [0, 86, 87, 90, 91, 92, 95], "goal": [0, 4, 7, 8, 10, 11, 12, 87, 90], "show": [0, 3, 12, 16, 87, 92], "handl": [0, 2, 3, 4, 7, 8, 10, 11, 12, 73, 81, 86, 87, 90, 91], "write": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 40, 42, 44, 46, 47, 49, 81, 84, 87, 90, 91, 92, 95], "step": [0, 2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 44, 86, 91, 92, 95, 96, 97], "involv": [0, 4, 7, 8, 10, 11, 12], "local": [0, 4, 7, 8, 10, 11, 12], "remot": [0, 4, 5, 7, 8, 10, 11, 12], "execut": [0, 1, 3, 4, 7, 8, 10, 11, 12, 23, 42, 45, 49, 65, 72, 75, 83, 84, 85, 87, 89, 95], "command": [0, 84], "first": [0, 3, 4, 7, 8, 10, 11, 12, 16, 41, 42, 44, 45, 54, 67, 79, 82, 83, 84, 86, 90, 92, 95, 96, 97, 98], "function": [0, 3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 61, 62, 69, 70, 78, 81, 82, 83, 86, 87, 90, 91, 95, 96, 97], "specif": [0, 5, 46, 87], "fill": [0, 4, 5, 7, 8, 10, 11, 12, 67, 96], "def": [0, 1, 3, 4, 7, 8, 10, 11, 12, 23, 25, 42, 44, 46, 47, 49, 51, 54, 65, 71, 75, 81, 82, 84, 86, 87, 90, 91, 92, 95, 96], "fill_tensordict": 0, "memmap": [0, 4, 6, 7, 8, 10, 11, 12, 37, 70, 82, 84, 86, 91, 94], "ones": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 25, 45, 46, 47, 49, 50, 54, 67, 73, 75, 82, 83, 93, 97, 98], "640": 0, "return": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 29, 32, 33, 35, 38, 40, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 64, 65, 66, 67, 68, 71, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98], "fill_tensordict_cp": 0, "cloudpicklewrapp": 0, "ensur": [0, 4, 5, 7, 8, 10, 11, 12, 73, 79, 92], "serializ": [0, 4, 7, 8, 10, 11, 12], "next": [0, 92, 95], "make": [0, 2, 3, 4, 7, 8, 10, 11, 12, 25, 39, 42, 43, 44, 81, 82, 84, 87, 92, 93, 95, 98], "point": [0, 3, 4, 7, 8, 10, 11, 12, 42, 44, 45, 54, 79, 81, 87], "hard": 0, "through": [0, 3, 4, 5, 7, 8, 10, 11, 12, 23, 44, 45, 49, 52, 54, 64, 71, 75, 81, 87, 92, 95, 96], "regular": [0, 3, 4, 7, 8, 10, 11, 12, 42, 44, 45, 46, 49, 81, 83, 84, 87, 90, 92, 95, 97, 98], "tensorpip": 0, "1000": [0, 3, 44], "final": [0, 3, 4, 6, 7, 8, 10, 11, 12, 45, 81, 84, 87, 90], "still": [0, 4, 7, 8, 10, 11, 12, 46, 47, 49, 90, 93, 94, 95], "main": [0, 2, 4, 5, 7, 8, 10, 11, 12, 44, 83, 84, 87, 90, 92], "been": [0, 4, 7, 8, 10, 11, 12, 13, 72, 81, 82, 84, 87, 90, 93, 94, 95, 96], "written": [0, 3, 4, 6, 7, 8, 10, 11, 12, 37, 44, 46, 47, 49, 50, 54, 56, 68, 84, 87, 95, 96], "6": [0, 3, 4, 7, 8, 10, 11, 12, 57, 67, 68, 78, 79, 82, 83, 86, 90, 91, 97, 98], "7": [0, 4, 7, 8, 10, 11, 12, 78, 79, 90, 91], "998": 0, "t0": [0, 86, 87, 91, 92], "time": [0, 3, 4, 7, 8, 10, 11, 12, 23, 42, 75, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "out": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 20, 34, 36, 37, 38, 39, 42, 46, 49, 62, 65, 68, 74, 75, 78, 87, 92, 95], "rpc_sync": 0, "worker_info": 0, "arg": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 42, 43, 44, 45, 46, 47, 48, 49, 50, 65, 87], "print": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 23, 37, 38, 41, 44, 45, 46, 49, 51, 54, 55, 56, 58, 62, 64, 65, 67, 68, 69, 75, 76, 77, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "elaps": 0, "all": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 25, 26, 28, 37, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 58, 65, 67, 68, 73, 75, 79, 82, 83, 84, 85, 87, 88, 90, 93, 94, 95, 96, 97, 98], "although": [0, 2, 4, 7, 8, 10, 11, 12, 44, 48, 50, 75, 87], "entir": [0, 1, 4, 7, 8, 10, 11, 12, 45, 50, 84, 91, 92], "origin": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 23, 25, 44, 47, 49, 81, 83, 84, 87, 90, 93, 94, 97, 98], "snippet": [0, 42], "fast": [0, 4, 7, 8, 10, 11, 12, 42, 84, 94], "even": [0, 3, 4, 7, 8, 10, 11, 12, 45, 46, 67, 82, 90, 92, 97], "so": [0, 2, 4, 6, 7, 8, 10, 11, 12, 40, 45, 46, 49, 67, 84, 86, 91, 92, 93, 95, 97], "locat": [0, 4, 5, 6, 7, 8, 10, 11, 12, 40, 84, 87, 94], "alreadi": [0, 4, 5, 6, 7, 8, 10, 11, 12, 40, 43, 44, 65, 84, 86, 91, 93, 97], "beforehand": 0, "see": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 23, 34, 39, 42, 44, 46, 58, 65, 87, 90, 91, 92, 93, 94, 95, 97], "torchrl": [0, 3, 81], "s": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 23, 25, 40, 43, 44, 46, 49, 65, 69, 75, 81, 84, 86, 87, 90, 91, 92, 97], "replai": 0, "buffer": [0, 4, 6, 7, 8, 10, 11, 12, 22, 42, 46, 49, 55, 83], "learn": [0, 4, 7, 8, 10, 11, 12, 23, 56, 90, 92, 93, 94, 95, 96, 97, 98], "contain": [0, 3, 4, 7, 8, 10, 11, 12, 23, 32, 41, 44, 45, 46, 48, 54, 56, 68, 71, 78, 79, 82, 83, 84, 86, 91, 92, 93, 96, 97], "addit": [0, 3, 4, 7, 8, 10, 11, 12, 25, 45, 46, 56, 81, 83, 92, 97], "configur": [0, 4, 7, 8, 10, 11, 12, 19, 45], "beyond": 0, "purpos": [0, 2, 3, 4, 7, 8, 10, 11, 12, 49, 50, 81, 84, 87], "support": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 37, 42, 45, 46, 47, 49, 82, 84, 87, 90, 92, 94, 97], "creat": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 25, 28, 34, 37, 38, 44, 45, 46, 48, 49, 62, 72, 75, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98], "fx": [1, 87], "graph": [1, 3, 4, 7, 8, 10, 11, 12, 23, 42, 47, 49, 65, 81, 87], "import": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 22, 23, 37, 41, 43, 44, 45, 46, 47, 49, 50, 55, 58, 64, 65, 67, 75, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "symbolic_trac": 1, "tensordict": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 88, 89, 91, 92, 98], "prototyp": [1, 42, 81, 82, 84], "instead": [1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 23, 44, 45, 48, 49, 50, 54, 82, 87, 92, 95, 97], "highli": [1, 2], "experiment": [1, 44, 82], "subject": [1, 82], "chang": [1, 4, 7, 8, 10, 11, 12, 35, 42, 45, 46, 47, 49, 65, 72, 73, 82, 87, 93], "caution": [1, 4, 7, 8, 9, 10, 11, 12, 19, 75], "rais": [1, 4, 5, 6, 7, 8, 10, 11, 12, 19, 40, 44, 45, 46, 71, 73, 78, 79, 84], "issu": [1, 42, 82, 87], "try": [1, 4, 6, 7, 8, 10, 11, 12, 26, 42, 45, 54, 90, 95, 97], "encount": [1, 45, 71], "problem": [1, 3, 81], "ll": [1, 86, 90, 91, 92], "illustr": [1, 84], "overview": [1, 2, 8, 10, 11, 12], "inspect": 1, "gener": [1, 2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 54, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "code": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 42, 49, 65, 72, 81, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98], "nn": [1, 3, 4, 7, 8, 10, 11, 12, 22, 23, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 64, 80, 82, 84, 86, 87, 91, 92, 93, 95], "net": [1, 3, 12, 43, 44, 47, 81, 86, 91, 95], "modul": [1, 2, 3, 4, 7, 8, 10, 11, 12, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 58, 65, 66, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93], "__init__": [1, 3, 12, 47, 81, 86, 91, 92, 95], "self": [1, 3, 4, 6, 7, 8, 10, 11, 12, 45, 46, 47, 51, 54, 65, 75, 81, 82, 86, 87, 91, 92, 95], "super": [1, 3, 12, 81, 86, 91, 92, 95], "linear": [1, 3, 4, 7, 8, 10, 11, 12, 23, 43, 47, 49, 55, 58, 81, 86, 87, 91, 93, 95], "lazylinear": [1, 3], "forward": [1, 3, 12, 44, 45, 46, 47, 48, 49, 50, 54, 65, 67, 81, 86, 87, 91, 92, 95], "x": [1, 3, 4, 7, 8, 10, 11, 12, 19, 23, 26, 42, 45, 46, 47, 49, 50, 75, 81, 82, 83, 84, 86, 87, 90, 91, 92, 95], "logit": [1, 3, 56, 59, 64, 86, 91], "sigmoid": [1, 3, 4, 7, 8, 10, 11, 12], "in_kei": [1, 3, 4, 7, 8, 10, 11, 12, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 65, 81, 87, 95], "input": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 32, 34, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 56, 58, 62, 65, 74, 76, 78, 79, 81, 87, 90, 91], "out_kei": [1, 3, 4, 7, 8, 10, 11, 12, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 65, 81, 87, 95], "output": [1, 3, 4, 7, 8, 10, 11, 12, 19, 23, 42, 44, 45, 46, 47, 49, 50, 51, 54, 56, 65, 79, 81, 82, 95], "probabl": [1, 3, 4, 7, 8, 10, 11, 12, 42, 44, 45, 53, 56, 64, 81, 95], "graph_modul": [1, 87], "user": [1, 3, 4, 7, 8, 10, 11, 12, 42, 65, 81, 82, 84, 87, 95, 97], "placehold": [1, 7, 46], "target": [1, 4, 7, 8, 10, 11, 12, 76, 77, 78, 81, 86, 91, 92], "getitem": [1, 87], "call_funct": 1, "oper": [1, 2, 4, 6, 7, 8, 10, 11, 12, 23, 40, 42, 48, 56, 75, 80, 82, 84, 90, 92, 93, 95, 97], "kwarg": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 59, 62, 65, 87], "call_modul": 1, "none": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 55, 56, 57, 58, 59, 60, 62, 64, 65, 68, 70, 74, 75, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "result": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 22, 23, 40, 45, 49, 51, 54, 56, 82, 83, 84, 90, 92, 96, 97], "same": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 23, 42, 46, 47, 49, 65, 68, 71, 75, 78, 79, 82, 83, 84, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98], "32": [1, 3, 4, 7, 8, 10, 11, 12, 43, 81, 84, 90, 92], "100": [1, 3, 12, 81, 86, 91, 92, 93], "module_out": 1, "tensordict_out": [1, 42, 44, 45, 46, 47, 49, 95], "graph_module_out": 1, "assert": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 23, 25, 26, 37, 42, 46, 47, 50, 54, 55, 58, 73, 75, 79, 82, 83, 84, 90, 93, 95, 96, 97], "also": [1, 3, 4, 6, 7, 8, 10, 11, 12, 20, 23, 37, 38, 44, 45, 46, 47, 49, 54, 62, 64, 65, 75, 78, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98], "case": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 23, 37, 41, 42, 44, 45, 46, 49, 56, 80, 83, 87, 90, 91, 92, 93, 95, 97], "elimin": [1, 87, 92], "intermedi": [1, 3, 4, 7, 8, 10, 11, 12, 45, 47, 49, 81, 87, 95], "demonstr": [1, 86, 91, 92, 96], "sequenti": [1, 3, 4, 7, 8, 10, 11, 12, 43, 45, 47, 49, 81, 86, 91, 92, 93, 95], "input_s": [1, 3, 81], "hidden_s": [1, 3, 81], "50": [1, 3, 4, 7, 8, 10, 11, 12, 78, 79, 81, 90, 93], "output_s": [1, 3, 4, 7, 8, 10, 11, 12, 81], "10": [1, 3, 4, 7, 8, 10, 11, 12, 25, 26, 35, 43, 56, 64, 73, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 93, 94, 96], "fc1": [1, 3, 81], "fc2": [1, 3, 81], "relu": [1, 3, 43, 47, 55, 58, 81, 86, 87, 91, 95], "masker": [1, 3, 81], "softmax": [1, 3, 4, 7, 8, 10, 11, 12, 81], "dim": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 20, 34, 38, 39, 62, 74, 78, 79, 81, 82, 90, 97], "_0_fc1": 1, "getattr": [1, 3, 4, 6, 7, 8, 10, 11, 12, 87], "0": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 22, 23, 26, 28, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 49, 51, 52, 55, 58, 64, 67, 68, 70, 71, 73, 74, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "_0_fc2": 1, "getitem_1": [1, 87], "mul": [1, 4, 7, 8, 10, 11, 12, 87], "bit": [1, 3, 86], "complic": [1, 47, 49], "visual": 1, "follow": [1, 3, 6, 12, 42, 47, 49, 65, 82, 83, 84, 87, 90, 92, 94, 98], "requir": [1, 3, 4, 7, 8, 10, 11, 12, 23, 39, 42, 45, 46, 49, 50, 83, 84, 90, 94, 95, 97], "pydot": 1, "visualis": 1, "graph_draw": 1, "fxgraphdraw": 1, "g": [1, 4, 6, 7, 8, 10, 11, 12, 40, 41, 43, 44, 86, 87, 91, 95], "open": [1, 4, 6, 7, 8, 10, 11, 12, 37, 95], "svg": 1, "wb": [1, 4, 7, 8, 10, 11, 12], "f": [1, 4, 7, 8, 10, 11, 12, 41, 45, 84, 86, 87, 91, 92, 93, 95], "get_dot_graph": 1, "create_svg": 1, "which": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 22, 23, 37, 42, 44, 49, 54, 64, 67, 78, 79, 81, 82, 83, 84, 87, 90, 93, 94, 95, 96, 97, 98], "dictionari": [2, 3, 4, 6, 7, 8, 10, 11, 12, 20, 25, 28, 38, 41, 44, 46, 56, 62, 82, 83, 90, 93], "like": [2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 44, 75, 82, 83, 86, 87, 91, 92, 93, 94, 95, 97], "inherit": [2, 4, 7, 8, 9, 10, 11, 12, 82, 83, 90], "properti": [2, 4, 5, 6, 7, 8, 10, 11, 12, 44, 45, 72], "tensor": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 23, 25, 30, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98], "index": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 75, 82, 83, 85, 88, 89, 90, 94], "cast": [2, 4, 6, 7, 8, 9, 10, 11, 12, 19, 37, 73, 75, 80], "etc": [2, 4, 7, 8, 10, 11, 12, 83, 84, 86, 87, 91], "pypi": 2, "about": [2, 50, 87, 90, 92], "instruct": 2, "dedic": [2, 83, 84, 87, 91, 92], "section": [2, 3], "below": [2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 46, 65, 82, 87, 90, 95, 97], "pip": 2, "base": [2, 3, 4, 7, 8, 9, 10, 11, 12, 44, 45, 46, 47, 49, 81, 82, 86, 87, 91, 92], "readabl": 2, "modular": [2, 49], "abstract": [2, 11], "awai": 2, "tailor": 2, "i": [2, 3, 4, 7, 8, 10, 11, 12, 44, 58, 84, 86, 87, 90, 91, 92, 95, 96], "enumer": [2, 3, 12, 86, 91, 92], "model": [2, 3, 4, 6, 7, 8, 10, 11, 12, 22, 23, 37, 49, 56, 81, 83, 84, 92, 95], "loss": [2, 3, 86, 91], "loss_modul": [2, 3], "backward": [2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 86, 91], "optim": [2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 84], "zero_grad": [2, 3, 4, 7, 8, 10, 11, 12, 23, 42, 86, 91], "With": [2, 3, 4, 7, 8, 10, 11, 12, 23], "level": [2, 3, 4, 7, 8, 10, 11, 12, 19, 25, 93, 95], "recycl": 2, "train": [2, 3, 4, 6, 7, 8, 10, 11, 12, 40, 86, 87, 91, 92], "loop": [2, 3, 4, 6, 7, 8, 10, 11, 12, 40, 86, 91, 92, 96], "heterogen": [2, 4, 7, 8, 10, 11, 12], "task": [2, 3, 90], "individu": [2, 56, 83, 86, 91], "collect": [2, 3, 4, 7, 8, 10, 11, 12, 42, 56, 82, 90, 92, 94], "transform": [2, 4, 7, 8, 10, 11, 12, 25, 46, 50, 52, 72, 81, 84, 86, 91, 92, 95], "predict": [2, 81, 91], "comput": [2, 3, 4, 7, 8, 10, 11, 12, 23, 38, 44, 45, 48, 49, 50, 52, 62, 66, 81, 83, 87, 92, 97], "hand": [2, 84], "impact": [2, 4, 7, 8, 10, 11, 12, 87, 93], "other": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 40, 42, 45, 47, 49, 54, 55, 58, 73, 75, 79, 82, 83, 84, 87, 92, 97], "abov": [2, 12, 84, 92, 94, 96], "across": [2, 3, 4, 7, 8, 10, 11, 12, 54, 83, 90], "classif": 2, "segment": 2, "among": [2, 16], "mani": [2, 3, 4, 7, 8, 10, 11, 12, 19, 75, 82, 83, 87, 90, 98], "releas": [2, 45, 46], "sync": 2, "sure": [2, 3, 4, 7, 8, 10, 11, 12, 42, 82], "alwai": [2, 4, 7, 8, 10, 11, 12, 47, 95, 97], "enjoi": 2, "latest": 2, "featur": [2, 4, 7, 8, 10, 11, 12, 23, 42, 44, 46, 47, 49, 81, 82, 83, 84, 87, 90], "librari": [2, 3, 83, 84, 87], "most": [2, 3, 4, 7, 8, 10, 11, 12, 42, 87, 90], "recent": 2, "version": [2, 3, 4, 7, 8, 9, 10, 11, 12, 23, 35, 42, 69, 73, 87, 95, 97], "core": [2, 84, 87, 92], "guarante": [2, 4, 6, 7, 8, 10, 11, 12, 40, 97, 98], "13": [2, 4, 7, 8, 10, 11, 12, 90], "nightli": 2, "git": 2, "re": [2, 3, 4, 7, 8, 10, 11, 12, 42, 44, 66, 84], "willing": 2, "contribut": [2, 45], "cd": 2, "path": [2, 4, 5, 6, 7, 8, 10, 11, 12, 36, 37, 56, 82, 84, 92, 94], "root": [2, 4, 7, 8, 10, 11, 12, 56, 64, 86, 91, 92, 94, 97], "http": [2, 60, 92], "github": [2, 92], "com": [2, 92], "python": [2, 9, 42, 46, 47, 82, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "setup": 2, "py": [2, 42, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "develop": [2, 3], "manipul": [2, 3, 83, 85, 88, 89, 90, 98], "kei": [2, 3, 4, 6, 7, 8, 10, 11, 12, 16, 25, 28, 38, 41, 42, 44, 45, 46, 47, 49, 50, 51, 54, 56, 62, 65, 68, 78, 79, 81, 83, 84, 85, 86, 88, 89, 90, 96, 97], "pre": [2, 12, 75, 82, 84, 85, 86, 88, 89, 91, 92], "alloc": [2, 4, 6, 7, 8, 10, 11, 12, 82, 84, 85, 88, 89], "memori": [2, 4, 5, 6, 7, 8, 10, 11, 12, 23, 37, 40, 49, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 95], "simplifi": [2, 83, 85, 87, 88, 89, 90], "manag": [2, 4, 7, 8, 10, 11, 12, 35, 65, 71, 73, 80, 85, 86, 87, 88, 89, 91, 95, 97], "build": [2, 4, 5, 7, 8, 10, 11, 12, 25, 44, 45, 50, 81, 82, 85, 87, 88, 89, 95], "stream": [2, 4, 7, 8, 10, 11, 12, 42, 85, 88, 89], "tensordictmodul": [2, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 80, 85, 88, 89], "export": [2, 3, 4, 7, 8, 10, 11, 12, 85, 88, 89, 95], "tensorclass": [2, 4, 6, 7, 8, 10, 11, 12, 19, 32, 49, 80, 85, 88, 89], "motiv": 2, "escap": 2, "non": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 19, 23, 25, 40, 41, 42, 44, 45, 49, 58, 64, 71, 75, 82, 84, 92, 95, 97], "stack": [2, 4, 6, 7, 8, 10, 11, 12, 13, 16, 23, 34, 35, 39, 40, 41, 43, 45, 49, 50, 68, 71, 73, 82, 83, 84, 92], "dimens": [2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 19, 54, 56, 67, 68, 73, 74, 78, 79, 90, 95, 96, 98], "nest": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 25, 37, 38, 40, 41, 49, 54, 56, 62, 64, 68, 75, 82, 84, 90, 97], "lazi": [2, 4, 7, 8, 10, 11, 12, 16, 23, 33, 34, 39, 45, 49, 72, 84, 90, 97], "evalu": [2, 12, 45], "distribut": [2, 3, 4, 7, 8, 10, 11, 12, 44, 45, 49, 64, 80, 83, 87, 92], "set": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 35, 37, 40, 44, 45, 46, 47, 49, 65, 71, 72, 73, 75, 82, 83, 84, 92, 94, 97], "map": [2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 37, 40, 44, 46, 49, 55, 56, 58, 80, 82, 86, 87, 91, 92], "node": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 40, 65, 81], "trace": 2, "tensordictsequenti": [2, 3, 43, 45, 46, 47, 50, 80, 81, 87, 95], "save": [2, 3, 4, 6, 7, 8, 10, 11, 12, 37, 40, 82, 83, 86, 91, 92, 94], "memmori": 2, "memorymappedtensor": [2, 4, 7, 8, 10, 11, 12, 83, 86, 91, 92, 94], "torchsnapshot": 2, "api": [2, 3, 4, 7, 8, 10, 11, 12, 25, 42, 46, 47, 64, 84, 95, 97], "packag": [2, 3, 80, 87], "tensordictbas": [2, 4, 6, 7, 8, 10, 12, 16, 20, 21, 24, 26, 27, 32, 36, 37, 40, 42, 44, 45, 46, 47, 48, 49, 50, 54, 56, 68, 70, 76, 78, 79, 80, 84, 90], "lazystackedtensordict": [2, 3, 7, 8, 10, 11, 12, 16, 23, 80, 84, 90, 97], "persistenttensordict": [2, 4, 7, 10, 11, 12, 80], "tensordictparam": [2, 4, 7, 8, 10, 11, 22, 23, 44, 80], "get_defaults_to_non": [2, 80], "constructor": [2, 4, 7, 8, 10, 11, 12, 44, 45, 49, 54, 75, 80, 87], "handler": [2, 5, 80], "context": [2, 3, 4, 7, 8, 10, 11, 12, 35, 65, 71, 73, 80, 87, 92, 95, 97], "pointwis": [2, 4, 7, 8, 10, 11, 12, 80], "util": [2, 4, 7, 8, 10, 11, 12, 25, 76, 77, 78, 79, 80, 84, 86, 87, 91, 92, 94, 95, 97], "tensordictmodulebas": [2, 42, 45, 49, 65, 80, 95], "probabilistictensordictmodul": [2, 45, 49, 56, 80, 81, 87], "probabilistictensordictsequenti": [2, 44, 49, 56, 80, 81, 95], "tensordictmodulewrapp": [2, 80], "cudagraphmodul": [2, 80], "wrapmodul": [2, 80], "set_composite_lp_aggreg": [2, 53, 56, 80], "composite_lp_aggreg": [2, 44, 56, 64, 80], "as_tensordict_modul": [2, 80], "ensembl": [2, 3, 43, 80], "compil": [2, 4, 7, 8, 10, 11, 12, 14, 42, 74, 80, 87, 95], "serial": [2, 4, 5, 7, 8, 10, 11, 12, 80, 83, 84, 87], "edg": [2, 80, 87], "auto": [2, 4, 7, 8, 10, 11, 12, 19, 80], "search": [2, 45], "page": [2, 3], "easi": [3, 8, 46, 92, 95], "organis": 3, "reusabl": [3, 95], "ve": [3, 90], "spun": 3, "separ": [3, 4, 7, 8, 10, 11, 12, 25, 54, 84, 90, 93, 95], "primarili": 3, "multipl": [3, 4, 5, 7, 8, 9, 10, 11, 12, 45, 56, 81, 82, 83, 84, 87, 92, 96, 97, 98], "mostli": 3, "relat": [3, 47, 91, 92], "design": [3, 4, 7, 8, 10, 11, 12, 25, 42, 90, 95], "serialis": [3, 4, 6, 7, 8, 10, 11, 12, 40], "transmit": 3, "ship": 3, "own": [3, 12, 84, 87], "func": [3, 4, 7, 8, 10, 11, 12, 42, 44, 49, 50, 97], "aim": [3, 4, 7, 8, 10, 11, 12], "paramet": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 28, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 68, 71, 73, 76, 77, 78, 79, 81, 83, 87, 93, 95], "easier": [3, 84], "On": [3, 84], "give": [3, 4, 7, 8, 10, 11, 12, 42, 92], "what": [3, 4, 7, 8, 10, 11, 12, 47, 50, 54, 81, 84, 87, 95, 96], "usabl": 3, "paradigm": 3, "sl": 3, "ssl": 3, "ul": 3, "rl": 3, "tool": [3, 84, 90], "littl": [3, 4, 7, 8, 10, 11, 12, 92], "effort": [3, 86], "multiprocess": [3, 4, 7, 8, 10, 11, 12, 83], "seamlessli": [3, 4, 7, 8, 10, 11, 12], "dispatch": [3, 4, 7, 8, 10, 11, 12, 42, 46, 47, 49, 87, 95], "datapoint": [3, 84], "split": [3, 4, 7, 8, 10, 11, 12, 58, 82, 87], "arang": [3, 4, 7, 8, 10, 11, 12, 90, 92, 97], "rang": [3, 4, 7, 8, 10, 11, 12, 23, 84, 86, 90, 91, 95, 96], "pipe": 3, "tree_map": [3, 4, 7, 8, 10, 11, 12, 25], "too": [3, 4, 5, 7, 8, 10, 11, 12, 38, 42, 47, 49, 62, 84, 90, 95], "greater": [3, 4, 7, 8, 10, 11, 12], "degre": [3, 4, 7, 8, 10, 11, 12], "complex": [3, 4, 7, 8, 10, 11, 12, 81, 84, 90, 92, 95], "td": [3, 4, 6, 7, 8, 10, 11, 12, 16, 25, 26, 37, 38, 41, 42, 44, 45, 46, 47, 49, 50, 62, 67, 73, 78, 79, 81, 82, 83, 84, 90, 95], "11": [3, 4, 7, 8, 10, 11, 12, 78, 81, 85, 89, 90], "b": [3, 4, 6, 7, 8, 10, 11, 12, 16, 19, 20, 37, 38, 43, 46, 47, 49, 54, 60, 62, 67, 68, 81, 83, 84, 91, 93, 94, 96, 97, 98], "regular_dict": 3, "td0": [3, 4, 7, 8, 10, 11, 12, 16, 41, 84], "td1": [3, 4, 7, 8, 10, 11, 12, 16, 41, 83, 84], "td2": [3, 4, 7, 8, 10, 11, 12, 41, 83, 98], "unbind": [3, 4, 5, 6, 7, 8, 10, 11, 12], "similar": [3, 4, 6, 7, 8, 10, 11, 12, 40, 44, 46, 75, 81, 82, 83, 84, 86, 87, 91, 97], "structur": [3, 4, 6, 7, 8, 10, 11, 12, 16, 22, 23, 25, 26, 37, 40, 68, 81, 83, 84, 91, 92, 93, 94, 95, 97, 98], "pytre": [3, 4, 7, 8, 10, 11, 12, 25, 87], "lambda": [3, 4, 7, 8, 10, 11, 12, 41, 42, 45, 46, 47, 49, 50, 86, 87, 90, 91, 95], "regular_dict1": 3, "regular_dict2": 3, "regular_dict3": 3, "compel": 3, "c": [3, 4, 6, 7, 8, 10, 11, 12, 20, 37, 38, 41, 46, 47, 49, 51, 54, 62, 83, 84, 93, 94, 97], "decompos": [3, 54], "three": [3, 84, 87, 95], "similarli": [3, 12, 49, 84, 93], "after": [3, 4, 6, 7, 8, 10, 11, 12, 37, 49, 83, 84, 87, 92, 95, 96, 97], "appli": [3, 4, 7, 8, 10, 11, 12, 19, 44, 51, 83, 90, 92, 97, 98], "quickli": 3, "becom": 3, "significantli": [3, 4, 7, 8, 10, 11, 12], "cumbersom": 3, "work": [3, 4, 7, 8, 10, 11, 12, 16, 20, 38, 47, 49, 54, 62, 81, 82, 83, 84, 90, 92, 93, 97, 98], "naiv": 3, "want": [3, 4, 7, 8, 10, 11, 12, 47, 49, 54, 65, 87, 91, 93, 94, 95, 96, 97, 98], "rather": [3, 4, 7, 8, 10, 11, 12, 42, 84, 86, 87, 91, 92], "unbound": [3, 4, 6, 7, 8, 10, 11, 12], "dict": [3, 4, 6, 7, 8, 10, 11, 12, 20, 22, 23, 25, 38, 41, 44, 46, 49, 56, 62, 82, 84, 90, 93], "To": [3, 4, 7, 8, 10, 11, 12, 43, 44, 45, 65, 67, 82, 84, 87, 90, 93, 94, 95, 97], "instanti": [3, 4, 6, 7, 8, 10, 11, 12, 49, 93, 94], "specifi": [3, 4, 5, 7, 8, 10, 11, 12, 13, 28, 38, 44, 45, 46, 47, 55, 56, 58, 62, 78, 79, 84, 91, 92, 93, 94, 95, 96, 97, 98], "valu": [3, 4, 6, 7, 8, 10, 11, 12, 28, 29, 40, 41, 42, 44, 45, 46, 47, 49, 52, 55, 58, 61, 63, 64, 65, 67, 68, 71, 82, 83, 87, 90, 94, 95, 96], "pair": [3, 4, 6, 7, 8, 10, 11, 12, 44], "well": [3, 12, 44, 79, 86, 90, 91, 92, 95], "lead": [3, 4, 7, 10, 11, 12, 20, 38, 54, 62, 82, 97, 98], "ani": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 28, 32, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 56, 75, 82, 83, 84, 92, 93, 95, 97], "must": [3, 4, 5, 7, 8, 10, 11, 12, 42, 44, 46, 54, 56, 67, 79, 83, 87, 92, 93, 94, 95, 97, 98], "zero": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 37, 46, 47, 49, 52, 54, 65, 68, 73, 75, 76, 77, 83, 84, 92, 93, 96, 98], "retriev": [3, 4, 6, 7, 8, 10, 11, 12, 16, 23, 35, 44, 45, 86, 91, 93], "along": [3, 4, 6, 7, 8, 10, 11, 12, 14, 44, 67, 73, 74, 78, 79, 81, 90, 97, 98], "possibl": [3, 4, 7, 8, 9, 10, 11, 12, 19, 25, 38, 62, 75, 81, 82, 83, 84, 87, 93, 95], "obtain": [3, 7, 45, 75, 84, 87, 92, 93], "congruent": 3, "just": [3, 4, 7, 8, 10, 11, 12, 23, 42, 49, 50, 83, 84, 86, 90, 91, 92, 95, 97], "few": [3, 4, 7, 8, 10, 11, 12, 23, 42, 83, 84, 92], "charact": [3, 4, 7, 8, 10, 11, 12], "nth": 3, "ellipsi": [3, 4, 7, 8, 10, 11, 12, 98], "sub_tensordict": 3, "inplac": [3, 4, 6, 7, 8, 10, 11, 12, 19, 40, 45, 46, 49, 50, 93], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 22, 23, 29, 32, 33, 35, 37, 38, 40, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 62, 63, 64, 65, 68, 71, 73, 75, 78, 79, 81, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97], "set_": [3, 4, 7, 8, 10, 11, 12, 93], "content": [3, 4, 5, 6, 7, 8, 10, 11, 12, 75, 82, 83, 84, 90, 91, 92, 94, 97], "fault": 3, "toler": [3, 4, 7, 8, 10, 11, 12, 57], "latter": [3, 12, 44, 46, 48, 50], "match": [3, 4, 5, 7, 8, 10, 11, 12, 20, 25, 38, 42, 43, 44, 45, 46, 49, 54, 56, 57, 62, 68, 76, 77, 82, 83, 95], "found": [3, 4, 6, 7, 8, 10, 11, 12, 44, 45, 47, 49, 90, 92, 93], "new": [3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 23, 28, 40, 45, 46, 47, 49, 50, 67, 84, 87, 90, 93, 94, 95, 97, 98], "now": [3, 16, 81, 84, 87, 90, 92, 93, 95, 97], "place": [3, 4, 6, 7, 8, 10, 11, 12, 19, 40, 45, 47, 49, 50, 56, 84, 87, 94, 95, 96], "onto": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 40, 55, 58, 84, 94], "particular": [3, 12, 93, 97], "cuda": [3, 4, 7, 8, 10, 11, 12, 42, 86, 91, 92, 94], "reshap": [3, 4, 7, 8, 10, 11, 12, 50, 75, 82], "includ": [3, 4, 7, 8, 10, 11, 12, 25, 72, 82, 83, 87, 93, 95, 97], "squeez": [3, 4, 7, 8, 10, 11, 12, 72, 82, 86, 91, 92], "unsqueez": [3, 4, 7, 8, 10, 11, 12, 72, 75, 92], "view": [3, 4, 7, 8, 10, 11, 12, 72, 84, 92], "permut": [3, 4, 7, 8, 10, 11, 12, 72, 95], "cat": [3, 4, 7, 8, 10, 11, 12, 82, 83, 97], "present": [3, 4, 6, 7, 8, 10, 11, 12, 41, 45, 46, 49, 60, 65, 78, 97], "usual": [3, 4, 7, 8, 10, 11, 12, 45], "solut": [3, 42, 95], "wa": [3, 4, 7, 8, 10, 11, 12, 47, 97], "mai": [3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 40, 42, 44, 45, 47, 49, 56, 75, 82, 84, 87, 90, 95, 97], "desir": [3, 4, 7, 8, 10, 11, 12, 23, 44, 71, 77, 82, 87, 94], "enforc": [3, 4, 7, 8, 10, 11, 12, 75, 82], "consist": [3, 4, 12, 79, 83, 97], "dure": [3, 4, 7, 8, 10, 11, 12, 42, 45, 47, 72, 86, 87, 92, 93, 96], "wrap": [3, 12, 42, 43, 44, 45, 46, 47, 48, 50, 54, 73, 81, 87, 95], "unbatchedtensor": 3, "ignor": [3, 4, 7, 8, 10, 11, 12, 23, 44, 45, 48, 50, 53, 56, 65, 81, 83], "flexibl": [3, 9, 19, 64, 75, 81, 84, 92, 95], "arbitrari": [3, 4, 7, 8, 10, 11, 12, 84, 95], "reshaped_td": 3, "power": [3, 4, 7, 8, 10, 11, 12, 83, 90, 95], "guid": 3, "nontensordata": [3, 4, 7, 8, 9, 10, 11, 12, 19, 25, 71, 73, 84], "string": [3, 4, 7, 8, 9, 10, 11, 12, 42, 46, 47, 49, 54, 68, 87, 93], "As": [3, 82, 84, 87, 90, 91, 92, 95, 96, 97, 98], "get": [3, 4, 6, 7, 8, 10, 11, 12, 13, 22, 23, 29, 37, 44, 46, 47, 49, 67, 81, 82, 87, 90, 92, 95, 96, 97], "wherea": [3, 4, 7, 8, 10, 11, 12, 19], "assum": [3, 4, 5, 7, 8, 10, 11, 12, 42, 49, 54, 78, 92], "element": [3, 4, 6, 7, 8, 10, 11, 12, 16, 42, 44, 46, 54, 73, 78, 79, 83, 90, 97], "assign": [3, 4, 6, 7, 8, 10, 11, 12, 35, 73, 75, 82, 95, 96], "list": [3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 25, 28, 35, 41, 42, 44, 45, 47, 49, 50, 51, 54, 65, 68, 73, 81, 82, 90, 97], "nontensorstack": [3, 6, 71], "third": 3, "contrast": [3, 4, 7, 8, 10, 11, 12, 84], "tell": 3, "happen": [3, 42, 95], "ident": [3, 4, 6, 7, 8, 10, 11, 12, 23, 25, 40, 42, 46, 71, 82, 86, 91], "produc": [3, 4, 5, 7, 8, 10, 11, 12, 44, 45, 59, 90], "otherwis": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 32, 35, 40, 42, 44, 45, 46, 47, 50, 54, 78, 79, 84], "lazy_stack": [3, 4, 7, 8, 10, 11, 12, 23, 90, 97], "exclusive_field": [3, 4, 7, 8, 10, 11, 12, 16, 23, 90, 97], "stack_dim": [3, 4, 7, 8, 10, 11, 12, 16, 23, 71, 90, 97], "given": [3, 4, 5, 7, 8, 10, 11, 12, 14, 16, 44, 45, 46, 49, 69, 74, 90, 93, 95, 98], "construct": [3, 4, 5, 7, 8, 10, 11, 12, 44, 45, 56, 83, 90, 95], "refin": [3, 4, 7, 8, 10, 11, 12], "later": [3, 4, 7, 8, 10, 11, 12, 44, 82, 84, 86, 87, 92, 95], "semant": [3, 4, 7, 8, 10, 11, 12, 82], "refine_nam": [3, 4, 7, 8, 10, 11, 12], "z": [3, 4, 7, 8, 11, 12, 45, 46, 47, 49, 75], "y": [3, 4, 7, 8, 10, 11, 12, 23, 42, 45, 46, 47, 49, 50, 75, 82, 83, 84, 86, 91, 95], "renam": [3, 4, 6, 7, 8, 10, 11, 12, 40], "m": [3, 4, 7, 8, 10, 11, 12, 44], "n": [3, 4, 7, 8, 10, 11, 12, 23, 44, 86, 91, 93, 96, 97], "h": [3, 4, 7, 8, 10, 11, 12, 41, 92], "themselv": [3, 93], "convert": [3, 4, 6, 7, 8, 9, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 49, 51, 73, 75, 84, 92, 94, 97], "rand": [3, 42, 56, 64, 81, 84, 93, 94, 96, 97], "28": [3, 4, 7, 8, 10, 11, 12, 86, 90, 91], "randint": [3, 4, 7, 8, 10, 11, 12, 25, 81, 82, 84, 92, 97], "tupl": [3, 4, 6, 7, 8, 10, 11, 12, 25, 27, 45, 46, 47, 49, 54, 55, 68, 93, 97, 98], "altern": [3, 4, 6, 7, 8, 10, 11, 12, 16, 37, 38, 62, 94], "defer": 3, "until": [3, 4, 7, 8, 10, 11, 12, 71, 90, 92, 97], "item": [3, 4, 7, 8, 9, 10, 11, 12, 19, 75, 82, 84, 86, 91, 93, 97], "immedi": [3, 12], "perform": [3, 4, 7, 8, 10, 11, 12, 23, 44, 48, 50, 56, 65, 82, 86, 92, 93, 95, 97], "lazili": [3, 4, 7, 8, 10, 11, 12, 23, 97], "lot": 3, "unnecessari": 3, "calcul": [3, 4, 7, 8, 10, 11, 12], "should": [3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 23, 35, 37, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 56, 66, 69, 71, 79, 83, 87, 90, 92, 93, 94], "_": [3, 4, 7, 8, 10, 11, 12, 23, 44, 46, 49, 54, 64, 65, 87, 90, 95], "stacked_a": 3, "zeros_lik": [3, 4, 5, 7, 8, 10, 11, 12], "caveat": 3, "expens": [3, 4, 7, 8, 10, 11, 12, 92, 97], "repeat": [3, 4, 7, 8, 10, 11, 12, 43, 86, 92, 95], "caus": [3, 4, 7, 8, 9, 10, 11, 12, 19, 75, 95], "overhead": [3, 4, 7, 8, 10, 11, 12, 42, 84, 87, 91, 92, 95], "avoid": [3, 4, 7, 8, 10, 11, 12, 45, 46, 82, 92, 95], "contigu": [3, 4, 7, 8, 10, 11, 12, 68, 83, 86, 90, 91, 92, 94, 97], "further": 3, "mitig": 3, "come": [3, 4, 7, 8, 10, 11, 12, 81, 90, 92, 95], "meta": [3, 4, 6, 7, 8, 10, 11, 12, 23, 37, 82, 83, 84, 94], "metatensor": 3, "keep": [3, 4, 7, 8, 10, 11, 12, 23, 25, 87, 95], "track": [3, 4, 7, 8, 10, 11, 12, 25, 45, 49], "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 25, 28, 32, 35, 38, 44, 45, 47, 49, 51, 56, 62, 75, 78, 79, 82, 84, 86, 87, 90, 91, 92], "entri": [3, 4, 6, 7, 8, 10, 11, 12, 16, 40, 41, 47, 49, 50, 56, 65, 66, 68, 78, 82, 84, 87, 93, 94, 95, 97, 98], "suppos": [3, 96], "foo": [3, 9], "someth": [3, 12], "automat": [3, 4, 7, 8, 9, 10, 11, 12, 16, 19, 35, 38, 44, 54, 62, 73], "subsequ": [3, 10, 12, 49, 96], "iter": [3, 4, 7, 8, 10, 11, 12, 28, 38, 45, 46, 49, 62, 86, 90, 92, 96], "integr": [3, 12, 95], "callabl": [3, 4, 7, 8, 10, 11, 12, 41, 42, 43, 44, 45, 46, 49, 50, 51, 87, 90], "accept": [3, 4, 5, 6, 7, 8, 10, 11, 12, 25, 87, 93, 95, 97], "underli": [3, 45, 90], "reason": [3, 12, 82], "high": [3, 4, 6, 7, 8, 10, 11, 12, 40], "facilit": 3, "adopt": [3, 4, 7, 8, 10, 11, 12], "previou": [3, 43, 45, 68, 84, 95], "box": [3, 75], "tutori": [3, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "pain": [3, 81], "inabl": [3, 81], "solv": [3, 81], "sequenc": [3, 4, 7, 8, 10, 11, 12, 16, 23, 38, 41, 45, 47, 49, 54, 57, 62, 67, 68, 77, 81, 95], "know": [3, 4, 7, 8, 10, 11, 12, 81, 84, 87, 95], "mean": [3, 4, 6, 7, 8, 10, 11, 12, 23, 40, 42, 44, 45, 81, 84, 87, 92, 95, 97], "predecessor": [3, 81], "necessari": [3, 4, 7, 8, 10, 11, 12, 49, 54, 81, 84, 90], "intermediate_x": 3, "second": [3, 4, 7, 8, 10, 11, 12, 43, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "combin": [3, 54, 84, 87, 92], "under": [3, 56, 84, 92, 93, 95, 96], "bunch": [3, 83, 97], "ask": [3, 4, 7, 8, 10, 11, 12, 87], "sub": [3, 4, 7, 8, 10, 11, 12, 45, 49, 54, 72, 81, 84, 87], "select_subsequ": [3, 49, 81], "onli": [3, 4, 5, 7, 8, 10, 11, 12, 16, 42, 44, 45, 46, 47, 49, 54, 65, 67, 79, 82, 83, 84, 87, 92, 93, 97], "indispens": 3, "satisfi": 3, "those": [3, 4, 7, 8, 9, 10, 11, 12, 16, 44, 45, 49, 56, 83, 94, 97, 98], "vmap": [3, 4, 7, 8, 10, 11, 12, 23, 44, 49], "capabl": [3, 82, 84], "t": [4, 5, 6, 7, 8, 9, 10, 11, 12, 37, 40, 41, 46, 65, 67, 68, 72, 75, 82, 84, 86, 91, 92], "int": [4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27, 38, 40, 42, 43, 44, 46, 55, 57, 62, 67, 68, 70, 75, 77, 78, 79, 90, 92], "hook_out": 4, "hook_in": 4, "str": [4, 5, 6, 7, 8, 10, 11, 12, 36, 37, 38, 40, 41, 44, 46, 49, 54, 55, 58, 62, 65, 68, 69, 70, 75, 82, 84], "stack_dim_nam": [4, 7], "strict_shap": [4, 7], "togeth": [4, 41, 43, 54, 56, 68, 92, 95], "default": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 22, 23, 28, 29, 35, 37, 38, 40, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 68, 71, 73, 75, 78, 79, 83, 87, 93, 94, 95, 96], "behaviour": [4, 5, 7, 8, 10, 11, 12, 45, 47, 49, 64, 65, 72, 82, 84, 97], "them": [4, 7, 8, 10, 11, 12, 16, 42, 44, 45, 48, 49, 50, 68, 82, 83, 87, 90, 92, 95, 97], "affect": [4, 7, 8, 10, 11, 12, 45, 49], "ndimens": [4, 7, 8, 10, 11, 12], "befor": [4, 7, 8, 10, 11, 12, 42, 72, 83, 92, 93, 95, 97], "td_stack": [4, 16], "tolist": [4, 6, 7, 8, 10, 11, 12], "length": [4, 7, 8, 10, 11, 12, 46, 78, 98], "whether": [4, 5, 7, 8, 10, 11, 12, 23, 35, 42, 43, 53, 55, 64, 66, 71], "as_nested_tensor": [4, 7], "as_padded_tensor": [4, 7], "as_list": [4, 7], "argument": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 23, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 54, 55, 56, 62, 75, 83, 84, 87, 93, 94, 95, 97], "control": [4, 7, 8, 10, 11, 12, 42, 46, 49, 56, 64, 71, 73, 84, 94, 97], "mismatch": [4, 7, 8, 10, 11, 12], "pad": [4, 7, 8, 10, 11, 12, 68], "occur": [4, 7, 8, 10, 11, 12, 47, 49], "regardless": [4, 7, 8, 10, 11, 12], "ab": [4, 7, 8, 10, 11, 12], "absolut": [4, 7, 8, 10, 11, 12, 57], "abs_": [4, 7, 8, 10, 11, 12], "aco": [4, 7, 8, 10, 11, 12], "acos_": [4, 7, 8, 10, 11, 12], "add": [4, 7, 8, 10, 11, 12, 55, 83, 87, 92, 93, 95], "alpha": [4, 7, 8, 10, 11, 12], "float": [4, 5, 7, 8, 10, 11, 12, 25, 52, 55, 57, 61, 67, 68, 86, 90, 91], "scale": [4, 7, 8, 10, 11, 12, 44, 45, 49, 55, 56, 58, 60, 64, 81, 87, 92, 95], "text": [4, 7, 8, 10, 11, 12, 84], "_i": [4, 7, 8, 10, 11, 12], "keyword": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 23, 38, 40, 41, 42, 44, 45, 46, 49, 50, 54, 55, 56, 62, 75, 83, 87, 93, 94, 95], "number": [4, 6, 7, 8, 10, 11, 12, 40, 42, 43, 44, 46, 54, 55, 57, 58, 60, 67, 68, 86, 87, 91, 92, 93, 95, 97], "multipli": [4, 7, 8, 10, 11, 12, 83], "exclus": [4, 7, 8, 10, 11, 12, 16, 23, 65, 75, 83], "exactli": [4, 7, 8, 10, 11, 12, 42, 48, 83, 87, 97], "intersect": [4, 7, 8, 10, 11, 12, 83], "consid": [4, 7, 8, 10, 11, 12, 45, 46, 49, 57, 82, 83, 90, 92, 95, 97], "miss": [4, 7, 8, 10, 11, 12, 45, 46, 49, 84], "both": [4, 5, 7, 8, 10, 11, 12, 75, 78, 83, 87, 90, 92, 95, 96], "side": [4, 7, 8, 10, 11, 12, 83, 95], "add_": [4, 7, 8, 10, 11, 12], "doe": [4, 6, 7, 8, 10, 11, 12, 44, 45, 49, 50, 65, 81, 82, 83, 84, 93, 95], "addcdiv": [4, 7, 8, 10, 11, 12], "other1": [4, 7, 8, 10, 11, 12], "other2": [4, 7, 8, 10, 11, 12], "wise": [4, 7, 8, 10, 11, 12, 83], "divis": [4, 7, 8, 10, 11, 12, 83], "scalar": [4, 7, 8, 10, 11, 12, 52], "frac": [4, 7, 8, 10, 11, 12], "tensor1": [4, 7, 8, 10, 11, 12, 78, 79], "tensor2": [4, 7, 8, 10, 11, 12, 78, 79], "broadcast": [4, 7, 8, 10, 11, 12], "floattensor": [4, 7, 8, 10, 11, 12], "doubletensor": [4, 7, 8, 10, 11, 12], "real": [4, 7, 8, 10, 11, 12, 44, 69, 87, 90], "integ": [4, 5, 7, 8, 9, 10, 11, 12, 90], "numer": [4, 7, 8, 10, 11, 12], "denomin": [4, 7, 8, 10, 11, 12], "addcdiv_": [4, 7, 8, 10, 11, 12], "addcmul": [4, 7, 8, 10, 11, 12], "addcmul_": [4, 7, 8, 10, 11, 12], "null": [4, 7, 8, 10, 11, 12], "boolean": [4, 7, 8, 9, 10, 11, 12, 78, 82], "upon": [4, 7, 8, 10, 11, 12], "amax": [4, 7, 8, 10, 11, 12], "no_default": [4, 7, 8, 10, 11, 12], "_nodefault": [4, 7, 8, 10, 11, 12], "keepdim": [4, 7, 8, 10, 11, 12], "reduc": [4, 7, 8, 10, 11, 12, 47, 95], "maximum": [4, 7, 8, 10, 11, 12, 38, 54, 62], "max": [4, 7, 8, 10, 11, 12], "return_indic": [4, 7, 8, 10, 11, 12, 79], "amin": [4, 7, 8, 10, 11, 12], "minimum": [4, 7, 8, 10, 11, 12, 52, 55, 58], "min": [4, 7, 8, 10, 11, 12], "append": [4, 7, 8, 10, 11, 12, 90], "analog": [4, 7], "noth": [4, 7], "fn": [4, 7, 8, 10, 11, 12, 58], "filter_empti": [4, 7, 8, 10, 11, 12], "propagate_lock": [4, 7, 8, 10, 11, 12], "call_on_nest": [4, 7, 8, 10, 11, 12], "constructor_kwarg": [4, 7, 8, 10, 11, 12], "signatur": [4, 7, 8, 10, 11, 12, 45, 46, 47, 49, 65, 95], "union": [4, 5, 7, 8, 10, 11, 12, 16, 32, 38, 41, 42, 51, 55, 57, 62, 68, 82, 84], "receiv": [4, 7, 8, 10, 11, 12, 42, 90], "unnam": [4, 7, 8, 10, 11, 12, 54], "modifi": [4, 7, 8, 10, 11, 12, 19, 26, 44, 45, 47, 49, 50, 56, 75, 83, 84, 86, 87, 91, 95], "made": [4, 7, 8, 10, 11, 12, 95], "keyerror": [4, 7, 8, 10, 11, 12], "filter": [4, 7, 8, 10, 11, 12, 87, 95], "lower": [4, 7, 8, 10, 11, 12, 87], "cost": [4, 7, 8, 9, 10, 11, 12, 19, 75], "won": [4, 6, 7, 8, 10, 11, 12, 37, 65, 72, 84], "destroi": [4, 7, 8, 10, 11, 12], "leaf": [4, 7, 8, 10, 11, 12, 44, 56, 79], "therebi": [4, 7, 8, 10, 11, 12], "kept": [4, 7, 8, 10, 11, 12], "left": [4, 7, 8, 10, 11, 12, 83, 97], "untouch": [4, 7, 8, 10, 11, 12, 23, 97], "lock": [4, 6, 7, 8, 10, 11, 12, 22, 23, 40, 75, 83, 92], "scenario": [4, 7, 8, 10, 11, 12, 90], "propag": [4, 7, 8, 10, 11, 12, 49, 72], "fine": [4, 7, 8, 10, 11, 12, 46, 49], "grain": [4, 7, 8, 10, 11, 12, 46, 49], "leav": [4, 6, 7, 8, 10, 11, 12, 23, 25, 40, 54, 56, 65, 82, 95], "care": [4, 7, 8, 10, 11, 12, 44, 48, 50, 65], "mean_tensor_onli": [4, 7, 8, 10, 11, 12], "val": [4, 7, 8, 10, 11, 12, 71, 92], "is_tensor_collect": [4, 7, 8, 10, 11, 12], "runtimeerror": [4, 7, 8, 10, 11, 12, 45], "unexpect": [4, 7, 8, 10, 11, 12, 47, 49], "td_mean": [4, 7, 8, 10, 11, 12], "mean_ani": [4, 7, 8, 10, 11, 12], "recurs": [4, 7, 8, 10, 11, 12, 47, 93], "equal": [4, 7, 8, 10, 11, 12, 67, 82, 90], "silent": [4, 7, 8, 10, 11, 12, 42, 44, 48, 50], "wrong": [4, 7, 8, 10, 11, 12, 42], "right": [4, 7, 8, 10, 11, 12, 42, 75, 76, 77, 83, 95], "transformed_in": [4, 7, 8, 10, 11, 12], "td_1": [4, 7, 8, 10, 11, 12], "td_2": [4, 7, 8, 10, 11, 12], "int64": [4, 6, 7, 8, 10, 11, 12, 19, 41, 56, 81, 82, 86, 90, 91, 92], "apply_": [4, 7, 8, 10, 11, 12], "copi": [4, 5, 6, 7, 8, 10, 11, 12, 22, 40, 43, 45, 81, 84, 94], "asin": [4, 7, 8, 10, 11, 12], "asin_": [4, 7, 8, 10, 11, 12], "atan": [4, 7, 8, 10, 11, 12], "atan_": [4, 7, 8, 10, 11, 12], "auto_batch_size_": [4, 7, 8, 10, 11, 12], "batch_dim": [4, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 97, 98], "up": [4, 7, 8, 9, 10, 11, 12, 19, 65, 75, 83, 84, 86, 90, 93, 95], "long": [4, 7, 8, 10, 11, 12, 20, 38, 47, 49, 62, 83, 92, 98], "auto_device_": [4, 7, 8, 10, 11, 12], "uniqu": [4, 7, 8, 10, 11, 12, 71, 79], "edit": [4, 7, 8, 10, 11, 12], "describ": [4, 6, 7, 8, 10, 11, 12], "correspond": [4, 6, 7, 8, 10, 11, 12, 40, 44, 46, 56, 83, 84, 87, 93, 97, 98], "repes": [4, 7, 8, 10, 11, 12], "relev": [4, 7, 8, 10, 11, 12, 49], "video": [4, 7, 8, 10, 11, 12], "w": [4, 7, 8, 10, 11, 12, 49, 92], "channel": [4, 7, 8, 10, 11, 12], "spacial": [4, 7, 8, 10, 11, 12], "initi": [4, 6, 7, 8, 10, 11, 12, 43, 55, 82], "ie": [4, 7, 8, 10, 11, 12, 45, 46, 47, 49, 72, 84, 97], "infer": [4, 7, 8, 10, 11, 12, 44, 87], "dynam": [4, 7, 8, 10, 11, 12, 42, 47, 72, 95], "reset": [4, 7, 8, 10, 11, 12, 47, 49, 82, 83], "bfloat16": [4, 7, 8, 10, 11, 12], "bitwise_and": [4, 7, 8, 10, 11, 12], "bitwis": [4, 7, 8, 10, 11, 12], "AND": [4, 7, 8, 10, 11, 12, 45, 49], "land": [4, 7, 8, 10, 11, 12], "byte": [4, 7, 8, 10, 11, 12], "count_dupl": [4, 7, 8, 10, 11, 12], "count": [4, 7, 8, 10, 11, 12], "duplic": [4, 5, 7, 8, 10, 11, 12, 43, 79, 81], "strictli": [4, 7, 8, 10, 11, 12, 82, 95], "discard": [4, 7, 8, 10, 11, 12, 49, 84, 95], "id": [4, 7, 8, 10, 11, 12, 42], "twice": [4, 7, 8, 10, 11, 12, 67, 84], "classmethod": [4, 5, 6, 7, 8, 10, 11, 12, 90, 91, 92], "concaten": [4, 7, 8, 10, 11, 12, 14, 49, 82, 95], "equival": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 37, 41, 54, 55, 74, 93], "cat_from_tensordict": [4, 7, 8, 10, 11, 12], "sort": [4, 7, 8, 10, 11, 12, 42, 54], "nestedkei": [4, 6, 7, 8, 10, 11, 12, 25, 28, 41, 42, 44, 45, 46, 49, 50, 51, 56, 68, 78, 79, 90], "alphabet": [4, 7, 8, 10, 11, 12], "order": [4, 7, 8, 10, 11, 12, 45, 46, 49, 54, 68, 81, 84, 90, 95], "accordingli": [4, 7, 8, 10, 11, 12, 65], "incur": [4, 7, 8, 10, 11, 12, 91, 95], "against": [4, 7, 8, 9, 10, 11, 12, 19, 75, 78, 92], "destin": [4, 6, 7, 8, 10, 11, 12, 68, 84], "cat_tensor": [4, 7, 8, 10, 11, 12], "keep_entri": [4, 7, 8, 10, 11, 12], "remov": [4, 6, 7, 8, 10, 11, 12, 40, 49, 79, 94, 95, 97], "delet": [4, 7, 8, 10, 11, 12, 93, 95], "ceil": [4, 7, 8, 10, 11, 12], "ceil_": [4, 7, 8, 10, 11, 12], "chunk": [4, 5, 7, 8, 10, 11, 12, 84, 87, 90, 95, 97], "24": [4, 7, 8, 10, 11, 12, 90, 91], "8": [4, 7, 8, 10, 11, 12, 44, 46, 49, 68, 78, 79, 81, 86, 90, 91, 92, 95], "9": [4, 7, 8, 10, 11, 12, 26, 45, 46, 56, 71, 78, 79, 82, 86, 90, 91], "16": [4, 7, 8, 10, 11, 12, 90], "17": [4, 7, 8, 10, 11, 12, 90, 91], "18": [4, 7, 8, 10, 11, 12, 90, 91], "19": [4, 7, 8, 10, 11, 12, 90, 91], "clamp": [4, 7, 8, 10, 11, 12, 83], "let": [4, 7, 8, 10, 11, 12, 65, 87, 90, 95, 96], "min_valu": [4, 7, 8, 10, 11, 12], "max_valu": [4, 7, 8, 10, 11, 12], "respect": [4, 7, 8, 10, 11, 12, 19, 65, 92], "y_i": [4, 7, 8, 10, 11, 12], "x_i": [4, 7, 8, 10, 11, 12], "_valu": [4, 7, 8, 10, 11, 12], "bound": [4, 7, 8, 10, 11, 12], "Or": [4, 7, 8, 10, 11, 12], "upper": [4, 7, 8, 10, 11, 12], "clamp_max": [4, 7, 8, 10, 11, 12], "superior": [4, 7, 8, 10, 11, 12], "clamp_max_": [4, 7, 8, 10, 11, 12], "clamp_min": [4, 7, 8, 10, 11, 12, 87], "inferior": [4, 7, 8, 10, 11, 12], "clamp_min_": [4, 7, 8, 10, 11, 12], "clear": [4, 7, 8, 10, 11, 12], "eras": [4, 7, 8, 10, 11, 12], "clear_device_": [4, 7, 8, 10, 11, 12], "clear_refs_for_compile_": [4, 7, 8, 10, 11, 12], "weakref": [4, 7, 8, 10, 11, 12], "region": [4, 7, 8, 10, 11, 12], "safe": [4, 6, 7, 8, 10, 11, 12, 23, 84], "whenev": [4, 7, 8, 10, 11, 12, 45, 47, 49, 65, 97], "hit": [4, 7, 8, 10, 11, 12], "_dynamo": [4, 7, 8, 10, 11, 12], "exc": [4, 7, 8, 10, 11, 12], "unsupport": [4, 7, 8, 10, 11, 12], "reconstruct": [4, 7, 8, 10, 11, 12, 18, 83, 84, 87], "weakrefvari": [4, 7, 8, 10, 11, 12], "subclass": [4, 7, 8, 9, 10, 11, 12, 32, 44, 46, 47, 48, 50, 82, 95], "subtyp": [4, 7, 8, 10, 11, 12, 46, 84], "to_tensordict": [4, 7, 8, 10, 11, 12, 16, 97], "tree": [4, 6, 7, 8, 10, 11, 12, 22, 23, 40, 84, 92], "unlik": [4, 7, 8, 10, 11, 12, 47, 84, 93, 95], "op": [4, 7, 8, 10, 11, 12, 83, 87], "arithmet": [4, 7, 8, 10, 11, 12], "choic": [4, 7, 8, 10, 11, 12, 55, 58, 84, 91, 92], "frequent": [4, 7, 8, 10, 11, 12], "usag": [4, 7, 8, 10, 11, 12, 45, 47, 49, 84, 87, 95], "complex128": [4, 7, 8, 10, 11, 12], "complex32": [4, 7, 8, 10, 11, 12], "complex64": [4, 7, 8, 10, 11, 12], "consolid": [4, 7, 8, 10, 11, 12, 18], "filenam": [4, 5, 7, 8, 10, 11, 12, 18], "num_thread": [4, 6, 7, 8, 10, 11, 12, 40, 70, 84], "non_block": [4, 6, 7, 8, 10, 11, 12, 36, 37], "return_earli": [4, 6, 7, 8, 10, 11, 12, 40, 70], "use_buff": [4, 7, 8, 10, 11, 12], "share_memori": [4, 7, 8, 10, 11, 12], "pin_memori": [4, 7, 8, 10, 11, 12, 87, 92], "metadata": [4, 7, 8, 10, 11, 12, 84, 94], "thread": [4, 6, 7, 8, 10, 11, 12, 40, 84, 90, 92], "copy_": [4, 7, 8, 10, 11, 12], "futur": [4, 6, 7, 8, 10, 11, 12, 35, 40, 42, 45, 73, 82, 97], "last": [4, 7, 8, 10, 11, 12, 44, 45, 95], "distant": [4, 7, 8, 10, 11, 12], "e": [4, 6, 7, 8, 10, 11, 12, 37, 40, 41, 43, 44, 49, 58, 86, 87, 90, 91, 95], "nf": [4, 7, 8, 10, 11, 12], "pin": [4, 7, 8, 10, 11, 12], "alongisd": [4, 7, 8, 10, 11, 12], "effect": [4, 7, 8, 10, 11, 12, 19, 26], "pickl": [4, 7, 8, 10, 11, 12, 82, 84], "unpickl": [4, 7, 8, 10, 11, 12, 84], "isn": [4, 5, 6, 7, 8, 9, 10, 11, 12, 37, 40, 82, 95], "avail": [4, 7, 8, 10, 11, 12, 44, 45, 82, 87], "tempfil": [4, 5, 6, 7, 8, 10, 11, 12, 37, 84], "tqdm": [4, 7, 8, 10, 11, 12, 92], "timer": [4, 7, 8, 10, 11, 12, 95], "data_consolid": [4, 7, 8, 10, 11, 12], "data_ptr": [4, 7, 8, 10, 11, 12], "v": [4, 7, 8, 10, 11, 12, 41], "untyped_storag": [4, 7, 8, 10, 11, 12], "data_c": [4, 7, 8, 10, 11, 12], "numel": [4, 7, 8, 10, 11, 12, 92], "dump": [4, 6, 7, 8, 10, 11, 12, 84], "global": [4, 7, 8, 10, 11, 12, 35, 42, 44, 45, 65, 73, 95], "adaptive_autorang": [4, 7, 8, 10, 11, 12, 95], "shallow": [4, 7, 8, 10, 11, 12], "update_": [4, 7, 8, 10, 11, 12, 82], "block": [4, 7, 8, 10, 11, 12, 42, 81, 95], "copy_at_": [4, 7, 8, 10, 11, 12], "update_at_": [4, 7, 8, 10, 11, 12], "co": [4, 7, 8, 10, 11, 12, 45], "cos_": [4, 7, 8, 10, 11, 12], "cosh": [4, 7, 8, 10, 11, 12], "cosh_": [4, 7, 8, 10, 11, 12], "create_nest": [4, 7, 8, 10, 11, 12], "overwritten": [4, 7, 8, 10, 11, 12, 48, 65, 84, 93, 95], "cummax": [4, 7, 8, 10, 11, 12], "cumul": [4, 7, 8, 10, 11, 12], "reduct": [4, 7, 8, 10, 11, 12], "return_argmin": [4, 7, 8, 10, 11, 12], "idend": [4, 7, 8, 10, 11, 12], "within": [4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 40, 44, 46, 48, 50, 54, 73, 75, 79, 81, 83, 87, 90, 95], "d": [4, 7, 8, 10, 11, 12, 20, 41, 44, 45, 47, 49, 51, 54, 56, 64, 86, 91], "return_typ": [4, 7, 8, 10, 11, 12], "cummin": [4, 7, 8, 10, 11, 12], "displai": [4, 7, 8, 10, 11, 12], "reflect": [4, 7, 8, 10, 11, 12], "del_": [4, 7, 8, 10, 11, 12, 93], "densifi": [4, 7, 8, 10, 11, 12, 90], "layout": [4, 7, 8, 10, 11, 12, 90], "stride": [4, 7, 8, 10, 11, 12, 90], "attempt": [4, 7, 8, 10, 11, 12, 39, 44, 45, 82, 90], "plain": [4, 7, 8, 10, 11, 12, 82], "depth": [4, 7, 8, 10, 11, 12], "detach": [4, 7, 8, 10, 11, 12, 42], "gradient": [4, 7, 8, 10, 11, 12, 86, 87, 91, 95], "detach_": [4, 7, 8, 10, 11, 12], "incl": [4, 7, 8, 11, 12], "live": [4, 7, 8, 11, 12, 84], "appropri": [4, 7, 8, 11, 12, 75], "div": [4, 7, 8, 10, 11, 12], "divid": [4, 7, 8, 10, 11, 12, 95], "promot": [4, 7, 8, 10, 11, 12], "divisor": [4, 7, 8, 10, 11, 12], "div_": [4, 7, 8, 10, 11, 12], "doubl": [4, 7, 8, 10, 11, 12], "copy_exist": [4, 5, 6, 7, 8, 10, 11, 12, 40, 70, 84], "share_non_tensor": [4, 6, 7, 8, 10, 11, 12, 40, 70], "proxi": [4, 6, 7, 8, 10, 11, 12, 36, 70], "reproduc": [4, 7, 8, 10, 11, 12, 69], "entry_class": [4, 7, 8, 10, 11, 12], "isinst": [4, 7, 8, 10, 11, 12, 42, 75, 82, 84, 93, 95, 97], "erf": [4, 7, 8, 10, 11, 12], "erf_": [4, 7, 8, 10, 11, 12], "erfc": [4, 7, 8, 10, 11, 12], "erfc_": [4, 7, 8, 10, 11, 12], "exclud": [4, 7, 8, 10, 11, 12], "modif": [4, 7, 8, 10, 11, 12], "either": [4, 7, 8, 10, 11, 12, 16, 42, 54, 82, 87, 93, 94, 97], "prune": [4, 7, 8, 10, 11, 12], "exp": [4, 7, 8, 10, 11, 12, 55, 58], "exp_": [4, 7, 8, 10, 11, 12], "expand": [4, 6, 7, 8, 10, 11, 12, 16, 23, 43, 44, 49, 76, 77, 84, 92], "accord": [4, 6, 7, 8, 10, 11, 12, 40, 87], "td_expand": [4, 7, 8, 10, 11, 12], "expand_a": [4, 7, 8, 10, 11, 12, 75, 92], "basi": [4, 7, 8, 10, 11, 12], "expm1": [4, 7, 8, 10, 11, 12], "expm1_": [4, 7, 8, 10, 11, 12], "extend": [4, 7, 45, 90], "fill_": [4, 7, 8, 10, 11, 12], "filter_empty_": [4, 7, 8, 10, 11, 12], "filter_non_tensor_data": [4, 7, 8, 10, 11, 12], "flatten": [4, 6, 7, 8, 10, 11, 12, 86, 91], "start_dim": [4, 7, 8, 10, 11, 12, 86, 91], "end_dim": [4, 7, 8, 10, 11, 12, 86, 91], "60": [4, 7, 8, 10, 11, 12, 78, 79, 86, 90, 91], "12": [4, 7, 8, 10, 11, 12, 50, 78, 90, 91, 97], "td_flat": [4, 7, 8, 10, 11, 12], "14": [4, 7, 8, 10, 11, 12, 90, 91], "15": [4, 7, 8, 10, 11, 12, 85, 89, 90, 95], "20": [4, 7, 8, 10, 11, 12, 78, 79, 90], "21": [4, 7, 8, 10, 11, 12, 90, 91], "22": [4, 7, 8, 10, 11, 12, 90, 91], "23": [4, 7, 8, 10, 11, 12, 90], "25": [4, 7, 8, 10, 11, 12, 85, 89, 90, 91, 92], "26": [4, 7, 8, 10, 11, 12, 90, 91, 92], "27": [4, 7, 8, 10, 11, 12, 26, 90], "29": [4, 7, 8, 10, 11, 12, 90, 91], "30": [4, 7, 8, 10, 11, 12, 78, 79, 90], "31": [4, 7, 8, 10, 11, 12, 90], "33": [4, 7, 8, 10, 11, 12, 90], "34": [4, 7, 8, 10, 11, 12, 86, 90, 91], "35": [4, 7, 8, 10, 11, 12, 90], "36": [4, 7, 8, 10, 11, 12, 90], "37": [4, 7, 8, 10, 11, 12, 90], "38": [4, 7, 8, 10, 11, 12, 90, 91], "39": [4, 7, 8, 10, 11, 12, 86, 90], "40": [4, 7, 8, 10, 11, 12, 78, 79, 90], "41": [4, 7, 8, 10, 11, 12, 90], "42": [4, 7, 8, 10, 11, 12, 90, 92], "43": [4, 7, 8, 10, 11, 12, 90], "44": [4, 7, 8, 10, 11, 12, 86, 87, 90, 91], "45": [4, 7, 8, 10, 11, 12, 90, 91], "46": [4, 7, 8, 10, 11, 12, 90], "47": [4, 7, 8, 10, 11, 12, 90], "48": [4, 7, 8, 10, 11, 12, 90], "49": [4, 7, 8, 10, 11, 12, 90], "51": [4, 7, 8, 10, 11, 12, 87, 90], "52": [4, 7, 8, 10, 11, 12, 90, 92], "53": [4, 7, 8, 10, 11, 12, 90], "54": [4, 7, 8, 10, 11, 12, 90, 91], "55": [4, 7, 8, 10, 11, 12, 85, 86, 89, 90], "56": [4, 7, 8, 10, 11, 12, 90, 91], "57": [4, 7, 8, 10, 11, 12, 90], "58": [4, 7, 8, 10, 11, 12, 90, 91], "59": [4, 7, 8, 10, 11, 12, 86, 87, 90], "flatten_kei": [4, 7, 8, 10, 11, 12, 93], "is_leaf": [4, 7, 8, 10, 11, 12], "flat": [4, 7, 8, 10, 11, 12], "lost": [4, 7, 8, 10, 11, 12], "over": [4, 7, 8, 10, 11, 12, 45, 46, 49, 82, 86, 91, 92], "prevent": [4, 5, 7, 8, 10, 11, 12, 84, 92], "mark": [4, 7, 8, 10, 11, 12], "certain": [4, 7, 8, 10, 11, 12], "leaves_onli": [4, 7, 8, 10, 11, 12, 93], "cl": [4, 7, 8, 10, 11, 12, 75, 90, 91, 92], "travers": [4, 7, 8, 10, 11, 12], "include_nest": [4, 7, 8, 10, 11, 12, 93], "word": [4, 7, 8, 10, 11, 12, 42, 54, 84], "children": [4, 7, 8, 10, 11, 12, 47], "practic": [4, 7, 8, 10, 11, 12], "is_leaf_nontensor": [4, 7, 8, 10, 11, 12], "default_is_leaf": [4, 7, 8, 10, 11, 12], "unflatten_kei": [4, 7, 8, 10, 11, 12, 93], "particularli": [4, 7, 8, 10, 11, 12, 22, 23, 93], "state": [4, 7, 8, 10, 11, 12, 22, 23, 46, 55, 84], "mimic": [4, 6, 7, 8, 10, 11, 12, 40, 84, 93, 94], "ddp_model": [4, 7, 8, 10, 11, 12], "ao": [4, 7, 8, 10, 11, 12], "quantiz": [4, 7, 8, 10, 11, 12], "quantwrapp": [4, 7, 8, 10, 11, 12], "state_dict": [4, 6, 7, 8, 10, 11, 12, 84], "bia": [4, 7, 8, 10, 11, 12, 22, 23, 52, 58, 61, 86, 87, 91, 93], "weight": [4, 7, 8, 10, 11, 12, 22, 23, 26, 47, 84, 87, 93], "model_state_dict": [4, 7, 8, 10, 11, 12], "load_state_dict": [4, 6, 7, 8, 10, 11, 12, 84], "float16": [4, 7, 8, 10, 11, 12], "float64": [4, 7, 8, 10, 11, 12], "floor": [4, 7, 8, 10, 11, 12], "floor_": [4, 7, 8, 10, 11, 12], "frac_": [4, 7, 8, 10, 11, 12], "from_ani": [4, 7, 8, 10, 11, 12], "obj": [4, 7, 8, 10, 11, 12, 17, 19, 27, 49, 51, 82], "auto_batch_s": [4, 7, 8, 10, 11, 12, 17, 19, 20, 21, 24, 25, 26, 27, 38, 54, 62], "less": [4, 7, 8, 10, 11, 12, 67], "restrict": [4, 7, 8, 10, 11, 12, 42, 82], "dataclass": [4, 6, 7, 8, 9, 10, 11, 12, 19, 75, 91, 92], "custom": [4, 7, 8, 10, 11, 12, 81, 82, 91, 92], "heurist": [4, 7, 8, 10, 11, 12, 45], "approach": [4, 7, 8, 10, 11, 12, 81, 84, 92], "extra": [4, 7, 8, 10, 11, 12, 54, 83], "opinion": [4, 7, 8, 10, 11, 12], "term": [4, 7, 8, 10, 11, 12], "strategi": [4, 7, 8, 10, 11, 12, 82], "defin": [4, 7, 8, 10, 11, 12, 19, 35, 44, 48, 50, 75, 87, 90, 91, 92, 95], "full": [4, 5, 7, 8, 10, 11, 12, 19, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "represent": [4, 7, 8, 10, 11, 12, 33, 90], "from_dataclass": [4, 7, 8, 10, 11, 12], "namedtupl": [4, 7, 8, 10, 11, 12, 24, 25, 83], "from_namedtupl": [4, 7, 8, 10, 11, 12], "from_dict": [4, 7, 8, 10, 11, 12, 82], "from_tupl": [4, 7, 8, 10, 11, 12], "numpi": [4, 7, 8, 10, 11, 12, 26, 73, 83, 94], "from_struct_arrai": [4, 7, 8, 10, 11, 12], "hdf5": [4, 7, 8, 10, 11, 12, 21], "from_h5": [4, 7, 8, 10, 11, 12], "dest_cl": [4, 7, 8, 10, 11, 12, 19], "as_tensorclass": [4, 7, 8, 10, 11, 12], "determin": [4, 7, 8, 10, 11, 12, 19, 35, 38, 54, 56, 62, 84, 96], "deleg": [4, 7, 8, 10, 11, 12], "convers": [4, 7, 8, 10, 11, 12, 35, 73], "free": [4, 7, 8, 10, 11, 12, 42, 95], "deriv": [4, 7, 8, 10, 11, 12, 19], "unless": [4, 7, 8, 10, 11, 12, 43, 65, 72, 84, 87], "typeerror": [4, 7, 8, 10, 11, 12, 19, 44, 45], "distinct": [4, 7, 8, 10, 11, 12], "while": [4, 7, 8, 10, 11, 12, 23, 42, 44, 45, 48, 50, 82, 84, 90, 92, 94], "input_dict": [4, 7, 8, 10, 11, 12, 20, 38, 62], "sourc": [4, 5, 7, 8, 10, 11, 12, 38, 54, 62, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "exclusinv": [4, 7, 10, 11, 12], "note": [4, 7, 8, 10, 11, 12, 16, 25, 44, 45, 49, 82, 86, 87, 91, 92, 95, 97], "__maximum__": [4, 7, 10, 11, 12], "smaller": [4, 7, 10, 11, 12], "sie": [4, 7, 10, 11, 12, 20, 38, 62], "input_td": [4, 7, 10, 11, 12, 20, 38, 62], "from_dict_inst": [4, 7, 8, 10, 11, 12], "myclass": [4, 7, 8, 10, 11, 12, 32, 49, 51, 82, 84], "to_dict": [4, 7, 8, 10, 11, 12], "mode": [4, 7, 8, 10, 11, 12, 44, 64, 65, 71, 72, 73, 87, 95], "r": [4, 7, 8, 10, 11, 12, 44], "h5": [4, 7, 8, 10, 11, 12, 83], "keword": [4, 7, 10, 11, 12], "key1": [4, 7, 8, 10, 11, 12], "key2": [4, 7, 8, 10, 11, 12], "from_modul": [4, 7, 8, 10, 11, 12, 44, 46, 47, 49, 83, 84], "as_modul": [4, 7, 8, 10, 11, 12, 22, 23], "use_state_dict": [4, 7, 8, 10, 11, 12, 22, 23], "param": [4, 7, 8, 10, 11, 12, 22, 23, 44, 45, 46, 47, 49, 56, 57, 64, 83, 87, 93], "unflatten": [4, 7, 8, 10, 11, 12, 22, 23], "hook": [4, 7, 8, 10, 11, 12, 22, 23, 44, 48, 50, 81], "transformerdecod": [4, 7, 8, 10, 11, 12, 22], "decoder_lay": [4, 7, 8, 10, 11, 12, 22], "transformerdecoderlay": [4, 7, 8, 10, 11, 12, 22], "nhead": [4, 7, 8, 10, 11, 12, 22], "d_model": [4, 7, 8, 10, 11, 12, 22], "num_lay": [4, 7, 8, 10, 11, 12, 22], "layer": [4, 7, 8, 10, 11, 12, 22, 92], "linear1": [4, 7, 8, 10, 11, 12, 22, 95], "2048": [4, 7, 8, 10, 11, 12, 22], "expand_ident": [4, 7, 8, 10, 11, 12, 23], "ensebml": [4, 7, 8, 10, 11, 12, 23], "expect": [4, 7, 8, 9, 10, 11, 12, 19, 23, 43, 47, 49, 54, 65, 75, 79, 87], "applic": [4, 7, 8, 10, 11, 12, 23, 69, 87, 90], "densli": [4, 7, 8, 10, 11, 12, 23], "dens": [4, 7, 8, 10, 11, 12, 16, 23, 39, 97], "There": [4, 7, 8, 10, 11, 12, 23, 84, 95], "reinstanti": [4, 7, 8, 10, 11, 12, 23], "whilst": [4, 7, 8, 10, 11, 12, 23], "tempt": [4, 7, 8, 10, 11, 12, 23], "orign": [4, 7, 8, 10, 11, 12, 23, 42, 47, 49, 84], "rememb": [4, 7, 8, 10, 11, 12, 23, 84], "built": [4, 7, 8, 9, 10, 11, 12, 23, 25, 87, 90, 95], "longer": [4, 7, 8, 10, 11, 12, 23], "reserv": [4, 7, 8, 9, 10, 11, 12, 19, 23, 75], "veri": [4, 7, 8, 10, 11, 12, 23, 82, 86, 87, 91], "being": [4, 7, 8, 10, 11, 12, 23, 42, 46, 54, 56, 64, 65, 82, 84, 87, 94, 97], "manual_se": [4, 7, 8, 10, 11, 12, 23, 45, 49, 64], "empty_modul": [4, 7, 8, 10, 11, 12, 23], "n_model": [4, 7, 8, 10, 11, 12, 23], "exec_modul": [4, 7, 8, 10, 11, 12, 23], "to_modul": [4, 7, 8, 10, 11, 12, 23, 44, 46, 49, 83, 97], "sinc": [4, 7, 8, 9, 10, 11, 12, 19, 23, 44, 48, 50, 54, 75, 81, 84, 86, 87, 91, 92, 97, 98], "backprop": [4, 7, 8, 10, 11, 12, 23], "sum": [4, 7, 8, 10, 11, 12, 23, 56, 64, 86, 91], "grad": [4, 7, 8, 10, 11, 12, 23], "norm": [4, 7, 8, 10, 11, 12, 23, 42], "thing": [4, 7, 8, 10, 11, 12, 23, 65, 93], "slightli": [4, 7, 8, 10, 11, 12, 23, 82, 92], "named_tupl": [4, 7, 8, 10, 11, 12, 24, 25], "a_tensor": [4, 7, 8, 10, 11, 12], "a_str": [4, 7, 8, 10, 11, 12], "nt": [4, 7, 8, 10, 11, 12], "to_namedtupl": [4, 7, 8, 10, 11, 12, 25], "genericdict": [4, 7, 8, 10, 11, 12], "from_pytre": [4, 7, 8, 10, 11, 12], "ad": [4, 7, 8, 10, 11, 12, 25, 92, 93, 95], "biject": [4, 7, 8, 10, 11, 12, 25], "regist": [4, 7, 8, 10, 11, 12, 25, 44, 48, 50, 87, 90], "castabl": [4, 7, 8, 10, 11, 12, 25], "np": [4, 7, 8, 10, 11, 12, 25, 26, 75], "ndarrai": [4, 7, 8, 10, 11, 12, 25, 75], "surject": [4, 7, 8, 10, 11, 12, 25], "back": [4, 7, 8, 10, 11, 12, 25, 39], "recov": [4, 7, 8, 10, 11, 12, 25, 45, 97], "weird": [4, 7, 8, 10, 11, 12, 25], "look": [4, 7, 8, 10, 11, 12, 25, 44, 45, 49, 87, 95], "weirdlookingclass": [4, 7, 8, 10, 11, 12, 25], "weird_kei": [4, 7, 8, 10, 11, 12, 25], "pytree_recon": [4, 7, 8, 10, 11, 12, 25], "to_pytre": [4, 7, 8, 10, 11, 12, 25], "v1": [4, 7, 8, 10, 11, 12, 25], "v2": [4, 7, 8, 10, 11, 12, 25], "_pytre": [4, 7, 8, 10, 11, 12, 25], "from_remote_init": [4, 7, 8, 10, 11, 12], "src": [4, 7, 8, 10, 11, 12], "group": [4, 7, 8, 10, 11, 12, 56, 90], "processgroup": [4, 7, 8, 10, 11, 12], "sent": [4, 7, 8, 10, 11, 12, 94], "init_remot": [4, 7, 8, 10, 11, 12], "asynchron": [4, 6, 7, 8, 10, 11, 12, 37], "actual": [4, 6, 7, 8, 10, 11, 12, 37], "rank": [4, 7, 8, 10, 11, 12], "commun": [4, 7, 8, 10, 11, 12], "struct_arrai": [4, 7, 8, 10, 11, 12, 26], "therefor": [4, 7, 8, 10, 11, 12, 87], "transfer": [4, 7, 8, 10, 11, 12, 44, 92], "rex": [4, 7, 8, 10, 11, 12, 26], "81": [4, 7, 8, 10, 11, 12, 26], "fido": [4, 7, 8, 10, 11, 12, 26], "u10": [4, 7, 8, 10, 11, 12, 26], "ag": [4, 7, 8, 10, 11, 12, 26], "i4": [4, 7, 8, 10, 11, 12, 26], "f4": [4, 7, 8, 10, 11, 12, 26], "x_recon": [4, 7, 8, 10, 11, 12, 26], "to_struct_arrai": [4, 7, 8, 10, 11, 12, 26], "my_tupl": [4, 7, 8, 10, 11, 12], "fromkei": [4, 6, 7, 8, 10, 11, 12, 37], "gather": [4, 7, 8, 10, 11, 12, 42, 90, 92], "axi": [4, 7, 8, 10, 11, 12], "Its": [4, 7, 8, 10, 11, 12, 46, 87], "td_gather": [4, 7, 8, 10, 11, 12], "gather_and_stack": [4, 7, 8, 10, 11, 12], "dst": [4, 7, 8, 10, 11, 12], "variou": [4, 7, 8, 10, 11, 12, 19, 83], "mp": [4, 7, 8, 10, 11, 12], "client": [4, 7, 8, 10, 11, 12], "init_process_group": [4, 7, 8, 10, 11, 12], "gloo": [4, 7, 8, 10, 11, 12], "world_siz": [4, 7, 8, 10, 11, 12], "init_method": [4, 7, 8, 10, 11, 12], "tcp": [4, 7, 8, 10, 11, 12], "localhost": [4, 7, 8, 10, 11, 12], "10003": [4, 7, 8, 10, 11, 12], "server": [4, 7, 8, 10, 11, 12, 87], "yuppi": [4, 7, 8, 10, 11, 12], "__name__": [4, 7, 8, 10, 11, 12, 92], "__main__": [4, 7, 8, 10, 11, 12, 92], "set_start_method": [4, 7, 8, 10, 11, 12], "spawn": [4, 7, 8, 10, 11, 12], "main_work": [4, 7, 8, 10, 11, 12], "secondary_work": [4, 7, 8, 10, 11, 12], "start": [4, 7, 8, 10, 11, 12, 67, 92, 95], "join": [4, 7, 8, 10, 11, 12, 87], "padding_sid": [4, 7], "padding_valu": [4, 7, 68], "chain": [4, 6, 7, 8, 10, 11, 12, 43, 49], "previous": [4, 7, 8, 10, 11, 12, 97], "v0": [4, 7, 8, 10, 11, 12, 45, 46, 56, 71, 81, 82], "behavior": [4, 7, 8, 10, 11, 12, 35, 71, 73, 75], "old": [4, 7, 8, 10, 11, 12, 97], "environ": [4, 7, 8, 10, 11, 12, 35, 64, 71, 82, 87, 92], "variabl": [4, 7, 8, 10, 11, 12, 35, 64, 71, 82, 87, 95], "td_get_defaults_to_non": [4, 7, 8, 10, 11, 12], "set_get_defaults_to_non": [4, 7, 8, 10, 11, 12], "rag": [4, 7, 8, 10, 11, 12, 46], "nestedtensor": [4, 7], "j1": [4, 7], "offset": [4, 7], "get_at": [4, 7, 8, 10, 11, 12], "get_item_shap": [4, 7, 8, 10, 11, 12], "implement": [4, 7, 8, 10, 12, 81, 82, 84, 86, 87, 90, 91, 92], "ineffici": [4, 7, 97], "get_nestedtensor": [4, 7], "cannot": [4, 7, 8, 9, 10, 11, 12, 42, 54, 73, 75, 90, 92], "optiona": [4, 7], "anyth": [4, 7, 65], "els": [4, 7, 8, 10, 11, 12, 42, 65, 86, 91, 92, 93], "b2": [4, 7, 41], "get_non_tensor": [4, 7, 8, 10, 11, 12], "robust": [4, 7, 8, 10, 11, 12], "natur": [4, 7, 8, 10, 11, 12, 64, 84], "scope": [4, 7, 8, 10, 11, 12], "set_non_tensor": [4, 7, 8, 10, 11, 12], "inform": [4, 6, 7, 8, 10, 11, 12, 17, 20, 21, 24, 26, 27, 50, 54, 84, 90], "half": [4, 7, 8, 10, 11, 12], "os": [4, 7, 8, 10, 11, 12, 92], "dist": [4, 7, 8, 10, 11, 12, 44, 45, 56, 64, 87, 95], "queue": [4, 5, 7, 8, 10, 11, 12, 90], "master_addr": [4, 7, 8, 10, 11, 12], "master_port": [4, 7, 8, 10, 11, 12], "29505": [4, 7, 8, 10, 11, 12], "backend": [4, 7, 8, 10, 11, 12], "sampl": [4, 7, 8, 10, 11, 12, 44, 45, 47, 56, 64, 81, 95], "from_tensor": [4, 5, 7, 8, 10, 11, 12], "received_td": [4, 7, 8, 10, 11, 12], "verifi": [4, 7, 8, 10, 11, 12], "signal": [4, 7, 8, 10, 11, 12], "test": [4, 7, 8, 10, 11, 12, 75, 78, 82, 86, 87, 91, 97], "complet": [4, 7, 8, 10, 11, 12, 83, 95], "successfulli": [4, 7, 8, 10, 11, 12, 87], "timeout": [4, 7, 8, 10, 11, 12, 90], "wait": [4, 7, 8, 10, 11, 12, 92], "close": [4, 7, 8, 10, 11, 12], "insert": [4, 7, 8, 10, 11, 12], "int16": [4, 7, 8, 10, 11, 12], "int32": [4, 7, 8, 10, 11, 12], "int8": [4, 7, 8, 10, 11, 12], "irecv": [4, 7, 8, 10, 11, 12], "return_prematur": [4, 7, 8, 10, 11, 12], "init_tag": [4, 7, 8, 10, 11, 12], "pseudo_rand": [4, 7, 8, 10, 11, 12], "isend": [4, 7, 8, 10, 11, 12], "withing": [4, 7, 8, 10, 11, 12], "tag": [4, 7, 8, 10, 11, 12], "pseudo": [4, 7, 8, 10, 11, 12], "random": [4, 7, 8, 10, 11, 12, 44, 87, 92, 96], "overlap": [4, 7, 8, 10, 11, 12], "1e": [4, 7, 8, 10, 11, 12, 55, 57, 58, 86, 91], "sec": [4, 7, 8, 10, 11, 12, 90], "slow": [4, 6, 7, 8, 10, 11, 12, 40], "down": [4, 7, 8, 10, 11, 12], "runtim": [4, 7, 8, 10, 11, 12, 46, 56, 81, 87, 92], "your": [4, 7, 8, 10, 11, 12, 42, 44, 71, 82, 84, 92], "algorithm": [4, 7, 8, 10, 11, 12], "is_consolid": [4, 7, 8, 10, 11, 12], "is_contigu": [4, 7, 8, 10, 11, 12], "is_empti": [4, 7, 8, 10, 11, 12], "__not__": [4, 7, 8, 10, 11, 12, 54], "share_memory_": [4, 7, 8, 10, 11, 12], "eg": [4, 6, 7, 8, 10, 11, 12, 40], "increment": [4, 7, 8, 10, 11, 12, 90], "fut": [4, 7, 8, 10, 11, 12], "isfinit": [4, 7, 8, 10, 11, 12], "finit": [4, 7, 8, 10, 11, 12], "nan": [4, 7, 8, 10, 11, 12], "neg": [4, 7, 8, 10, 11, 12, 93, 97], "infin": [4, 7, 8, 10, 11, 12], "imaginari": [4, 7, 8, 10, 11, 12], "part": [4, 7, 8, 10, 11, 12, 42, 45, 56, 81, 84, 87, 92], "isnan": [4, 7, 8, 10, 11, 12], "isneginf": [4, 7, 8, 10, 11, 12], "isposinf": [4, 7, 8, 10, 11, 12], "isreal": [4, 7, 8, 10, 11, 12], "Be": [4, 7, 8, 10, 11, 12], "mind": [4, 7, 8, 10, 11, 12, 43, 97], "signific": [4, 7, 8, 9, 10, 11, 12, 19, 75, 92], "deal": [4, 7, 8, 10, 11, 12, 46, 87, 90], "larg": [4, 6, 7, 8, 10, 11, 12, 40, 84, 87, 92, 93], "_lazystackedtensordictkeysview": [4, 7], "shoulb": [4, 7, 8, 10, 11, 12], "lerp": [4, 7, 8, 10, 11, 12], "end": [4, 7, 8, 10, 11, 12, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "interpol": [4, 7, 8, 10, 11, 12], "formula": [4, 7, 8, 10, 11, 12], "lerp_": [4, 7, 8, 10, 11, 12], "lgamma": [4, 7, 8, 10, 11, 12], "lgamma_": [4, 7, 8, 10, 11, 12], "pathlib": [4, 6, 7, 8, 10, 11, 12, 36, 37, 92], "load_memmap": [4, 6, 7, 8, 10, 11, 12, 36, 82, 84], "load_": [4, 6, 7, 8, 10, 11, 12], "load_memmap_": [4, 6, 7, 8, 10, 11, 12], "folder": [4, 6, 7, 8, 10, 11, 12, 37], "fetch": [4, 6, 7, 8, 10, 11, 12, 37], "sens": [4, 6, 7, 8, 10, 11, 12, 37, 87], "total": [4, 6, 7, 8, 10, 11, 12, 37, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "synchron": [4, 6, 7, 8, 10, 11, 12, 37], "saved_td": [4, 6, 7, 8, 10, 11, 12, 37], "td_load": [4, 6, 7, 8, 10, 11, 12, 37, 84], "fake": [4, 6, 7, 8, 10, 11, 12, 37], "temporarydirectori": [4, 6, 7, 8, 10, 11, 12, 37, 84], "_subclass": [4, 6, 7, 8, 10, 11, 12, 37], "faketensormod": [4, 6, 7, 8, 10, 11, 12, 37], "faketensor": [4, 6, 7, 8, 10, 11, 12, 37], "info": [4, 7, 8, 10, 11, 12, 87], "ordereddict": [4, 7, 8, 10, 11, 12, 45, 49], "strict": [4, 6, 7, 8, 10, 11, 12, 46, 82, 87], "from_flatten": [4, 6, 7, 8, 10, 11, 12], "format": [4, 7, 8, 10, 11, 12, 68, 82, 84, 90], "preserv": [4, 7, 8, 10, 11, 12, 42, 45, 49, 95], "data_zero": [4, 7, 8, 10, 11, 12], "sd": [4, 7, 8, 10, 11, 12], "lock_": [4, 7, 8, 10, 11, 12, 83, 97], "__setitem__": [4, 7, 8, 10, 11, 12], "rename_key_": [4, 7, 8, 10, 11, 12, 93], "decor": [4, 7, 8, 9, 10, 11, 12, 51, 65, 71, 73, 75, 82, 87], "is_lock": [4, 7, 8, 10, 11, 12, 83], "error": [4, 6, 7, 8, 10, 11, 12, 40, 42, 78, 79, 84, 86, 91], "except": [4, 5, 6, 7, 8, 10, 11, 12, 40, 46, 48, 54, 59, 82, 83, 84, 90, 96], "del": [4, 7, 8, 10, 11, 12, 84, 93], "No": [4, 7, 8, 10, 11, 12, 95], "move": [4, 7, 8, 10, 11, 12, 67, 92, 94], "log": [4, 7, 8, 10, 11, 12, 44, 45, 53, 56, 64, 87, 95], "log10": [4, 7, 8, 10, 11, 12], "log10_": [4, 7, 8, 10, 11, 12], "log1p": [4, 7, 8, 10, 11, 12], "log1p_": [4, 7, 8, 10, 11, 12], "log2": [4, 7, 8, 10, 11, 12], "log2_": [4, 7, 8, 10, 11, 12], "log_": [4, 7, 8, 10, 11, 12], "logical_and": [4, 7, 8, 10, 11, 12], "logic": [4, 7, 8, 10, 11, 12, 87, 91, 92, 95], "logsumexp": [4, 7, 8, 10, 11, 12], "exponenti": [4, 7, 8, 10, 11, 12], "row": [4, 7, 8, 10, 11, 12, 96, 98], "stabil": [4, 7, 8, 10, 11, 12], "len": [4, 7, 8, 10, 11, 12, 67, 86, 90, 91, 92, 97], "fewer": [4, 7, 8, 10, 11, 12], "retain": [4, 7, 8, 10, 11, 12], "make_memmap": [4, 7, 8, 10, 11, 12], "memmap_refresh_": [4, 6, 7, 8, 10, 11, 12], "make_memmap_from_storag": [4, 7, 8, 10, 11, 12], "untypedstorag": [4, 7, 8, 10, 11, 12], "associ": [4, 5, 6, 7, 8, 10, 11, 12, 40, 41, 79, 94], "make_memmap_from_tensor": [4, 7, 8, 10, 11, 12], "copy_data": [4, 5, 7, 8, 10, 11, 12], "replic": [4, 7, 8, 10, 11, 12], "num_work": [4, 7, 8, 10, 11, 12, 92], "chunksiz": [4, 7, 8, 10, 11, 12], "num_chunk": [4, 7, 8, 10, 11, 12], "pool": [4, 7, 8, 10, 11, 12], "max_tasks_per_child": [4, 7, 8, 10, 11, 12], "worker_thread": [4, 7, 8, 10, 11, 12], "index_with_gener": [4, 7, 8, 10, 11, 12], "pbar": [4, 7, 8, 10, 11, 12, 92], "mp_start_method": [4, 7, 8, 10, 11, 12], "callab": [4, 7, 8, 10, 11, 12], "virtual": [4, 7, 8, 10, 11, 12], "tread": [4, 7, 8, 10, 11, 12], "tb": [4, 7, 8, 10, 11, 12], "ndim": [4, 7, 8, 10, 11, 12], "inward": [4, 7, 8, 10, 11, 12], "restack": [4, 7, 8, 10, 11, 12], "equat": [4, 7, 8, 10, 11, 12], "doabl": [4, 7, 8, 10, 11, 12], "job": [4, 7, 8, 10, 11, 12], "seed": [4, 7, 8, 10, 11, 12], "unseed": [4, 7, 8, 10, 11, 12], "taken": [4, 7, 8, 10, 11, 12], "low": [4, 7, 8, 10, 11, 12], "autocorrel": [4, 7, 8, 10, 11, 12], "experi": [4, 7, 8, 10, 11, 12, 92], "These": [4, 7, 8, 10, 11, 12, 49, 72, 83, 84, 96, 97], "NOT": [4, 7, 8, 10, 11, 12, 84], "imposs": [4, 7, 8, 10, 11, 12], "pick": [4, 7, 8, 10, 11, 12], "howev": [4, 7, 8, 10, 11, 12, 45, 82, 83, 84, 90, 93, 94, 95], "uncorrel": [4, 7, 8, 10, 11, 12], "child": [4, 7, 8, 10, 11, 12, 45], "spare": [4, 7, 8, 10, 11, 12], "init": [4, 7, 8, 10, 11, 12], "gain": [4, 7, 8, 10, 11, 12], "progress": [4, 7, 8, 10, 11, 12], "bar": [4, 7, 8, 10, 11, 12, 92], "fork": [4, 7, 8, 10, 11, 12], "process_data": [4, 7, 8, 10, 11, 12], "1_000_000": [4, 6, 7, 8, 10, 11, 12, 83, 84, 95], "map_it": [4, 7, 8, 10, 11, 12], "shuffl": [4, 7, 8, 10, 11, 12], "yield": [4, 7, 8, 10, 11, 12, 84], "dataload": [4, 7, 8, 10, 11, 12, 84, 92], "fashion": [4, 6, 7, 8, 10, 11, 12, 40], "prohibit": [4, 7, 8, 10, 11, 12, 95], "unlock_": [4, 7, 8, 10, 11, 12, 83, 97], "break": [4, 7, 8, 10, 11, 12, 84, 86, 91, 95], "masked_fil": [4, 7, 8, 10, 11, 12, 92], "masked_fill_": [4, 7, 8, 10, 11, 12], "masked_select": [4, 7, 8, 10, 11, 12], "td_mask": [4, 7, 8, 10, 11, 12], "dimensionless": [4, 7, 8, 10, 11, 12], "2942": [4, 7, 8, 10, 11, 12], "maximum_": [4, 7, 8, 10, 11, 12], "maybe_dense_stack": [4, 7, 8, 10, 11, 12], "liter": [4, 7, 8, 10, 11, 12], "permit": [4, 5, 7, 8, 10, 11, 12], "overflow": [4, 7, 8, 10, 11, 12], "0547": [4, 7, 8, 10, 11, 12], "existsok": [4, 5, 6, 7, 8, 10, 11, 12], "correct": [4, 6, 7, 8, 10, 11, 12, 40, 86, 91], "oom": [4, 6, 7, 8, 10, 11, 12, 40], "throw": [4, 6, 7, 8, 10, 11, 12, 40], "onc": [4, 6, 7, 8, 10, 11, 12, 40, 48, 87, 92, 97], "unlock": [4, 6, 7, 8, 10, 11, 12, 40, 83], "turn": [4, 6, 7, 8, 10, 11, 12, 40, 43, 81, 87], "becaus": [4, 6, 7, 8, 9, 10, 11, 12, 40, 42, 82, 83, 84, 86, 87, 91, 92, 96], "cross": [4, 6, 7, 8, 10, 11, 12, 40, 42, 86, 91], "anymor": [4, 6, 7, 8, 10, 11, 12, 40, 84], "tensordictfutur": [4, 6, 7, 8, 10, 11, 12, 40], "might": [4, 6, 7, 8, 10, 11, 12, 40], "deepli": [4, 6, 7, 8, 10, 11, 12, 40], "recommend": [4, 6, 7, 8, 10, 11, 12, 40, 45, 71], "insid": [4, 6, 7, 8, 10, 11, 12, 40, 86, 91, 92], "memmap_lik": [4, 6, 7, 8, 10, 11, 12, 84, 94], "contentless": [4, 6, 7, 8, 10, 11, 12], "64": [4, 6, 7, 8, 10, 11, 12, 84, 86, 90, 91, 92], "refresh": [4, 6, 7, 8, 10, 11, 12], "saved_path": [4, 6, 7, 8, 10, 11, 12], "9953": [4, 7, 8, 10, 11, 12], "minimum_": [4, 7, 8, 10, 11, 12], "subtract": [4, 7, 8, 10, 11, 12, 83], "mul_": [4, 7, 8, 10, 11, 12], "named_appli": [4, 7, 8, 10, 11, 12], "nested_kei": [4, 7, 8, 10, 11, 12], "condit": [4, 7, 8, 10, 11, 12, 45, 49], "atensordict": [4, 7, 8, 10, 11, 12], "name_filt": [4, 7, 8, 10, 11, 12], "nanmean": [4, 7, 8, 10, 11, 12], "nansum": [4, 7, 8, 10, 11, 12], "neg_": [4, 7, 8, 10, 11, 12], "new_empti": [4, 7, 8, 10, 11, 12], "requires_grad": [4, 7, 8, 10, 11, 12], "empty_lazi": [4, 7, 8, 10, 11, 12], "emtpi": [4, 7, 8, 10, 11, 12], "By": [4, 7, 8, 10, 11, 12, 44, 71, 87, 90, 93, 94, 95], "unchang": [4, 7, 8, 10, 11, 12], "record": [4, 7, 8, 10, 11, 12], "new_ful": [4, 7, 8, 10, 11, 12], "fill_valu": [4, 5, 7, 8, 10, 11, 12], "new_on": [4, 7, 8, 10, 11, 12], "new_tensor": [4, 7, 8, 10, 11, 12], "new_zero": [4, 7, 8, 10, 11, 12], "non_tensor_item": [4, 7, 8, 10, 11, 12], "mayb": [4, 7, 8, 10, 11, 12], "least": [4, 7, 8, 10, 11, 12, 45, 82], "expos": [4, 7, 8, 10, 11, 12, 45, 46, 83, 91, 92, 95, 97], "param_count": [4, 7, 8, 10, 11, 12], "dims_list": [4, 7, 8, 10, 11, 12], "permutedtensordict": [4, 7, 8, 10, 11, 12], "threadpoolexecutor": [4, 7, 8, 10, 11, 12], "max_work": [4, 7, 8, 10, 11, 12], "pin_memory_": [4, 7, 8, 10, 11, 12], "pop": [4, 7, 8, 10, 11, 12], "thrown": [4, 5, 7, 8, 10, 11, 12, 82], "popitem": [4, 7, 8, 10, 11, 12], "pow": [4, 7, 8, 10, 11, 12], "expon": [4, 7, 8, 10, 11, 12], "pow_": [4, 7, 8, 10, 11, 12], "prod": [4, 7, 8, 10, 11, 12], "qint32": [4, 7, 8, 10, 11, 12], "qint8": [4, 7, 8, 10, 11, 12], "quint4x2": [4, 7, 8, 10, 11, 12], "quint8": [4, 7, 8, 10, 11, 12], "reciproc": [4, 7, 8, 10, 11, 12], "reciprocal_": [4, 7, 8, 10, 11, 12], "record_stream": [4, 7, 8, 10, 11, 12], "dealloc": [4, 7, 8, 10, 11, 12], "reus": [4, 7, 8, 10, 11, 12], "queu": [4, 7, 8, 10, 11, 12], "recv": [4, 7, 8, 10, 11, 12], "async_op": [4, 7, 8, 10, 11, 12], "machin": [4, 7, 8, 10, 11, 12], "go": [4, 7, 8, 10, 11, 12, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "special": [4, 7, 8, 10, 11, 12, 75, 95], "lift": [4, 7, 8, 10, 11, 12], "coexist": [4, 7, 8, 10, 11, 12], "nice": [4, 7, 8, 10, 11, 12, 90], "awar": [4, 7, 8, 10, 11, 12, 42], "greedili": [4, 7, 8, 10, 11, 12], "tdr": [4, 7, 8, 10, 11, 12], "rename_map": [4, 7, 8, 10, 11, 12], "abcd": [4, 7, 8, 10, 11, 12], "td_renam": [4, 7, 8, 10, 11, 12], "abgd": [4, 7, 8, 10, 11, 12], "rename_": [4, 7, 8, 10, 11, 12], "old_kei": [4, 7, 8, 10, 11, 12], "new_kei": [4, 7, 8, 10, 11, 12], "behav": [4, 7, 8, 10, 11, 12, 48, 59, 97], "tile": [4, 7, 8, 10, 11, 12], "repeat_interleav": [4, 7, 8, 10, 11, 12], "repetit": [4, 7, 8, 10, 11, 12], "replac": [4, 7, 8, 10, 11, 12, 47, 97], "addition": [4, 7, 8, 10, 11, 12, 93], "requires_grad_": [4, 7, 8, 10, 11, 12], "round": [4, 7, 8, 10, 11, 12], "round_": [4, 7, 8, 10, 11, 12], "rsub": [4, 7, 8, 10, 11, 12], "valish": [4, 7, 8, 10, 11, 12], "soon": [4, 7, 8, 10, 11, 12, 90, 97], "select": [4, 7, 8, 10, 11, 12, 33, 47, 49, 81, 84, 90, 98], "depriv": [4, 7, 8, 10, 11, 12], "split_kei": [4, 7, 8, 10, 11, 12], "td_a_c": [4, 7, 8, 10, 11, 12], "host": [4, 7, 8, 10, 11, 12], "yet": [4, 7, 8, 10, 11, 12, 87, 92], "set_at_": [4, 7, 8, 10, 11, 12], "setdefault": [4, 7, 8, 10, 11, 12, 93], "Will": [4, 7, 8, 10, 11, 12], "sigmoid_": [4, 7, 8, 10, 11, 12], "sign": [4, 7, 8, 10, 11, 12], "sign_": [4, 7, 8, 10, 11, 12], "sin": [4, 7, 8, 10, 11, 12], "sin_": [4, 7, 8, 10, 11, 12], "sinh": [4, 7, 8, 10, 11, 12], "sinh_": [4, 7, 8, 10, 11, 12], "sorted_kei": [4, 7, 8, 10, 11, 12], "_nestedkei": [4, 7, 8, 10, 11, 12, 68], "cach": [4, 7, 8, 10, 11, 12, 95], "split_siz": [4, 7, 8, 10, 11, 12], "key_set": [4, 7, 8, 10, 11, 12], "reproduce_struct": [4, 7, 8, 10, 11, 12], "subset": [4, 7, 8, 10, 11, 12, 92, 93, 97], "td_a": [4, 7, 8, 10, 11, 12], "td_bc": [4, 7, 8, 10, 11, 12], "td_d": [4, 7, 8, 10, 11, 12], "sqrt": [4, 7, 8, 10, 11, 12, 83], "squar": [4, 7, 8, 10, 11, 12], "sqrt_": [4, 7, 8, 10, 11, 12], "singleton": [4, 7, 8, 10, 11, 12, 97], "alter": [4, 7, 8, 10, 11, 12], "implicit": [4, 7, 8, 10, 11, 12], "stack_from_tensordict": [4, 7, 8, 10, 11, 12], "stack_tensor": [4, 7, 8, 10, 11, 12], "keep_var": [4, 6, 7, 8, 10, 11, 12, 84], "rebuild": [4, 7, 8, 10, 11, 12, 84, 95], "compos": [4, 7, 8, 10, 11, 12, 90, 92], "__batch_siz": [4, 7, 8, 10, 11, 12], "__devic": [4, 7, 8, 10, 11, 12], "std": [4, 7, 8, 10, 11, 12, 55, 58], "standard": [4, 7, 8, 10, 11, 12, 83, 87], "deviat": [4, 7, 8, 10, 11, 12], "freedom": [4, 7, 8, 10, 11, 12], "bessel": [4, 7, 8, 10, 11, 12], "0006": [4, 7, 8, 10, 11, 12], "sub_": [4, 7, 8, 10, 11, 12], "tan": [4, 7, 8, 10, 11, 12], "tan_": [4, 7, 8, 10, 11, 12], "tanh": [4, 7, 8, 10, 11, 12], "tanh_": [4, 7, 8, 10, 11, 12], "whose": [4, 7, 8, 10, 11, 12, 49, 93, 95, 96, 97, 98], "memory_format": [4, 7, 8, 10, 11, 12, 87], "4d": [4, 7, 8, 10, 11, 12], "undertook": [4, 7, 8, 10, 11, 12], "non_blocking_pin": [4, 7, 8, 10, 11, 12], "slower": [4, 7, 8, 10, 11, 12, 90], "multithread": [4, 7, 8, 10, 11, 12], "benefici": [4, 7, 8, 10, 11, 12], "outweigh": [4, 7, 8, 10, 11, 12], "benefit": [4, 7, 8, 10, 11, 12, 87], "small": [4, 7, 8, 10, 11, 12, 84, 87, 97], "get_num_thread": [4, 7, 8, 10, 11, 12], "cancel": [4, 7, 8, 10, 11, 12, 90], "data_cuda": [4, 7, 8, 10, 11, 12], "data_int": [4, 7, 8, 10, 11, 12], "data_cuda_int": [4, 7, 8, 10, 11, 12], "retain_non": [4, 7, 8, 10, 11, 12], "convert_tensor": [4, 7, 8, 10, 11, 12], "remain": [4, 7, 8, 10, 11, 12, 82, 93, 96], "to_h5": [4, 7, 8, 10, 11, 12], "h5py": [4, 7, 8, 10, 11, 12], "create_dataset": [4, 7, 8, 10, 11, 12], "persitenttensordict": [4, 7, 8, 10, 11, 12], "link": [4, 7, 8, 10, 11, 12], "newli": [4, 7, 8, 10, 11, 12], "timeit": [4, 7, 8, 10, 11, 12], "namedtemporaryfil": [4, 5, 7, 8, 10, 11, 12], "td_h5": [4, 7, 8, 10, 11, 12], "compress": [4, 7, 8, 10, 11, 12], "gzip": [4, 7, 8, 10, 11, 12], "compression_opt": [4, 7, 8, 10, 11, 12], "1000000": [4, 7, 8, 10, 11, 12], "return_swap": [4, 7, 8, 10, 11, 12], "swap_dest": [4, 7, 8, 10, 11, 12], "memo": [4, 7, 8, 10, 11, 12], "temporarili": [4, 7, 8, 10, 11, 12, 45, 83], "swap": [4, 7, 8, 10, 11, 12, 97], "zero_": [4, 7, 8, 10, 11, 12, 83], "rubric": [4, 7, 8, 10, 11, 12, 47, 49], "remak": [4, 7, 8, 10, 11, 12], "repopul": [4, 7, 8, 10, 11, 12], "to_padded_tensor": [4, 7, 8, 10, 11, 12], "mask_kei": [4, 7, 8, 10, 11, 12], "adapt": [4, 7, 8, 10, 11, 12, 97], "valid": [4, 7, 8, 9, 10, 11, 12, 19, 42, 68, 75, 82, 92, 94], "arr": [4, 7, 8, 10, 11, 12], "convert_nod": [4, 8, 10, 11, 12], "inner": [4, 8, 10, 11, 12], "transpos": [4, 7, 8, 10, 11, 12, 72, 97], "dim0": [4, 7, 8, 10, 11, 12], "dim1": [4, 7, 8, 10, 11, 12], "tensordict_transpos": [4, 7, 8, 10, 11, 12], "trunc": [4, 7, 8, 10, 11, 12], "trunc_": [4, 7, 8, 10, 11, 12], "dst_type": [4, 7, 8, 10, 11, 12], "uint16": [4, 7, 8, 10, 11, 12], "uint32": [4, 7, 8, 10, 11, 12], "uint64": [4, 7, 8, 10, 11, 12], "unflattened_s": [4, 7, 8, 10, 11, 12], "td_unflat": [4, 7, 8, 10, 11, 12], "compris": [4, 7, 8, 10, 11, 12], "input_dict_or_td": [4, 7, 8, 10, 11, 12], "keys_to_upd": [4, 7, 8, 10, 11, 12], "update_batch_s": [4, 7, 8, 10, 11, 12], "corrupt": [4, 7, 8, 10, 11, 12], "hope": [4, 7, 8, 10, 11, 12, 90], "catch": [4, 7, 8, 10, 11, 12], "patch": [4, 7, 8, 10, 11, 12], "key_to_upd": [4, 7, 8, 10, 11, 12], "data_dest": [4, 7, 8, 10, 11, 12], "data_src": [4, 7, 8, 10, 11, 12], "lazystacktensordict": [4, 7, 8, 10, 11, 12], "unabl": [4, 7, 8, 10, 11, 12], "ignore_lock": [4, 7, 8, 10, 11, 12], "statu": [4, 7, 8, 10, 11, 12, 29], "dest": [4, 7, 8, 10, 11, 12, 54, 76], "reli": [4, 7, 8, 10, 11, 12, 45, 49, 82, 84, 95, 97], "other_td": [4, 7, 8, 10, 11, 12], "though": [4, 7, 8, 10, 11, 12, 82, 87, 92, 97], "unknown": [4, 7, 8, 10, 11, 12], "valid_kei": [4, 7], "var": [4, 7, 8, 10, 11, 12], "varianc": [4, 7, 8, 10, 11, 12, 55, 58], "td_view": [4, 7, 8, 10, 11, 12], "depend": [4, 7, 8, 10, 11, 12, 42, 44, 45, 49, 65, 87], "booltensor": [4, 7, 8, 10, 11, 12, 98], "nonzero": [4, 7, 8, 10, 11, 12], "set_to_non": [4, 7, 8, 10, 11, 12, 29], "resid": 5, "filepath": 5, "undefin": [5, 12, 82], "memmap_tensor": 5, "memmap_tensor_empti": 5, "empty_lik": 5, "memmap_tensor_zero": 5, "ones_lik": 5, "ok": [5, 95], "overwrit": 5, "empty_nest": 5, "nested_shap": 5, "from_filenam": 5, "nested_tensor": [5, 90], "from_handl": 5, "inadvert": [5, 84], "overrid": [5, 12, 87], "full_lik": 5, "seq": [5, 43, 45, 46, 47, 49, 50, 87], "_metadata": 6, "_is_non_tensor": 6, "from_tensordict": 6, "non_tensordict": 6, "wrapper": [6, 7, 12, 42, 44, 46, 48, 50], "attemptedli": 6, "maybe_to_stack": [6, 7], "setattr": 6, "tent": 6, "thin": 7, "around": [7, 44, 46, 50, 90, 95], "recogniz": 7, "j": 7, "valueerror": [7, 12, 45], "interchang": 7, "extract": [7, 87, 92], "persist": [8, 12, 84], "materi": 8, "reman": 8, "ptd": 8, "recur": [8, 10, 11, 12, 95], "_persistenttdkeysview": 8, "fall": [8, 10, 11, 12, 39], "better": [9, 92], "non_tensor": [9, 82], "frozen": [9, 19, 75], "immut": [9, 19], "autocast": [9, 19, 75], "enabl": [9, 12, 19, 73, 81, 82, 95], "nocast": [9, 19, 75], "disabl": [9, 12, 19, 73, 75, 82], "tensor_onli": [9, 19, 75], "bring": [9, 19, 75], "speed": [9, 19, 75, 83, 84, 92], "interact": [9, 19, 44, 45, 75, 83, 84], "shadow": [9, 19, 75], "unintend": [9, 19, 75], "consequ": [9, 19, 75], "bracket": 9, "anticip": 9, "conflict": [9, 95], "parent": [9, 11, 12, 84], "notabl": 10, "algebra": 10, "expend": 10, "td_unsqueez": 10, "a_view": 10, "td_cpu": 10, "td_or_dict": 10, "old_nam": 10, "new_nam": 10, "tensordict_list": 10, "lsit": 10, "deliv": [10, 97], "fastest": 10, "movement": 10, "creation": 10, "potenti": [10, 12, 79], "td_unqueez": 10, "hasn": 10, "_tensordictkeysview": 10, "no_convert": 12, "exposur": 12, "hold": [12, 86, 91, 92], "seamless": 12, "named_paramet": [12, 93], "compar": [12, 46, 92, 95], "afterward": [12, 44, 48, 50, 95], "p": [12, 45], "custommodul": 12, "add_modul": 12, "submodul": [12, 46, 49], "direct": 12, "member": 12, "xdoctest": 12, "skip": [12, 44, 65], "buf": 12, "20l": 12, "1l": 12, "5l": 12, "__call__": [12, 44, 46, 92], "eval": [12, 86, 91], "dropout": 12, "batchnorm": 12, "comparison": 12, "mechan": 12, "confus": 12, "extra_repr": 12, "line": [12, 84], "multi": [12, 95], "overridden": [12, 44, 48, 50, 56], "recip": [12, 44, 48, 50], "get_buff": 12, "docstr": 12, "get_submodul": 12, "explan": 12, "correctli": [12, 87], "fulli": [12, 87, 92, 95], "qualifi": 12, "referenc": 12, "attributeerror": 12, "invalid": 12, "resolv": [12, 95], "get_extra_st": 12, "set_extra_st": 12, "picklabl": 12, "form": [12, 43, 44, 67], "get_paramet": 12, "sai": 12, "net_b": 12, "net_c": 12, "conv": 12, "conv2d": 12, "kernel_s": 12, "in_featur": [12, 86, 91], "out_featur": [12, 86, 91], "200": 12, "diagram": 12, "named_modul": 12, "o": [12, 92], "transit": 12, "ipu": 12, "network": [12, 46, 81, 87, 95], "l": 12, "mtia": 12, "named_buff": 12, "remove_dupl": 12, "prepend": 12, "running_var": 12, "named_children": 12, "conv4": 12, "conv5": 12, "typic": [12, 45, 46, 47, 84, 90], "register_backward_hook": 12, "removablehandl": 12, "deprec": [12, 56, 64, 97], "favor": [12, 64], "register_full_backward_hook": 12, "register_buff": 12, "running_mean": 12, "alongsid": 12, "num_featur": 12, "register_forward_hook": 12, "with_kwarg": 12, "always_cal": 12, "posit": [12, 55, 58], "fire": 12, "register_module_forward_hook": 12, "register_forward_pre_hook": 12, "invok": [12, 87], "And": [12, 95], "forward_pr": 12, "register_module_forward_pre_hook": 12, "rule": [12, 44, 95], "ordinarili": 12, "grad_input": 12, "grad_output": 12, "technic": 12, "caller": 12, "register_module_full_backward_hook": 12, "register_full_backward_pre_hook": 12, "backward_pr": 12, "register_module_full_backward_pre_hook": 12, "register_get_post_hook": 12, "register_load_state_dict_post_hook": 12, "post": 12, "incompatible_kei": 12, "missing_kei": 12, "unexpected_kei": 12, "register_load_state_dict_pre_hook": 12, "local_metadata": 12, "error_msg": 12, "noqa": [12, 86, 91, 92], "b950": 12, "register_modul": 12, "alia": [12, 15, 31], "register_paramet": 12, "register_state_dict_post_hook": 12, "register_state_dict_pre_hook": 12, "set_submodul": 12, "doesn": 12, "to_empti": 12, "xpu": 12, "allow_non": [13, 33, 35], "captur": [13, 42, 71, 87], "seealso": 13, "set_capture_non_tensor_stack": 13, "_default_is_leaf": 15, "td_list": [16, 84], "obtrain": 16, "infeas": 16, "thu": [16, 45, 49], "assert_allclose_td": 16, "td_lazi": 16, "td_contain": 16, "td_container_clon": 16, "push": 16, "reveal": 16, "x2": 19, "h5_file": 21, "arg0": 30, "_is_leaf_nontensor": 31, "datatyp": 32, "lib": [32, 87], "istanc": 32, "set_list_to_stack": 35, "incompat": [38, 62], "callback_exist": 41, "merg": 41, "callback": 41, "b0": 41, "b1": 41, "warmup": [42, 95], "cudagraph": 42, "friendli": 42, "gpu": [42, 92], "essenti": [42, 92], "meet": 42, "fullfil": 42, "flow": 42, "fail": [42, 54], "fortun": [42, 90], "constant": [42, 67], "loss_val": 42, "loss_fn": [42, 86, 91], "differnti": 42, "differenti": 42, "adam": 42, "lr": [42, 86, 91], "irrespect": 42, "discourag": 42, "pytreeabl": 42, "coupl": 42, "suffici": [42, 84], "treat": [42, 73], "alik": 42, "tip": 42, "debug": [42, 69, 87], "legaci": 42, "hide": 42, "inter": 42, "cudageneratorimpl": 42, "current_se": 42, "recompil": 42, "torch_log": 42, "myscrip": 42, "fix": [42, 91], "enough": [42, 90], "pleas": [42, 87, 97], "struggl": 42, "num_copi": [43, 81], "parameter_init_funct": 43, "expand_input": 43, "cnn": 43, "mlp": [43, 95], "mod": [43, 45, 46, 47, 49, 50, 81, 87], "off": 43, "bork": [43, 47], "dork": [43, 47], "next_modul": 43, "spork": 43, "e0": 43, "e1": 43, "probabilist": [44, 45, 56, 87], "parametr": [44, 58, 87, 95], "embed": [44, 46, 87], "loos": 44, "speak": 44, "default_interaction_typ": [44, 45, 87, 95], "interaction_typ": [44, 45, 95], "get_dist": [44, 45, 95], "median": [44, 95], "rsampl": [44, 56], "suppli": 44, "delta": 44, "determinist": [44, 45, 87], "importantli": 44, "interest": [44, 87], "loc": [44, 45, 49, 55, 56, 58, 60, 64, 81, 87, 92, 95], "normal": [44, 45, 49, 56, 60, 64, 81, 87, 92, 95], "interactiontyp": [44, 87], "randomli": [44, 92], "drawn": 44, "dictat": 44, "probabilistictdmodul": 44, "datacollectorbas": 44, "set_interaction_typ": [44, 87], "paliat": 44, "get_mod": 44, "get_median": 44, "get_mean": 44, "distribution_class": [44, 45, 49, 81, 87, 95], "compositedistribut": [44, 45, 53, 64], "distribution_map": [44, 56, 64], "name_map": [44, 56], "keywork": 44, "distribution_kwarg": [44, 45], "return_log_prob": [44, 49, 81, 95], "log_prob_kei": [44, 56], "log_prob": [44, 45, 56, 64], "sample_key_nam": 44, "_log_prob": [44, 56], "sample_log_prob": [44, 49, 56, 81, 95], "cache_dist": 44, "diverg": 44, "action": [44, 81, 83, 94, 95], "ppo": 44, "n_empirical_estim": 44, "empir": 44, "normalparamextractor": [44, 49, 81, 87, 95], "functional_modul": [44, 49], "make_funct": [44, 49], "hidden": [44, 46, 49, 81, 87, 95], "grucel": [44, 46, 81, 95], "normal_param": [44, 49, 58], "indepnorm": 44, "prob_modul": [44, 81], "td_modul": [44, 46, 48, 49, 81, 95], "td_vmap": [44, 49], "build_dist_from_param": [44, 45], "dist_params_kei": [44, 45], "dist_sample_kei": [44, 45], "_requires_sampl": 44, "return_composit": 45, "interdepend": 45, "termin": [45, 90], "partial_toler": [45, 49], "scan": [45, 49], "prob": [45, 59, 64, 87], "9189": 45, "sample0": 45, "loc2": 45, "sample1": 45, "sample0_log_prob": 45, "sample1_log_prob": 45, "revers": [45, 46, 97], "get_dist_param": 45, "composit": [45, 56], "aggregate_prob": [45, 56], "include_sum": 45, "warn": [45, 53, 71], "explicitli": [45, 71, 84, 95], "space": [46, 87, 92], "nestedstr": 46, "out_to_in_map": 46, "invert": [46, 61], "prevail": 46, "taensordict": 46, "method_kwarg": 46, "get_kwarg": 46, "particularili": 46, "neural": [46, 95], "128": [46, 95], "tgt": 46, "mynet": 46, "my_func": 46, "an_integ": 46, "td_function": 46, "td_state": 46, "character": 47, "convent": 47, "tensordict_in": 47, "properli": 47, "select_out_kei": [47, 49, 87, 95], "static": 47, "is_tdmodule_compat": 47, "reset_out_kei": [47, 49, 87], "reset_parameters_recurs": 47, "old_param": 47, "reset_paramet": 47, "rid": [47, 49, 95], "presenc": [47, 49], "trigger": [47, 49], "out_keys_sourc": [47, 49], "simplest": [47, 49, 95], "revert": [47, 49, 87], "tensordictsequenci": 49, "who": 49, "selected_out_kei": [49, 87, 95], "wish": [49, 90, 95], "clariti": 49, "7214": 49, "8748": 49, "1571": 49, "1138": 49, "grad_fn": [49, 87], "addbackward0": 49, "tensordictsequ": 49, "net1": 49, "module1": 49, "td_module1": 49, "module2": 49, "td_module2": 49, "absent": 49, "pattern": 49, "acord": 49, "idn": 49, "modulelist": 49, "0x126ed1ca0": 49, "0x129efae50": 49, "y0": 49, "y1": 49, "visibl": 50, "my_method": 51, "my_funct": [51, 71], "min_val": [52, 87], "01": [52, 85, 87, 89, 91], "bias": 52, "softplu": [52, 55, 58, 61, 87], "_bia": 52, "shift": 52, "nowarn": 53, "entropi": [53, 56, 64, 86, 91], "aggreg": [53, 56, 64], "mymodul": [54, 65], "keys_in": 54, "keys_out": 54, "dispatch_kwarg": 54, "mymodulenest": 54, "a_c": 54, "sep": 54, "asepc": 54, "oopsi": 54, "scale_shap": 55, "scale_map": [55, 58, 87], "scale_lb": [55, 58, 87], "0001": [55, 58, 87], "make_param": 55, "init_valu": 55, "trainabl": 55, "biased_softplus_1": [55, 58], "num_output": 55, "module_norm": 55, "lstm": [55, 58], "extra_kwarg": 56, "entropy_kei": 56, "log_prob_composit": 56, "entropy_composit": 56, "cdf": 56, "icdf": 56, "tbe": 56, "sample_nam": 56, "_entropi": 56, "plu": [56, 83], "cont": [56, 64], "disc": [56, 64], "categor": [56, 59, 64], "cont_log_prob": [56, 64], "disc_log_prob": [56, 64], "atol": 57, "06": [57, 91], "rtol": 57, "batch_shap": 57, "event_shap": 57, "rel": [57, 86, 91, 97], "outcom": 57, "hot": 59, "excacli": 59, "encod": 59, "discret": [59, 87, 90], "validate_arg": 60, "truncat": 60, "peopl": 60, "sc": 60, "fsu": 60, "edu": 60, "jburkardt": 60, "truncated_norm": 60, "pdf": 60, "invers": 61, "do_softmax": 63, "somewhat": 64, "lp": 64, "0886": 64, "2155": 64, "0414": 64, "8973": 64, "5165": 64, "4402": 64, "2806": 64, "2799": 64, "1733": 64, "0407": 64, "3593": 64, "5763": 64, "in_key_attr": 65, "out_key_attr": 65, "skip_exist": 65, "abl": [65, 82, 84, 87, 90, 92, 97, 98], "fun": 65, "partial": [65, 82, 84], "intend": [65, 69], "outsid": 65, "hello": 65, "ot": 65, "mistakenli": 65, "subgraph": 65, "deactiv": [65, 82], "pad_siz": 67, "padding_left": 67, "padding_right": 67, "padding_top": 67, "padding_bottom": 67, "dim0_left": 67, "dim0_right": 67, "dim1_left": 67, "dim1_right": 67, "padded_td": [67, 68], "list_of_tensordict": 68, "pad_dim": 68, "return_mask": 68, "stack_len": 68, "new_shap": 68, "max_seq_length": 68, "rest": [68, 90], "list_td": 68, "pars": 69, "repr": [69, 82], "capture_non_tensor_stack": 71, "begin": 71, "stackabl": 73, "entiti": 73, "futurewarn": 73, "flag": 73, "list_to_stack": 73, "thie": 75, "mydata": [75, 82], "expand_and_mask": 75, "nestingmydata": 75, "nesting_data": 75, "hint": [75, 82], "help": [75, 82, 90, 92], "td_ref": 78, "in_refer": 78, "expected_in_refer": 78, "assert_clos": [78, 97], "detect": 79, "identifi": 79, "corrspond": 79, "unique_indic": 79, "occurr": 79, "return_index": 79, "output_tensordict": 79, "remove_duplicate_el": 79, "expected_output": 79, "ml": 81, "pipelin": [81, 86, 90, 91, 92, 95], "basic": [81, 90, 92], "512": [81, 86, 91], "necessarili": [81, 95], "suffic": 81, "sub_modul": 81, "summari": 81, "statist": 81, "straightforward": 81, "reiniti": 81, "ensemblemodul": 81, "compon": [81, 87, 92], "reach": 81, "predefin": 82, "__future__": [82, 84], "annot": [82, 84], "floatdata": 82, "intdata": 82, "non_tensordata": 82, "check_nest": 82, "nested_test": 82, "omit": [82, 93], "intern": 82, "test_chang": 82, "nested_test_chang": 82, "data2": 82, "cat_tc": 82, "catted_tc": 82, "json": [82, 84], "deseri": 82, "data_load": 82, "inequ": 82, "discrep": 82, "userwarn": 82, "test_new": 82, "stack_tc": 82, "limit": [82, 87], "__setattr__": 82, "tc": [82, 84], "tc_autocast": 82, "tc_not_autocast": 82, "type0": 82, "type1": 82, "widespread": 82, "drastic": 82, "pack": 83, "situat": [83, 84], "undon": 83, "primit": [83, 87], "handi": 83, "eas": 83, "de": 83, "goe": 83, "pointer": 83, "my_imag": 83, "unint8": 83, "mini_batch": 83, "er": 83, "think": 83, "_foreach_": 83, "fuse": 83, "kernel": 83, "imagin": 84, "mainli": 84, "magnitud": 84, "__faster__": 84, "relianc": 84, "explain": [84, 87, 92], "mmap": 84, "unsaf": 84, "memorybuff": 84, "amort": 84, "io": 84, "launch": 84, "concurr": 84, "appar": 84, "disadvantag": 84, "Not": 84, "fallback": 84, "four": 84, "weights_disk": 84, "dir": 84, "new_weight": 84, "prealloc": 84, "make_datum": 84, "255": [84, 92, 95], "dataset_s": 84, "datum": 84, "data_disk": 84, "date": 84, "system": 84, "releant": 84, "print_directory_tre": 84, "tempdir": 84, "loaded_data": 84, "tmpzy1jcaoq": 84, "_tensordict": 84, "tmpdir_0": 84, "tmpdir_1": 84, "memorymap": 84, "mainten": 84, "discontinu": 84, "checkpoint": 84, "moreov": [84, 90], "buit": 84, "huge": 84, "hundr": 84, "gb": 84, "ram": [84, 92], "don": 84, "advanc": 84, "margin": 84, "tensordict_sourc": 84, "snapshot": 84, "app_stat": 84, "my": 84, "hood": [84, 95], "tensordict_target": 84, "state_target": 84, "restor": 84, "uuid": 84, "uuid4": 84, "tensordict2": 84, "target_st": 84, "price": 84, "pai": 84, "again": [84, 93], "statedict": 84, "my_tensordict_sourc": 84, "implic": 84, "unnot": 84, "td_dest": 84, "saniti": 84, "fairli": 84, "tc_dest": 84, "02": [85, 89], "557": [85, 89], "galleri": [85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "mem": [85, 89], "mb": [85, 89], "tensorclass_fashion": [85, 89, 91], "089": [85, 89, 91], "data_fashion": [85, 86, 89], "00": [85, 89, 91, 92], "612": [85, 86, 89], "tensordict_modul": [85, 89, 95], "537": [85, 89, 95], "streamed_tensordict": [85, 89, 90], "024": [85, 89, 90], "tensorclass_imagenet": [85, 89, 92], "677": [85, 89, 92], "589": [85, 87, 89], "tensordict_kei": [85, 89, 93], "009": [85, 89, 93], "tensordict_shap": [85, 89, 97], "008": [85, 89, 97], "tensordict_sl": [85, 89, 98], "005": [85, 89, 98], "tensordict_memori": [85, 89, 94], "004": [85, 89, 94], "tensordict_prealloc": [85, 89, 96], "003": [85, 89, 96], "download": [86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "transpar": [86, 91, 92], "heavili": [86, 91], "quickstart": [86, 91], "torchvis": [86, 91, 92], "totensor": [86, 91, 92], "is_avail": [86, 91, 92], "conveni": [86, 91, 92, 95], "prepar": [86, 91], "fashionmnist": [86, 91], "cloth": [86, 91], "classifi": [86, 91], "bag": [86, 91, 97], "sneaker": [86, 91], "training_data": [86, 91], "test_data": [86, 91], "repeatedli": [86, 91], "training_data_td": 86, "test_data_td": 86, "Then": 86, "front": 86, "img": 86, "__len__": [86, 91, 92], "__getitem__": [86, 91, 92], "__getitems__": [86, 91, 92], "style": [86, 91, 92], "collat": [86, 91, 92], "collate_fn": [86, 91, 92], "train_dataload": [86, 91, 92], "tor401": [86, 91, 92], "test_dataload": [86, 91], "train_dataloader_td": 86, "test_dataloader_td": 86, "linear_relu_stack": [86, 91], "model_td": 86, "784": [86, 91], "optimis": [86, 91], "stochast": [86, 87, 91], "descent": [86, 91], "crossentropyloss": [86, 91], "sgd": [86, 91], "optimizer_td": 86, "pred": [86, 91], "7f": [86, 91], "5d": [86, 91], "adjust": [86, 91], "unpack": [86, 87, 91], "explicit": [86, 91], "train_td": 86, "num_batch": [86, 91], "test_loss": [86, 91], "no_grad": [86, 91], "argmax": [86, 91], "accuraci": [86, 91], "1f": [86, 91], "avg": [86, 91], "8f": [86, 91], "test_td": 86, "epoch": [86, 91, 92], "4f": [86, 91, 92, 95], "299719": 86, "60000": [86, 91], "295373": 86, "6400": [86, 91], "272304": 86, "12800": [86, 91], "272530": 86, "19200": [86, 91], "261528": 86, "25600": [86, 91], "217155": 86, "32000": [86, 91], "239025": 86, "38400": [86, 91], "197154": 86, "44800": [86, 91], "197310": 86, "51200": [86, 91], "165023": 86, "57600": [86, 91], "162802": 86, "175837": 86, "170277": 86, "112450": 86, "128605": 86, "087597": 86, "014842": 86, "056339": 86, "977005": 86, "979528": 86, "904275": 86, "909955": 86, "951172": 86, "920845": 86, "805578": 86, "836827": 86, "737272": 86, "676109": 86, "704942": 86, "605942": 86, "623260": 86, "506854": 86, "62": [86, 90, 91], "532800": 86, "610272": 86, "570049": 86, "415040": 86, "480039": 86, "359619": 86, "348674": 86, "371897": 86, "294638": 86, "324571": 86, "218349": 86, "63": [86, 90, 91], "249983": 86, "336896": 86, "316431": 86, "142234": 86, "248526": 86, "116688": 86, "137683": 86, "171820": 86, "105771": 86, "140042": 86, "054882": 86, "65": [86, 90, 91], "079532": 86, "8981": 86, "298538": 86, "292487": 86, "278024": 86, "274675": 86, "262193": 86, "231361": 86, "243119": 86, "208253": 86, "200929": 86, "182152": 86, "175252": 86, "171468": 86, "175585": 86, "125751": 86, "143922": 86, "103860": 86, "038962": 86, "066899": 86, "991935": 86, "993730": 86, "932532": 86, "932919": 86, "947459": 86, "937130": 86, "830749": 86, "866055": 86, "772575": 86, "703799": 86, "722561": 86, "624129": 86, "644171": 86, "537968": 86, "562789": 86, "613666": 86, "594425": 86, "448275": 86, "516795": 86, "407467": 86, "376780": 86, "395809": 86, "317354": 86, "354848": 86, "247021": 86, "280824": 86, "346207": 86, "342786": 86, "177366": 86, "283682": 86, "163037": 86, "164616": 86, "194206": 86, "127613": 86, "172300": 86, "077557": 86, "105322": 86, "3773": 86, "minut": [86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "jupyt": [86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "notebook": [86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "ipynb": [86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "zip": [86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "sphinx": [86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "author": [87, 90, 93, 94, 95, 96, 97, 98], "vincent": [87, 90, 95], "moen": [87, 90, 95], "often": [87, 90, 95], "isol": [87, 95], "hardwar": 87, "robot": 87, "drone": 87, "altogeth": 87, "onnx": 87, "stochstic": 87, "ai": 87, "distribt": 87, "latent": 87, "distrbut": 87, "relubackward0": 87, "1071": 87, "3256": 87, "2007": 87, "0027": 87, "addmmbackward0": 87, "splitbackward0": 87, "8786": 87, "0017": 87, "clampminbackward0": 87, "quit": 87, "annoi": 87, "wast": 87, "exportedprogram": 87, "explor": [87, 90], "graph_signatur": 87, "focu": 87, "clearer": 87, "model_export": 87, "graphmodul": 87, "fx_pytre": 87, "tree_flatten_spec": 87, "_in_spec": 87, "module_0_module_weight": 87, "module_0_module_bia": 87, "module_2_module_weight": 87, "module_2_module_bia": 87, "aten": 87, "linear_1": 87, "5254586935043335": 87, "add_1": 87, "broadcast_tensor": 87, "getitem_2": 87, "getitem_3": 87, "tree_unflatten": 87, "_out_spec": 87, "print_read": 87, "tdmodul": 87, "1e6": 87, "2f": 87, "micro": 87, "536": 87, "689": 87, "p_l__args___0_module_0_module_weight": 87, "f32": 87, "p_l__args___0_module_0_module_bia": 87, "p_l__args___0_module_2_module_weight": 87, "p_l__args___0_module_2_module_bia": 87, "1154": 87, "_call_modul": 87, "continu": [87, 90], "85": [87, 91], "71": 87, "86": 87, "env": 87, "python3": 87, "site": 87, "broadcast_al": 87, "regualar": 87, "underscor": 87, "model_nest": 87, "model_nested_export": 87, "some_kei": 87, "pure": 87, "protocol": 87, "convention": 87, "pt2": 87, "extens": 87, "recal": 87, "argu": 87, "neglig": 87, "induc": 87, "unwant": [87, 95], "module_filt": 87, "discuss": [87, 98], "address": 87, "enum": 87, "domain": 87, "recap": 87, "respond": 87, "normal_": 87, "add_2": 87, "deploy": 87, "aotinductor": 87, "tutorials_python": 88, "tutorials_jupyt": 88, "world": 90, "vari": 90, "frequenc": 90, "sensor": 90, "iot": 90, "financi": 90, "transact": 90, "social": 90, "media": [90, 92], "analyz": 90, "bucket": 90, "incom": 90, "analysi": 90, "challeng": 90, "interv": 90, "life": 90, "upcom": 90, "rectangular": 90, "bucket0": 90, "stream0": 90, "stream1": 90, "bucket1": 90, "principl": [90, 92], "data_select": 90, "data_plus_1": 90, "data_appli": 90, "data_cont": 90, "switch": [90, 95], "concret": 90, "asyncio": 90, "async": 90, "generate_numb": 90, "await": 90, "sleep": 90, "collect_data": 90, "stop": 90, "wait_for": 90, "nonloc": 90, "create_task": 90, "timeouterror": 90, "wait7hz": 90, "generate_task": 90, "collect_data_task": 90, "streamedtensordict": 90, "from_stream": 90, "values_task": 90, "hz": 90, "7hz": 90, "70": [90, 91], "3hz": 90, "_nested_tensor_s": 90, "61": 90, "66": 90, "67": 90, "68": 90, "seen": [90, 95], "leverag": 90, "scalabl": 90, "demand": [90, 97], "thank": [90, 95], "4m": 91, "5k": 91, "362kb": 91, "229k": 91, "681kb": 91, "852k": 91, "39mb": 91, "93m": 91, "05": 91, "13mb": 91, "36m": 91, "6mb": 91, "96m": 91, "3mb": 91, "8m": 91, "1mb": 91, "6m": 91, "4mb": 91, "99": 91, "2m": 91, "2mb": 91, "323kb": 91, "42m": 91, "682kb": 91, "918k": 91, "51mb": 91, "09mb": 91, "15k": 91, "good": [91, 92], "encapsul": [91, 92], "from_dataset": [91, 92], "fashionmnistdata": 91, "training_data_tc": 91, "test_data_tc": 91, "train_dataloader_tc": [91, 92], "test_dataloader_tc": 91, "model_tc": 91, "optimizer_tc": 91, "train_tc": 91, "test_tc": 91, "301535": 91, "291144": 91, "278786": 91, "268821": 91, "255953": 91, "230237": 91, "229506": 91, "204714": 91, "196430": 91, "166445": 91, "160534": 91, "166820": 91, "160174": 91, "104609": 91, "113399": 91, "076253": 91, "014200": 91, "043714": 91, "967847": 91, "970762": 91, "899795": 91, "895324": 91, "927360": 91, "902924": 91, "783426": 91, "817229": 91, "725484": 91, "668114": 91, "699623": 91, "594439": 91, "626673": 91, "521321": 91, "531892": 91, "594410": 91, "562290": 91, "412750": 91, "483513": 91, "371324": 91, "357997": 91, "385976": 91, "298505": 91, "341596": 91, "241810": 91, "263689": 91, "333285": 91, "315572": 91, "156789": 91, "261127": 91, "136705": 91, "157288": 91, "190434": 91, "115766": 91, "159819": 91, "077784": 91, "095925": 91, "9765": 91, "300054": 91, "286093": 91, "267923": 91, "263073": 91, "249231": 91, "227231": 91, "233563": 91, "198271": 91, "200405": 91, "168826": 91, "157646": 91, "169926": 91, "099612": 91, "115587": 91, "064109": 91, "013886": 91, "042104": 91, "960806": 91, "975545": 91, "900614": 91, "890332": 91, "926023": 91, "896985": 91, "775033": 91, "815603": 91, "702626": 91, "659972": 91, "684778": 91, "579486": 91, "611939": 91, "504616": 91, "514445": 91, "582325": 91, "552355": 91, "395554": 91, "467331": 91, "343144": 91, "347393": 91, "360427": 91, "283386": 91, "319786": 91, "218598": 91, "242560": 91, "317015": 91, "308168": 91, "136228": 91, "243475": 91, "115338": 91, "149024": 91, "166769": 91, "105900": 91, "143466": 91, "056800": 91, "079254": 91, "5060": 91, "idea": 92, "raw": 92, "10x": 92, "speedup": 92, "imagenet": [92, 94], "subdirectori": 92, "strtobool": 92, "overfit": 92, "train_transform": 92, "randomresizedcrop": 92, "224": 92, "randomhorizontalflip": 92, "485": [92, 95], "456": 92, "406": 92, "229": 92, "225": 92, "val_transform": 92, "resiz": 92, "256": [92, 95], "centercrop": 92, "imagefold": 92, "data_dir": 92, "hymenoptera_data": 92, "train_data": 92, "val_data": 92, "train_data_raw": 92, "piltotensor": 92, "vector": 92, "invaffin": 92, "crop": 92, "flip": 92, "randomhflip": 92, "bernoulli_": 92, "randomcrop": 92, "index0": 92, "index1": 92, "collate_transform": 92, "known": 92, "apriori": 92, "imagenetdata": 92, "dl": 92, "_batch": 92, "train_data_tc": 92, "val_data_tc": 92, "helper": 92, "parallel": 92, "But": 92, "val_dataload": 92, "val_dataloader_tc": 92, "measur": 92, "rate": 92, "fp": 92, "bigger": 92, "improv": 92, "aw": 92, "ec2": 92, "a100": 92, "png": 92, "alt": 92, "chart": 92, "henc": [92, 94], "__": 92, "blob": 92, "244": 92, "241": 92, "40it": 92, "726": 92, "16it": 92, "153": 92, "187": 92, "42it": 92, "393": 92, "65it": 92, "329": 92, "68it": 92, "870": 92, "3468": 92, "2528": 92, "1393": 92, "6312": 92, "1579": 92, "540": 92, "4756": 92, "2387": 92, "21551": 92, "2314": 92, "0060": 92, "tom": [93, 94, 96, 97, 98], "beglei": [93, 94, 96, 97, 98], "accomplish": 93, "request": 93, "banana": 93, "statement": 93, "chosen": 93, "furthermor": 93, "nested_tensordict": 93, "double_nest": 93, "double_nested_a": 93, "nested_a": 93, "top": 93, "conjunct": [93, 97], "lookup": 93, "flattened_tensordict": 93, "meth": 93, "clear_devic": 94, "slowli": 94, "mm_tensordict": 94, "pt": 94, "nicola": 95, "dufour": 95, "exemplifi": 95, "introduc": 95, "unwat": 95, "programat": 95, "programmat": 95, "architectur": 95, "resnet": 95, "tini": 95, "perceptron": 95, "presum": 95, "feed": 95, "linear0": 95, "incorpor": 95, "convolut": 95, "vision": 95, "forward_hook": 95, "activ": 95, "relu0": 95, "fly": 95, "block0": 95, "relu1": 95, "linear2": 95, "block1": 95, "residu": 95, "flesh": 95, "genuin": 95, "concern": 95, "accumul": 95, "anywai": 95, "garbag": 95, "collector": 95, "opportun": 95, "deconstruct": 95, "greatli": 95, "residualblock": 95, "block_notd": 95, "block_tdm": 95, "block_td": 95, "tdm": 95, "block_notd_c": 95, "block_tdm_c": 95, "block_tds_c": 95, "214": 95, "1101": 95, "274": 95, "9882": 95, "6236": 95, "293": 95, "2475": 95, "367": 95, "8310": 95, "384": 95, "0915": 95, "onverhead": 95, "disappear": 95, "fact": 95, "workspac": 95, "freed": 95, "preced": 95, "wire": 95, "extractor": 95, "oblivi": 95, "manner": 95, "neat": 95, "make_tensordict": 96, "perhap": 96, "initialis": 96, "prepopul": 96, "random_tensordict": 96, "agre": [97, 98], "indexed_tensordict": 97, "reshaped_tensordict": 97, "interpret": 97, "throughout": 97, "conceptu": 97, "carri": 97, "proper": 97, "cloned_tensordict": 97, "stacked_tensordict": 97, "set_lazy_legaci": 97, "dense_stack": 97, "concatenated_tensordict": 97, "exp_tensordict": 97, "squeezed_tensordict": 97, "unsqueezed_tensordict": 97, "were": 97, "lazy_unsqueez": 97, "dense_unsqueez": 97, "bear": 97, "ever": 97, "unaffect": 97, "drop": [97, 98], "_viewedtensordict": 97, "viewed_tensordict": 97, "permuted_tensordict": 97, "quick": 97, "tdt": 97, "gathered_tensordict": 97, "5910": 97, "5230": 97, "3651": 97, "2051": 97, "8454": 97, "1610": 97, "6796": 97, "9072": 97, "2445": 97, "7081": 97, "7938": 97, "6863": 97, "simultan": 98, "new_tensordict": 98}, "objects": {"tensordict": [[4, 0, 1, "", "LazyStackedTensorDict"], [5, 0, 1, "", "MemoryMappedTensor"], [6, 0, 1, "", "NonTensorData"], [7, 0, 1, "", "NonTensorStack"], [8, 0, 1, "", "PersistentTensorDict"], [9, 0, 1, "", "TensorClass"], [10, 0, 1, "", "TensorDict"], [11, 0, 1, "", "TensorDictBase"], [12, 0, 1, "", "TensorDictParams"], [13, 0, 1, "", "capture_non_tensor_stack"], [14, 0, 1, "", "cat"], [15, 3, 1, "", "default_is_leaf"], [16, 0, 1, "", "dense_stack_tds"], [17, 0, 1, "", "from_any"], [18, 0, 1, "", "from_consolidated"], [19, 0, 1, "", "from_dataclass"], [20, 0, 1, "", "from_dict"], [21, 0, 1, "", "from_h5"], [22, 0, 1, "", "from_module"], [23, 0, 1, "", "from_modules"], [24, 0, 1, "", "from_namedtuple"], [25, 0, 1, "", "from_pytree"], [26, 0, 1, "", "from_struct_array"], [27, 0, 1, "", "from_tuple"], [28, 0, 1, "", "fromkeys"], [29, 0, 1, "", "get_defaults_to_none"], [30, 0, 1, "", "is_batchedtensor"], [31, 3, 1, "", "is_leaf_nontensor"], [32, 0, 1, "", "is_tensor_collection"], [33, 0, 1, "", "lazy_legacy"], [34, 0, 1, "", "lazy_stack"], [35, 0, 1, "", "list_to_stack"], [36, 0, 1, "", "load"], [37, 0, 1, "", "load_memmap"], [38, 0, 1, "", "make_tensordict"], [39, 0, 1, "", "maybe_dense_stack"], [40, 0, 1, "", "memmap"], [41, 0, 1, "", "merge_tensordicts"], [67, 0, 1, "", "pad"], [68, 0, 1, "", "pad_sequence"], [69, 0, 1, "", "parse_tensor_dict_string"], [70, 0, 1, "", "save"], [71, 0, 1, "", "set_capture_non_tensor_stack"], [72, 0, 1, "", "set_lazy_legacy"], [73, 0, 1, "", "set_list_to_stack"], [74, 0, 1, "", "stack"], [75, 0, 1, "", "tensorclass"]], "tensordict.LazyStackedTensorDict": [[4, 1, 1, "", "abs"], [4, 1, 1, "", "abs_"], [4, 1, 1, "", "acos"], [4, 1, 1, "", "acos_"], [4, 1, 1, "", "add"], [4, 1, 1, "", "add_"], [4, 1, 1, "", "addcdiv"], [4, 1, 1, "", "addcdiv_"], [4, 1, 1, "", "addcmul"], [4, 1, 1, "", "addcmul_"], [4, 1, 1, "", "all"], [4, 1, 1, "", "amax"], [4, 1, 1, "", "amin"], [4, 1, 1, "", "any"], [4, 1, 1, "", "append"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_"], [4, 1, 1, "", "asin"], [4, 1, 1, "", "asin_"], [4, 1, 1, "", "atan"], [4, 1, 1, "", "atan_"], [4, 1, 1, "", "auto_batch_size_"], [4, 1, 1, "", "auto_device_"], [4, 2, 1, "", "batch_dims"], [4, 2, 1, "", "batch_size"], [4, 1, 1, "", "bfloat16"], [4, 1, 1, "", "bitwise_and"], [4, 1, 1, "", "bool"], [4, 1, 1, "", "bytes"], [4, 1, 1, "", "cat"], [4, 1, 1, "", "cat_from_tensordict"], [4, 1, 1, "", "cat_tensors"], [4, 1, 1, "", "ceil"], [4, 1, 1, "", "ceil_"], [4, 1, 1, "", "chunk"], [4, 1, 1, "", "clamp"], [4, 1, 1, "", "clamp_max"], [4, 1, 1, "", "clamp_max_"], [4, 1, 1, "", "clamp_min"], [4, 1, 1, "", "clamp_min_"], [4, 1, 1, "", "clear"], [4, 1, 1, "", "clear_device_"], [4, 1, 1, "", "clear_refs_for_compile_"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "complex128"], [4, 1, 1, "", "complex32"], [4, 1, 1, "", "complex64"], [4, 1, 1, "", "consolidate"], [4, 1, 1, "", "contiguous"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "copy_"], [4, 1, 1, "", "copy_at_"], [4, 1, 1, "", "cos"], [4, 1, 1, "", "cos_"], [4, 1, 1, "", "cosh"], [4, 1, 1, "", "cosh_"], [4, 1, 1, "", "cpu"], [4, 1, 1, "", "create_nested"], [4, 1, 1, "", "cuda"], [4, 1, 1, "", "cummax"], [4, 1, 1, "", "cummin"], [4, 2, 1, "", "data"], [4, 1, 1, "", "data_ptr"], [4, 1, 1, "", "del_"], [4, 1, 1, "", "densify"], [4, 2, 1, "", "depth"], [4, 1, 1, "", "detach"], [4, 1, 1, "", "detach_"], [4, 2, 1, "", "device"], [4, 1, 1, "", "dim"], [4, 1, 1, "", "div"], [4, 1, 1, "", "div_"], [4, 1, 1, "", "double"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "dumps"], [4, 1, 1, "", "empty"], [4, 1, 1, "", "entry_class"], [4, 1, 1, "", "erf"], [4, 1, 1, "", "erf_"], [4, 1, 1, "", "erfc"], [4, 1, 1, "", "erfc_"], [4, 1, 1, "", "exclude"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "exp_"], [4, 1, 1, "", "expand"], [4, 1, 1, "", "expand_as"], [4, 1, 1, "", "expm1"], [4, 1, 1, "", "expm1_"], [4, 1, 1, "", "extend"], [4, 1, 1, "", "fill_"], [4, 1, 1, "", "filter_empty_"], [4, 1, 1, "", "filter_non_tensor_data"], [4, 1, 1, "", "flatten"], [4, 1, 1, "", "flatten_keys"], [4, 1, 1, "", "float"], [4, 1, 1, "", "float16"], [4, 1, 1, "", "float32"], [4, 1, 1, "", "float64"], [4, 1, 1, "", "floor"], [4, 1, 1, "", "floor_"], [4, 1, 1, "", "frac"], [4, 1, 1, "", "frac_"], [4, 1, 1, "", "from_any"], [4, 1, 1, "", "from_dataclass"], [4, 1, 1, "", "from_dict"], [4, 1, 1, "", "from_dict_instance"], [4, 1, 1, "", "from_h5"], [4, 1, 1, "", "from_module"], [4, 1, 1, "", "from_modules"], [4, 1, 1, "", "from_namedtuple"], [4, 1, 1, "", "from_pytree"], [4, 1, 1, "", "from_remote_init"], [4, 1, 1, "", "from_struct_array"], [4, 1, 1, "", "from_tuple"], [4, 1, 1, "", "fromkeys"], [4, 1, 1, "", "gather"], [4, 1, 1, "", "gather_and_stack"], [4, 1, 1, "", "get"], [4, 1, 1, "", "get_at"], [4, 1, 1, "", "get_item_shape"], [4, 1, 1, "", "get_nestedtensor"], [4, 1, 1, "", "get_non_tensor"], [4, 2, 1, "", "grad"], [4, 1, 1, "", "half"], [4, 1, 1, "", "init_remote"], [4, 1, 1, "", "insert"], [4, 1, 1, "", "int"], [4, 1, 1, "", "int16"], [4, 1, 1, "", "int32"], [4, 1, 1, "", "int64"], [4, 1, 1, "", "int8"], [4, 1, 1, "", "irecv"], [4, 1, 1, "", "is_consolidated"], [4, 1, 1, "", "is_contiguous"], [4, 1, 1, "", "is_empty"], [4, 1, 1, "", "is_memmap"], [4, 1, 1, "", "is_shared"], [4, 1, 1, "", "isend"], [4, 1, 1, "", "isfinite"], [4, 1, 1, "", "isnan"], [4, 1, 1, "", "isneginf"], [4, 1, 1, "", "isposinf"], [4, 1, 1, "", "isreal"], [4, 1, 1, "", "items"], [4, 1, 1, "", "keys"], [4, 1, 1, "", "lazy_stack"], [4, 1, 1, "", "lerp"], [4, 1, 1, "", "lerp_"], [4, 1, 1, "", "lgamma"], [4, 1, 1, "", "lgamma_"], [4, 1, 1, "", "load"], [4, 1, 1, "", "load_"], [4, 1, 1, "", "load_memmap"], [4, 1, 1, "", "load_memmap_"], [4, 1, 1, "", "load_state_dict"], [4, 1, 1, "", "lock_"], [4, 1, 1, "", "log"], [4, 1, 1, "", "log10"], [4, 1, 1, "", "log10_"], [4, 1, 1, "", "log1p"], [4, 1, 1, "", "log1p_"], [4, 1, 1, "", "log2"], [4, 1, 1, "", "log2_"], [4, 1, 1, "", "log_"], [4, 1, 1, "", "logical_and"], [4, 1, 1, "", "logsumexp"], [4, 1, 1, "", "make_memmap"], [4, 1, 1, "", "make_memmap_from_storage"], [4, 1, 1, "", "make_memmap_from_tensor"], [4, 1, 1, "", "map"], [4, 1, 1, "", "map_iter"], [4, 1, 1, "", "masked_fill"], [4, 1, 1, "", "masked_fill_"], [4, 1, 1, "", "masked_select"], [4, 1, 1, "", "max"], [4, 1, 1, "", "maximum"], [4, 1, 1, "", "maximum_"], [4, 1, 1, "", "maybe_dense_stack"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "memmap"], [4, 1, 1, "", "memmap_"], [4, 1, 1, "", "memmap_like"], [4, 1, 1, "", "memmap_refresh_"], [4, 1, 1, "", "min"], [4, 1, 1, "", "minimum"], [4, 1, 1, "", "minimum_"], [4, 1, 1, "", "mul"], [4, 1, 1, "", "mul_"], [4, 1, 1, "", "named_apply"], [4, 2, 1, "", "names"], [4, 1, 1, "", "nanmean"], [4, 1, 1, "", "nansum"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "ndimension"], [4, 1, 1, "", "neg"], [4, 1, 1, "", "neg_"], [4, 1, 1, "", "new_empty"], [4, 1, 1, "", "new_full"], [4, 1, 1, "", "new_ones"], [4, 1, 1, "", "new_tensor"], [4, 1, 1, "", "new_zeros"], [4, 1, 1, "", "non_tensor_items"], [4, 1, 1, "", "norm"], [4, 1, 1, "", "numel"], [4, 1, 1, "", "numpy"], [4, 1, 1, "", "param_count"], [4, 1, 1, "", "permute"], [4, 1, 1, "", "pin_memory"], [4, 1, 1, "", "pin_memory_"], [4, 1, 1, "", "pop"], [4, 1, 1, "", "popitem"], [4, 1, 1, "", "pow"], [4, 1, 1, "", "pow_"], [4, 1, 1, "", "prod"], [4, 1, 1, "", "qint32"], [4, 1, 1, "", "qint8"], [4, 1, 1, "", "quint4x2"], [4, 1, 1, "", "quint8"], [4, 1, 1, "", "reciprocal"], [4, 1, 1, "", "reciprocal_"], [4, 1, 1, "", "record_stream"], [4, 1, 1, "", "recv"], [4, 1, 1, "", "reduce"], [4, 1, 1, "", "refine_names"], [4, 1, 1, "", "rename"], [4, 1, 1, "", "rename_"], [4, 1, 1, "", "rename_key_"], [4, 1, 1, "", "repeat"], [4, 1, 1, "", "repeat_interleave"], [4, 1, 1, "", "replace"], [4, 1, 1, "", "requires_grad_"], [4, 1, 1, "", "reshape"], [4, 1, 1, "", "round"], [4, 1, 1, "", "round_"], [4, 1, 1, "", "rsub"], [4, 1, 1, "", "save"], [4, 2, 1, "", "saved_path"], [4, 1, 1, "", "select"], [4, 1, 1, "", "send"], [4, 1, 1, "", "separates"], [4, 1, 1, "", "set"], [4, 1, 1, "", "set_"], [4, 1, 1, "", "set_at_"], [4, 1, 1, "", "set_non_tensor"], [4, 1, 1, "", "setdefault"], [4, 2, 1, "", "shape"], [4, 1, 1, "", "share_memory_"], [4, 1, 1, "", "sigmoid"], [4, 1, 1, "", "sigmoid_"], [4, 1, 1, "", "sign"], [4, 1, 1, "", "sign_"], [4, 1, 1, "", "sin"], [4, 1, 1, "", "sin_"], [4, 1, 1, "", "sinh"], [4, 1, 1, "", "sinh_"], [4, 1, 1, "", "size"], [4, 1, 1, "", "softmax"], [4, 2, 1, "", "sorted_keys"], [4, 1, 1, "", "split"], [4, 1, 1, "", "split_keys"], [4, 1, 1, "", "sqrt"], [4, 1, 1, "", "sqrt_"], [4, 1, 1, "", "squeeze"], [4, 1, 1, "", "stack"], [4, 1, 1, "", "stack_from_tensordict"], [4, 1, 1, "", "stack_tensors"], [4, 1, 1, "", "state_dict"], [4, 1, 1, "", "std"], [4, 1, 1, "", "sub"], [4, 1, 1, "", "sub_"], [4, 1, 1, "", "sum"], [4, 1, 1, "", "tan"], [4, 1, 1, "", "tan_"], [4, 1, 1, "", "tanh"], [4, 1, 1, "", "tanh_"], [4, 1, 1, "", "to"], [4, 1, 1, "", "to_dict"], [4, 1, 1, "", "to_h5"], [4, 1, 1, "", "to_module"], [4, 1, 1, "", "to_namedtuple"], [4, 1, 1, "", "to_padded_tensor"], [4, 1, 1, "", "to_pytree"], [4, 1, 1, "", "to_struct_array"], [4, 1, 1, "", "to_tensordict"], [4, 1, 1, "", "tolist"], [4, 1, 1, "", "transpose"], [4, 1, 1, "", "trunc"], [4, 1, 1, "", "trunc_"], [4, 1, 1, "", "type"], [4, 1, 1, "", "uint16"], [4, 1, 1, "", "uint32"], [4, 1, 1, "", "uint64"], [4, 1, 1, "", "uint8"], [4, 1, 1, "", "unbind"], [4, 1, 1, "", "unflatten"], [4, 1, 1, "", "unflatten_keys"], [4, 1, 1, "", "unlock_"], [4, 1, 1, "", "unsqueeze"], [4, 1, 1, "", "update"], [4, 1, 1, "", "update_"], [4, 1, 1, "", "update_at_"], [4, 1, 1, "", "valid_keys"], [4, 1, 1, "", "values"], [4, 1, 1, "", "var"], [4, 1, 1, "", "view"], [4, 1, 1, "", "where"], [4, 1, 1, "", "zero_"], [4, 1, 1, "", "zero_grad"]], "tensordict.MemoryMappedTensor": [[5, 1, 1, "", "chunk"], [5, 1, 1, "", "empty"], [5, 1, 1, "", "empty_like"], [5, 1, 1, "", "empty_nested"], [5, 2, 1, "", "filename"], [5, 1, 1, "", "from_filename"], [5, 1, 1, "", "from_handler"], [5, 1, 1, "", "from_tensor"], [5, 1, 1, "", "full"], [5, 1, 1, "", "full_like"], [5, 1, 1, "", "ones"], [5, 1, 1, "", "ones_like"], [5, 1, 1, "", "unbind"], [5, 1, 1, "", "zeros"], [5, 1, 1, "", "zeros_like"]], "tensordict.NonTensorData": [[6, 2, 1, "", "device"], [6, 1, 1, "", "dumps"], [6, 1, 1, "", "fields"], [6, 1, 1, "", "from_tensordict"], [6, 1, 1, "", "get"], [6, 1, 1, "", "load"], [6, 1, 1, "", "load_"], [6, 1, 1, "", "load_memmap"], [6, 1, 1, "", "load_state_dict"], [6, 1, 1, "", "maybe_to_stack"], [6, 1, 1, "", "memmap"], [6, 1, 1, "", "memmap_"], [6, 1, 1, "", "memmap_like"], [6, 1, 1, "", "memmap_refresh_"], [6, 1, 1, "", "save"], [6, 1, 1, "", "set"], [6, 1, 1, "", "state_dict"], [6, 1, 1, "", "tolist"], [6, 1, 1, "", "unbind"]], "tensordict.NonTensorStack": [[7, 1, 1, "", "abs"], [7, 1, 1, "", "abs_"], [7, 1, 1, "", "acos"], [7, 1, 1, "", "acos_"], [7, 1, 1, "", "add"], [7, 1, 1, "", "add_"], [7, 1, 1, "", "addcdiv"], [7, 1, 1, "", "addcdiv_"], [7, 1, 1, "", "addcmul"], [7, 1, 1, "", "addcmul_"], [7, 1, 1, "", "all"], [7, 1, 1, "", "amax"], [7, 1, 1, "", "amin"], [7, 1, 1, "", "any"], [7, 1, 1, "", "append"], [7, 1, 1, "", "apply"], [7, 1, 1, "", "apply_"], [7, 1, 1, "", "asin"], [7, 1, 1, "", "asin_"], [7, 1, 1, "", "atan"], [7, 1, 1, "", "atan_"], [7, 1, 1, "", "auto_batch_size_"], [7, 1, 1, "", "auto_device_"], [7, 2, 1, "", "batch_dims"], [7, 2, 1, "", "batch_size"], [7, 1, 1, "", "bfloat16"], [7, 1, 1, "", "bitwise_and"], [7, 1, 1, "", "bool"], [7, 1, 1, "", "bytes"], [7, 1, 1, "", "cat"], [7, 1, 1, "", "cat_from_tensordict"], [7, 1, 1, "", "cat_tensors"], [7, 1, 1, "", "ceil"], [7, 1, 1, "", "ceil_"], [7, 1, 1, "", "chunk"], [7, 1, 1, "", "clamp"], [7, 1, 1, "", "clamp_max"], [7, 1, 1, "", "clamp_max_"], [7, 1, 1, "", "clamp_min"], [7, 1, 1, "", "clamp_min_"], [7, 1, 1, "", "clear"], [7, 1, 1, "", "clear_device_"], [7, 1, 1, "", "clear_refs_for_compile_"], [7, 1, 1, "", "clone"], [7, 1, 1, "", "complex128"], [7, 1, 1, "", "complex32"], [7, 1, 1, "", "complex64"], [7, 1, 1, "", "consolidate"], [7, 1, 1, "", "contiguous"], [7, 1, 1, "", "copy"], [7, 1, 1, "", "copy_"], [7, 1, 1, "", "copy_at_"], [7, 1, 1, "", "cos"], [7, 1, 1, "", "cos_"], [7, 1, 1, "", "cosh"], [7, 1, 1, "", "cosh_"], [7, 1, 1, "", "cpu"], [7, 1, 1, "", "create_nested"], [7, 1, 1, "", "cuda"], [7, 1, 1, "", "cummax"], [7, 1, 1, "", "cummin"], [7, 2, 1, "", "data"], [7, 1, 1, "", "data_ptr"], [7, 1, 1, "", "del_"], [7, 1, 1, "", "densify"], [7, 2, 1, "", "depth"], [7, 1, 1, "", "detach"], [7, 1, 1, "", "detach_"], [7, 2, 1, "", "device"], [7, 1, 1, "", "dim"], [7, 1, 1, "", "div"], [7, 1, 1, "", "div_"], [7, 1, 1, "", "double"], [7, 2, 1, "", "dtype"], [7, 1, 1, "", "dumps"], [7, 1, 1, "", "empty"], [7, 1, 1, "", "entry_class"], [7, 1, 1, "", "erf"], [7, 1, 1, "", "erf_"], [7, 1, 1, "", "erfc"], [7, 1, 1, "", "erfc_"], [7, 1, 1, "", "exclude"], [7, 1, 1, "", "exp"], [7, 1, 1, "", "exp_"], [7, 1, 1, "", "expand"], [7, 1, 1, "", "expand_as"], [7, 1, 1, "", "expm1"], [7, 1, 1, "", "expm1_"], [7, 1, 1, "", "extend"], [7, 1, 1, "", "fill_"], [7, 1, 1, "", "filter_empty_"], [7, 1, 1, "", "filter_non_tensor_data"], [7, 1, 1, "", "flatten"], [7, 1, 1, "", "flatten_keys"], [7, 1, 1, "", "float"], [7, 1, 1, "", "float16"], [7, 1, 1, "", "float32"], [7, 1, 1, "", "float64"], [7, 1, 1, "", "floor"], [7, 1, 1, "", "floor_"], [7, 1, 1, "", "frac"], [7, 1, 1, "", "frac_"], [7, 1, 1, "", "from_any"], [7, 1, 1, "", "from_dataclass"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_dict_instance"], [7, 1, 1, "", "from_h5"], [7, 1, 1, "", "from_module"], [7, 1, 1, "", "from_modules"], [7, 1, 1, "", "from_namedtuple"], [7, 1, 1, "", "from_pytree"], [7, 1, 1, "", "from_remote_init"], [7, 1, 1, "", "from_struct_array"], [7, 1, 1, "", "from_tuple"], [7, 1, 1, "", "fromkeys"], [7, 1, 1, "", "gather"], [7, 1, 1, "", "gather_and_stack"], [7, 1, 1, "", "get"], [7, 1, 1, "", "get_at"], [7, 1, 1, "", "get_item_shape"], [7, 1, 1, "", "get_nestedtensor"], [7, 1, 1, "", "get_non_tensor"], [7, 2, 1, "", "grad"], [7, 1, 1, "", "half"], [7, 1, 1, "", "init_remote"], [7, 1, 1, "", "insert"], [7, 1, 1, "", "int"], [7, 1, 1, "", "int16"], [7, 1, 1, "", "int32"], [7, 1, 1, "", "int64"], [7, 1, 1, "", "int8"], [7, 1, 1, "", "irecv"], [7, 1, 1, "", "is_consolidated"], [7, 1, 1, "", "is_contiguous"], [7, 1, 1, "", "is_empty"], [7, 1, 1, "", "is_memmap"], [7, 1, 1, "", "is_shared"], [7, 1, 1, "", "isend"], [7, 1, 1, "", "isfinite"], [7, 1, 1, "", "isnan"], [7, 1, 1, "", "isneginf"], [7, 1, 1, "", "isposinf"], [7, 1, 1, "", "isreal"], [7, 1, 1, "", "items"], [7, 1, 1, "", "keys"], [7, 1, 1, "", "lazy_stack"], [7, 1, 1, "", "lerp"], [7, 1, 1, "", "lerp_"], [7, 1, 1, "", "lgamma"], [7, 1, 1, "", "lgamma_"], [7, 1, 1, "", "load"], [7, 1, 1, "", "load_"], [7, 1, 1, "", "load_memmap"], [7, 1, 1, "", "load_memmap_"], [7, 1, 1, "", "load_state_dict"], [7, 1, 1, "", "lock_"], [7, 1, 1, "", "log"], [7, 1, 1, "", "log10"], [7, 1, 1, "", "log10_"], [7, 1, 1, "", "log1p"], [7, 1, 1, "", "log1p_"], [7, 1, 1, "", "log2"], [7, 1, 1, "", "log2_"], [7, 1, 1, "", "log_"], [7, 1, 1, "", "logical_and"], [7, 1, 1, "", "logsumexp"], [7, 1, 1, "", "make_memmap"], [7, 1, 1, "", "make_memmap_from_storage"], [7, 1, 1, "", "make_memmap_from_tensor"], [7, 1, 1, "", "map"], [7, 1, 1, "", "map_iter"], [7, 1, 1, "", "masked_fill"], [7, 1, 1, "", "masked_fill_"], [7, 1, 1, "", "masked_select"], [7, 1, 1, "", "max"], [7, 1, 1, "", "maximum"], [7, 1, 1, "", "maximum_"], [7, 1, 1, "", "maybe_dense_stack"], [7, 1, 1, "", "maybe_to_stack"], [7, 1, 1, "", "mean"], [7, 1, 1, "", "memmap"], [7, 1, 1, "", "memmap_"], [7, 1, 1, "", "memmap_like"], [7, 1, 1, "", "memmap_refresh_"], [7, 1, 1, "", "min"], [7, 1, 1, "", "minimum"], [7, 1, 1, "", "minimum_"], [7, 1, 1, "", "mul"], [7, 1, 1, "", "mul_"], [7, 1, 1, "", "named_apply"], [7, 2, 1, "", "names"], [7, 1, 1, "", "nanmean"], [7, 1, 1, "", "nansum"], [7, 2, 1, "", "ndim"], [7, 1, 1, "", "ndimension"], [7, 1, 1, "", "neg"], [7, 1, 1, "", "neg_"], [7, 1, 1, "", "new_empty"], [7, 1, 1, "", "new_full"], [7, 1, 1, "", "new_ones"], [7, 1, 1, "", "new_tensor"], [7, 1, 1, "", "new_zeros"], [7, 1, 1, "", "non_tensor_items"], [7, 1, 1, "", "norm"], [7, 1, 1, "", "numel"], [7, 1, 1, "", "numpy"], [7, 1, 1, "", "param_count"], [7, 1, 1, "", "permute"], [7, 1, 1, "", "pin_memory"], [7, 1, 1, "", "pin_memory_"], [7, 1, 1, "", "pop"], [7, 1, 1, "", "popitem"], [7, 1, 1, "", "pow"], [7, 1, 1, "", "pow_"], [7, 1, 1, "", "prod"], [7, 1, 1, "", "qint32"], [7, 1, 1, "", "qint8"], [7, 1, 1, "", "quint4x2"], [7, 1, 1, "", "quint8"], [7, 1, 1, "", "reciprocal"], [7, 1, 1, "", "reciprocal_"], [7, 1, 1, "", "record_stream"], [7, 1, 1, "", "recv"], [7, 1, 1, "", "reduce"], [7, 1, 1, "", "refine_names"], [7, 1, 1, "", "rename"], [7, 1, 1, "", "rename_"], [7, 1, 1, "", "rename_key_"], [7, 1, 1, "", "repeat"], [7, 1, 1, "", "repeat_interleave"], [7, 1, 1, "", "replace"], [7, 1, 1, "", "requires_grad_"], [7, 1, 1, "", "reshape"], [7, 1, 1, "", "round"], [7, 1, 1, "", "round_"], [7, 1, 1, "", "rsub"], [7, 1, 1, "", "save"], [7, 2, 1, "", "saved_path"], [7, 1, 1, "", "select"], [7, 1, 1, "", "send"], [7, 1, 1, "", "separates"], [7, 1, 1, "", "set"], [7, 1, 1, "", "set_"], [7, 1, 1, "", "set_at_"], [7, 1, 1, "", "set_non_tensor"], [7, 1, 1, "", "setdefault"], [7, 2, 1, "", "shape"], [7, 1, 1, "", "share_memory_"], [7, 1, 1, "", "sigmoid"], [7, 1, 1, "", "sigmoid_"], [7, 1, 1, "", "sign"], [7, 1, 1, "", "sign_"], [7, 1, 1, "", "sin"], [7, 1, 1, "", "sin_"], [7, 1, 1, "", "sinh"], [7, 1, 1, "", "sinh_"], [7, 1, 1, "", "size"], [7, 1, 1, "", "softmax"], [7, 2, 1, "", "sorted_keys"], [7, 1, 1, "", "split"], [7, 1, 1, "", "split_keys"], [7, 1, 1, "", "sqrt"], [7, 1, 1, "", "sqrt_"], [7, 1, 1, "", "squeeze"], [7, 1, 1, "", "stack"], [7, 1, 1, "", "stack_from_tensordict"], [7, 1, 1, "", "stack_tensors"], [7, 1, 1, "", "state_dict"], [7, 1, 1, "", "std"], [7, 1, 1, "", "sub"], [7, 1, 1, "", "sub_"], [7, 1, 1, "", "sum"], [7, 1, 1, "", "tan"], [7, 1, 1, "", "tan_"], [7, 1, 1, "", "tanh"], [7, 1, 1, "", "tanh_"], [7, 1, 1, "", "to"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_h5"], [7, 1, 1, "", "to_module"], [7, 1, 1, "", "to_namedtuple"], [7, 1, 1, "", "to_padded_tensor"], [7, 1, 1, "", "to_pytree"], [7, 1, 1, "", "to_struct_array"], [7, 1, 1, "", "to_tensordict"], [7, 1, 1, "", "tolist"], [7, 1, 1, "", "transpose"], [7, 1, 1, "", "trunc"], [7, 1, 1, "", "trunc_"], [7, 1, 1, "", "type"], [7, 1, 1, "", "uint16"], [7, 1, 1, "", "uint32"], [7, 1, 1, "", "uint64"], [7, 1, 1, "", "uint8"], [7, 1, 1, "", "unbind"], [7, 1, 1, "", "unflatten"], [7, 1, 1, "", "unflatten_keys"], [7, 1, 1, "", "unlock_"], [7, 1, 1, "", "unsqueeze"], [7, 1, 1, "", "update"], [7, 1, 1, "", "update_"], [7, 1, 1, "", "update_at_"], [7, 1, 1, "", "valid_keys"], [7, 1, 1, "", "values"], [7, 1, 1, "", "var"], [7, 1, 1, "", "view"], [7, 1, 1, "", "where"], [7, 1, 1, "", "zero_"], [7, 1, 1, "", "zero_grad"]], "tensordict.PersistentTensorDict": [[8, 1, 1, "", "abs"], [8, 1, 1, "", "abs_"], [8, 1, 1, "", "acos"], [8, 1, 1, "", "acos_"], [8, 1, 1, "", "add"], [8, 1, 1, "", "add_"], [8, 1, 1, "", "addcdiv"], [8, 1, 1, "", "addcdiv_"], [8, 1, 1, "", "addcmul"], [8, 1, 1, "", "addcmul_"], [8, 1, 1, "", "all"], [8, 1, 1, "", "amax"], [8, 1, 1, "", "amin"], [8, 1, 1, "", "any"], [8, 1, 1, "", "apply"], [8, 1, 1, "", "apply_"], [8, 1, 1, "", "asin"], [8, 1, 1, "", "asin_"], [8, 1, 1, "", "atan"], [8, 1, 1, "", "atan_"], [8, 1, 1, "", "auto_batch_size_"], [8, 1, 1, "", "auto_device_"], [8, 2, 1, "", "batch_dims"], [8, 2, 1, "", "batch_size"], [8, 1, 1, "", "bfloat16"], [8, 1, 1, "", "bitwise_and"], [8, 1, 1, "", "bool"], [8, 1, 1, "", "bytes"], [8, 1, 1, "", "cat"], [8, 1, 1, "", "cat_from_tensordict"], [8, 1, 1, "", "cat_tensors"], [8, 1, 1, "", "ceil"], [8, 1, 1, "", "ceil_"], [8, 1, 1, "", "chunk"], [8, 1, 1, "", "clamp"], [8, 1, 1, "", "clamp_max"], [8, 1, 1, "", "clamp_max_"], [8, 1, 1, "", "clamp_min"], [8, 1, 1, "", "clamp_min_"], [8, 1, 1, "", "clear"], [8, 1, 1, "", "clear_device_"], [8, 1, 1, "", "clear_refs_for_compile_"], [8, 1, 1, "", "clone"], [8, 1, 1, "", "close"], [8, 1, 1, "", "complex128"], [8, 1, 1, "", "complex32"], [8, 1, 1, "", "complex64"], [8, 1, 1, "", "consolidate"], [8, 1, 1, "", "contiguous"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "copy_"], [8, 1, 1, "", "copy_at_"], [8, 1, 1, "", "cos"], [8, 1, 1, "", "cos_"], [8, 1, 1, "", "cosh"], [8, 1, 1, "", "cosh_"], [8, 1, 1, "", "cpu"], [8, 1, 1, "", "create_nested"], [8, 1, 1, "", "cuda"], [8, 1, 1, "", "cummax"], [8, 1, 1, "", "cummin"], [8, 2, 1, "", "data"], [8, 1, 1, "", "data_ptr"], [8, 1, 1, "", "del_"], [8, 1, 1, "", "densify"], [8, 2, 1, "", "depth"], [8, 1, 1, "", "detach"], [8, 1, 1, "", "detach_"], [8, 2, 1, "", "device"], [8, 1, 1, "", "dim"], [8, 1, 1, "", "div"], [8, 1, 1, "", "div_"], [8, 1, 1, "", "double"], [8, 2, 1, "", "dtype"], [8, 1, 1, "", "dumps"], [8, 1, 1, "", "empty"], [8, 1, 1, "", "entry_class"], [8, 1, 1, "", "erf"], [8, 1, 1, "", "erf_"], [8, 1, 1, "", "erfc"], [8, 1, 1, "", "erfc_"], [8, 1, 1, "", "exclude"], [8, 1, 1, "", "exp"], [8, 1, 1, "", "exp_"], [8, 1, 1, "", "expand"], [8, 1, 1, "", "expand_as"], [8, 1, 1, "", "expm1"], [8, 1, 1, "", "expm1_"], [8, 1, 1, "", "fill_"], [8, 1, 1, "", "filter_empty_"], [8, 1, 1, "", "filter_non_tensor_data"], [8, 1, 1, "", "flatten"], [8, 1, 1, "", "flatten_keys"], [8, 1, 1, "", "float"], [8, 1, 1, "", "float16"], [8, 1, 1, "", "float32"], [8, 1, 1, "", "float64"], [8, 1, 1, "", "floor"], [8, 1, 1, "", "floor_"], [8, 1, 1, "", "frac"], [8, 1, 1, "", "frac_"], [8, 1, 1, "", "from_any"], [8, 1, 1, "", "from_dataclass"], [8, 1, 1, "", "from_dict"], [8, 1, 1, "", "from_dict_instance"], [8, 1, 1, "", "from_h5"], [8, 1, 1, "", "from_module"], [8, 1, 1, "", "from_modules"], [8, 1, 1, "", "from_namedtuple"], [8, 1, 1, "", "from_pytree"], [8, 1, 1, "", "from_remote_init"], [8, 1, 1, "", "from_struct_array"], [8, 1, 1, "", "from_tuple"], [8, 1, 1, "", "fromkeys"], [8, 1, 1, "", "gather"], [8, 1, 1, "", "gather_and_stack"], [8, 1, 1, "", "get"], [8, 1, 1, "", "get_at"], [8, 1, 1, "", "get_item_shape"], [8, 1, 1, "", "get_non_tensor"], [8, 2, 1, "", "grad"], [8, 1, 1, "", "half"], [8, 1, 1, "", "init_remote"], [8, 1, 1, "", "int"], [8, 1, 1, "", "int16"], [8, 1, 1, "", "int32"], [8, 1, 1, "", "int64"], [8, 1, 1, "", "int8"], [8, 1, 1, "", "irecv"], [8, 1, 1, "", "is_consolidated"], [8, 1, 1, "", "is_contiguous"], [8, 1, 1, "", "is_empty"], [8, 1, 1, "", "is_memmap"], [8, 1, 1, "", "is_shared"], [8, 1, 1, "", "isend"], [8, 1, 1, "", "isfinite"], [8, 1, 1, "", "isnan"], [8, 1, 1, "", "isneginf"], [8, 1, 1, "", "isposinf"], [8, 1, 1, "", "isreal"], [8, 1, 1, "", "items"], [8, 1, 1, "", "keys"], [8, 1, 1, "", "lazy_stack"], [8, 1, 1, "", "lerp"], [8, 1, 1, "", "lerp_"], [8, 1, 1, "", "lgamma"], [8, 1, 1, "", "lgamma_"], [8, 1, 1, "", "load"], [8, 1, 1, "", "load_"], [8, 1, 1, "", "load_memmap"], [8, 1, 1, "", "load_memmap_"], [8, 1, 1, "", "load_state_dict"], [8, 1, 1, "", "lock_"], [8, 1, 1, "", "log"], [8, 1, 1, "", "log10"], [8, 1, 1, "", "log10_"], [8, 1, 1, "", "log1p"], [8, 1, 1, "", "log1p_"], [8, 1, 1, "", "log2"], [8, 1, 1, "", "log2_"], [8, 1, 1, "", "log_"], [8, 1, 1, "", "logical_and"], [8, 1, 1, "", "logsumexp"], [8, 1, 1, "", "make_memmap"], [8, 1, 1, "", "make_memmap_from_storage"], [8, 1, 1, "", "make_memmap_from_tensor"], [8, 1, 1, "", "map"], [8, 1, 1, "", "map_iter"], [8, 1, 1, "", "masked_fill"], [8, 1, 1, "", "masked_fill_"], [8, 1, 1, "", "masked_select"], [8, 1, 1, "", "max"], [8, 1, 1, "", "maximum"], [8, 1, 1, "", "maximum_"], [8, 1, 1, "", "maybe_dense_stack"], [8, 1, 1, "", "mean"], [8, 1, 1, "", "memmap"], [8, 1, 1, "", "memmap_"], [8, 1, 1, "", "memmap_like"], [8, 1, 1, "", "memmap_refresh_"], [8, 1, 1, "", "min"], [8, 1, 1, "", "minimum"], [8, 1, 1, "", "minimum_"], [8, 1, 1, "", "mul"], [8, 1, 1, "", "mul_"], [8, 1, 1, "", "named_apply"], [8, 2, 1, "", "names"], [8, 1, 1, "", "nanmean"], [8, 1, 1, "", "nansum"], [8, 2, 1, "", "ndim"], [8, 1, 1, "", "ndimension"], [8, 1, 1, "", "neg"], [8, 1, 1, "", "neg_"], [8, 1, 1, "", "new_empty"], [8, 1, 1, "", "new_full"], [8, 1, 1, "", "new_ones"], [8, 1, 1, "", "new_tensor"], [8, 1, 1, "", "new_zeros"], [8, 1, 1, "", "non_tensor_items"], [8, 1, 1, "", "norm"], [8, 1, 1, "", "numel"], [8, 1, 1, "", "numpy"], [8, 1, 1, "", "param_count"], [8, 1, 1, "", "permute"], [8, 1, 1, "", "pin_memory"], [8, 1, 1, "", "pin_memory_"], [8, 1, 1, "", "pop"], [8, 1, 1, "", "popitem"], [8, 1, 1, "", "pow"], [8, 1, 1, "", "pow_"], [8, 1, 1, "", "prod"], [8, 1, 1, "", "qint32"], [8, 1, 1, "", "qint8"], [8, 1, 1, "", "quint4x2"], [8, 1, 1, "", "quint8"], [8, 1, 1, "", "reciprocal"], [8, 1, 1, "", "reciprocal_"], [8, 1, 1, "", "record_stream"], [8, 1, 1, "", "recv"], [8, 1, 1, "", "reduce"], [8, 1, 1, "", "refine_names"], [8, 1, 1, "", "rename"], [8, 1, 1, "", "rename_"], [8, 1, 1, "", "rename_key_"], [8, 1, 1, "", "repeat"], [8, 1, 1, "", "repeat_interleave"], [8, 1, 1, "", "replace"], [8, 1, 1, "", "requires_grad_"], [8, 1, 1, "", "reshape"], [8, 1, 1, "", "round"], [8, 1, 1, "", "round_"], [8, 1, 1, "", "rsub"], [8, 1, 1, "", "save"], [8, 2, 1, "", "saved_path"], [8, 1, 1, "", "select"], [8, 1, 1, "", "send"], [8, 1, 1, "", "separates"], [8, 1, 1, "", "set"], [8, 1, 1, "", "set_"], [8, 1, 1, "", "set_at_"], [8, 1, 1, "", "set_non_tensor"], [8, 1, 1, "", "setdefault"], [8, 2, 1, "", "shape"], [8, 1, 1, "", "share_memory_"], [8, 1, 1, "", "sigmoid"], [8, 1, 1, "", "sigmoid_"], [8, 1, 1, "", "sign"], [8, 1, 1, "", "sign_"], [8, 1, 1, "", "sin"], [8, 1, 1, "", "sin_"], [8, 1, 1, "", "sinh"], [8, 1, 1, "", "sinh_"], [8, 1, 1, "", "size"], [8, 1, 1, "", "softmax"], [8, 2, 1, "", "sorted_keys"], [8, 1, 1, "", "split"], [8, 1, 1, "", "split_keys"], [8, 1, 1, "", "sqrt"], [8, 1, 1, "", "sqrt_"], [8, 1, 1, "", "squeeze"], [8, 1, 1, "", "stack"], [8, 1, 1, "", "stack_from_tensordict"], [8, 1, 1, "", "stack_tensors"], [8, 1, 1, "", "state_dict"], [8, 1, 1, "", "std"], [8, 1, 1, "", "sub"], [8, 1, 1, "", "sub_"], [8, 1, 1, "", "sum"], [8, 1, 1, "", "tan"], [8, 1, 1, "", "tan_"], [8, 1, 1, "", "tanh"], [8, 1, 1, "", "tanh_"], [8, 1, 1, "", "to"], [8, 1, 1, "", "to_dict"], [8, 1, 1, "", "to_h5"], [8, 1, 1, "", "to_module"], [8, 1, 1, "", "to_namedtuple"], [8, 1, 1, "", "to_padded_tensor"], [8, 1, 1, "", "to_pytree"], [8, 1, 1, "", "to_struct_array"], [8, 1, 1, "", "to_tensordict"], [8, 1, 1, "", "tolist"], [8, 1, 1, "", "transpose"], [8, 1, 1, "", "trunc"], [8, 1, 1, "", "trunc_"], [8, 1, 1, "", "type"], [8, 1, 1, "", "uint16"], [8, 1, 1, "", "uint32"], [8, 1, 1, "", "uint64"], [8, 1, 1, "", "uint8"], [8, 1, 1, "", "unbind"], [8, 1, 1, "", "unflatten"], [8, 1, 1, "", "unflatten_keys"], [8, 1, 1, "", "unlock_"], [8, 1, 1, "", "unsqueeze"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_"], [8, 1, 1, "", "update_at_"], [8, 1, 1, "", "values"], [8, 1, 1, "", "var"], [8, 1, 1, "", "view"], [8, 1, 1, "", "where"], [8, 1, 1, "", "zero_"], [8, 1, 1, "", "zero_grad"]], "tensordict.TensorDict": [[10, 1, 1, "", "abs"], [10, 1, 1, "", "abs_"], [10, 1, 1, "", "acos"], [10, 1, 1, "", "acos_"], [10, 1, 1, "", "add"], [10, 1, 1, "", "add_"], [10, 1, 1, "", "addcdiv"], [10, 1, 1, "", "addcdiv_"], [10, 1, 1, "", "addcmul"], [10, 1, 1, "", "addcmul_"], [10, 1, 1, "", "all"], [10, 1, 1, "", "amax"], [10, 1, 1, "", "amin"], [10, 1, 1, "", "any"], [10, 1, 1, "", "apply"], [10, 1, 1, "", "apply_"], [10, 1, 1, "", "asin"], [10, 1, 1, "", "asin_"], [10, 1, 1, "", "atan"], [10, 1, 1, "", "atan_"], [10, 1, 1, "", "auto_batch_size_"], [10, 1, 1, "", "auto_device_"], [10, 2, 1, "", "batch_dims"], [10, 2, 1, "", "batch_size"], [10, 1, 1, "", "bfloat16"], [10, 1, 1, "", "bitwise_and"], [10, 1, 1, "", "bool"], [10, 1, 1, "", "bytes"], [10, 1, 1, "", "cat"], [10, 1, 1, "", "cat_from_tensordict"], [10, 1, 1, "", "cat_tensors"], [10, 1, 1, "", "ceil"], [10, 1, 1, "", "ceil_"], [10, 1, 1, "", "chunk"], [10, 1, 1, "", "clamp"], [10, 1, 1, "", "clamp_max"], [10, 1, 1, "", "clamp_max_"], [10, 1, 1, "", "clamp_min"], [10, 1, 1, "", "clamp_min_"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "clear_device_"], [10, 1, 1, "", "clear_refs_for_compile_"], [10, 1, 1, "", "clone"], [10, 1, 1, "", "complex128"], [10, 1, 1, "", "complex32"], [10, 1, 1, "", "complex64"], [10, 1, 1, "", "consolidate"], [10, 1, 1, "", "contiguous"], [10, 1, 1, "", "copy"], [10, 1, 1, "", "copy_"], [10, 1, 1, "", "copy_at_"], [10, 1, 1, "", "cos"], [10, 1, 1, "", "cos_"], [10, 1, 1, "", "cosh"], [10, 1, 1, "", "cosh_"], [10, 1, 1, "", "cpu"], [10, 1, 1, "", "create_nested"], [10, 1, 1, "", "cuda"], [10, 1, 1, "", "cummax"], [10, 1, 1, "", "cummin"], [10, 2, 1, "", "data"], [10, 1, 1, "", "data_ptr"], [10, 1, 1, "", "del_"], [10, 1, 1, "", "densify"], [10, 2, 1, "", "depth"], [10, 1, 1, "", "detach"], [10, 1, 1, "", "detach_"], [10, 2, 1, "", "device"], [10, 1, 1, "", "dim"], [10, 1, 1, "", "div"], [10, 1, 1, "", "div_"], [10, 1, 1, "", "double"], [10, 2, 1, "", "dtype"], [10, 1, 1, "", "dumps"], [10, 1, 1, "", "empty"], [10, 1, 1, "", "entry_class"], [10, 1, 1, "", "erf"], [10, 1, 1, "", "erf_"], [10, 1, 1, "", "erfc"], [10, 1, 1, "", "erfc_"], [10, 1, 1, "", "exclude"], [10, 1, 1, "", "exp"], [10, 1, 1, "", "exp_"], [10, 1, 1, "", "expand"], [10, 1, 1, "", "expand_as"], [10, 1, 1, "", "expm1"], [10, 1, 1, "", "expm1_"], [10, 1, 1, "", "fill_"], [10, 1, 1, "", "filter_empty_"], [10, 1, 1, "", "filter_non_tensor_data"], [10, 1, 1, "", "flatten"], [10, 1, 1, "", "flatten_keys"], [10, 1, 1, "", "float"], [10, 1, 1, "", "float16"], [10, 1, 1, "", "float32"], [10, 1, 1, "", "float64"], [10, 1, 1, "", "floor"], [10, 1, 1, "", "floor_"], [10, 1, 1, "", "frac"], [10, 1, 1, "", "frac_"], [10, 1, 1, "", "from_any"], [10, 1, 1, "", "from_dataclass"], [10, 1, 1, "", "from_dict"], [10, 1, 1, "", "from_dict_instance"], [10, 1, 1, "", "from_h5"], [10, 1, 1, "", "from_module"], [10, 1, 1, "", "from_modules"], [10, 1, 1, "", "from_namedtuple"], [10, 1, 1, "", "from_pytree"], [10, 1, 1, "", "from_remote_init"], [10, 1, 1, "", "from_struct_array"], [10, 1, 1, "", "from_tuple"], [10, 1, 1, "", "fromkeys"], [10, 1, 1, "", "gather"], [10, 1, 1, "", "gather_and_stack"], [10, 1, 1, "", "get"], [10, 1, 1, "", "get_at"], [10, 1, 1, "", "get_item_shape"], [10, 1, 1, "", "get_non_tensor"], [10, 2, 1, "", "grad"], [10, 1, 1, "", "half"], [10, 1, 1, "", "init_remote"], [10, 1, 1, "", "int"], [10, 1, 1, "", "int16"], [10, 1, 1, "", "int32"], [10, 1, 1, "", "int64"], [10, 1, 1, "", "int8"], [10, 1, 1, "", "irecv"], [10, 1, 1, "", "is_consolidated"], [10, 1, 1, "", "is_contiguous"], [10, 1, 1, "", "is_empty"], [10, 1, 1, "", "is_memmap"], [10, 1, 1, "", "is_shared"], [10, 1, 1, "", "isend"], [10, 1, 1, "", "isfinite"], [10, 1, 1, "", "isnan"], [10, 1, 1, "", "isneginf"], [10, 1, 1, "", "isposinf"], [10, 1, 1, "", "isreal"], [10, 1, 1, "", "items"], [10, 1, 1, "", "keys"], [10, 1, 1, "", "lazy_stack"], [10, 1, 1, "", "lerp"], [10, 1, 1, "", "lerp_"], [10, 1, 1, "", "lgamma"], [10, 1, 1, "", "lgamma_"], [10, 1, 1, "", "load"], [10, 1, 1, "", "load_"], [10, 1, 1, "", "load_memmap"], [10, 1, 1, "", "load_memmap_"], [10, 1, 1, "", "load_state_dict"], [10, 1, 1, "", "lock_"], [10, 1, 1, "", "log"], [10, 1, 1, "", "log10"], [10, 1, 1, "", "log10_"], [10, 1, 1, "", "log1p"], [10, 1, 1, "", "log1p_"], [10, 1, 1, "", "log2"], [10, 1, 1, "", "log2_"], [10, 1, 1, "", "log_"], [10, 1, 1, "", "logical_and"], [10, 1, 1, "", "logsumexp"], [10, 1, 1, "", "make_memmap"], [10, 1, 1, "", "make_memmap_from_storage"], [10, 1, 1, "", "make_memmap_from_tensor"], [10, 1, 1, "", "map"], [10, 1, 1, "", "map_iter"], [10, 1, 1, "", "masked_fill"], [10, 1, 1, "", "masked_fill_"], [10, 1, 1, "", "masked_select"], [10, 1, 1, "", "max"], [10, 1, 1, "", "maximum"], [10, 1, 1, "", "maximum_"], [10, 1, 1, "", "maybe_dense_stack"], [10, 1, 1, "", "mean"], [10, 1, 1, "", "memmap"], [10, 1, 1, "", "memmap_"], [10, 1, 1, "", "memmap_like"], [10, 1, 1, "", "memmap_refresh_"], [10, 1, 1, "", "min"], [10, 1, 1, "", "minimum"], [10, 1, 1, "", "minimum_"], [10, 1, 1, "", "mul"], [10, 1, 1, "", "mul_"], [10, 1, 1, "", "named_apply"], [10, 2, 1, "", "names"], [10, 1, 1, "", "nanmean"], [10, 1, 1, "", "nansum"], [10, 2, 1, "", "ndim"], [10, 1, 1, "", "ndimension"], [10, 1, 1, "", "neg"], [10, 1, 1, "", "neg_"], [10, 1, 1, "", "new_empty"], [10, 1, 1, "", "new_full"], [10, 1, 1, "", "new_ones"], [10, 1, 1, "", "new_tensor"], [10, 1, 1, "", "new_zeros"], [10, 1, 1, "", "non_tensor_items"], [10, 1, 1, "", "norm"], [10, 1, 1, "", "numel"], [10, 1, 1, "", "numpy"], [10, 1, 1, "", "param_count"], [10, 1, 1, "", "permute"], [10, 1, 1, "", "pin_memory"], [10, 1, 1, "", "pin_memory_"], [10, 1, 1, "", "pop"], [10, 1, 1, "", "popitem"], [10, 1, 1, "", "pow"], [10, 1, 1, "", "pow_"], [10, 1, 1, "", "prod"], [10, 1, 1, "", "qint32"], [10, 1, 1, "", "qint8"], [10, 1, 1, "", "quint4x2"], [10, 1, 1, "", "quint8"], [10, 1, 1, "", "reciprocal"], [10, 1, 1, "", "reciprocal_"], [10, 1, 1, "", "record_stream"], [10, 1, 1, "", "recv"], [10, 1, 1, "", "reduce"], [10, 1, 1, "", "refine_names"], [10, 1, 1, "", "rename"], [10, 1, 1, "", "rename_"], [10, 1, 1, "", "rename_key_"], [10, 1, 1, "", "repeat"], [10, 1, 1, "", "repeat_interleave"], [10, 1, 1, "", "replace"], [10, 1, 1, "", "requires_grad_"], [10, 1, 1, "", "reshape"], [10, 1, 1, "", "round"], [10, 1, 1, "", "round_"], [10, 1, 1, "", "rsub"], [10, 1, 1, "", "save"], [10, 2, 1, "", "saved_path"], [10, 1, 1, "", "select"], [10, 1, 1, "", "send"], [10, 1, 1, "", "separates"], [10, 1, 1, "", "set"], [10, 1, 1, "", "set_"], [10, 1, 1, "", "set_at_"], [10, 1, 1, "", "set_non_tensor"], [10, 1, 1, "", "setdefault"], [10, 2, 1, "", "shape"], [10, 1, 1, "", "share_memory_"], [10, 1, 1, "", "sigmoid"], [10, 1, 1, "", "sigmoid_"], [10, 1, 1, "", "sign"], [10, 1, 1, "", "sign_"], [10, 1, 1, "", "sin"], [10, 1, 1, "", "sin_"], [10, 1, 1, "", "sinh"], [10, 1, 1, "", "sinh_"], [10, 1, 1, "", "size"], [10, 1, 1, "", "softmax"], [10, 2, 1, "", "sorted_keys"], [10, 1, 1, "", "split"], [10, 1, 1, "", "split_keys"], [10, 1, 1, "", "sqrt"], [10, 1, 1, "", "sqrt_"], [10, 1, 1, "", "squeeze"], [10, 1, 1, "", "stack"], [10, 1, 1, "", "stack_from_tensordict"], [10, 1, 1, "", "stack_tensors"], [10, 1, 1, "", "state_dict"], [10, 1, 1, "", "std"], [10, 1, 1, "", "sub"], [10, 1, 1, "", "sub_"], [10, 1, 1, "", "sum"], [10, 1, 1, "", "tan"], [10, 1, 1, "", "tan_"], [10, 1, 1, "", "tanh"], [10, 1, 1, "", "tanh_"], [10, 1, 1, "", "to"], [10, 1, 1, "", "to_dict"], [10, 1, 1, "", "to_h5"], [10, 1, 1, "", "to_module"], [10, 1, 1, "", "to_namedtuple"], [10, 1, 1, "", "to_padded_tensor"], [10, 1, 1, "", "to_pytree"], [10, 1, 1, "", "to_struct_array"], [10, 1, 1, "", "to_tensordict"], [10, 1, 1, "", "tolist"], [10, 1, 1, "", "transpose"], [10, 1, 1, "", "trunc"], [10, 1, 1, "", "trunc_"], [10, 1, 1, "", "type"], [10, 1, 1, "", "uint16"], [10, 1, 1, "", "uint32"], [10, 1, 1, "", "uint64"], [10, 1, 1, "", "uint8"], [10, 1, 1, "", "unbind"], [10, 1, 1, "", "unflatten"], [10, 1, 1, "", "unflatten_keys"], [10, 1, 1, "", "unlock_"], [10, 1, 1, "", "unsqueeze"], [10, 1, 1, "", "update"], [10, 1, 1, "", "update_"], [10, 1, 1, "", "update_at_"], [10, 1, 1, "", "values"], [10, 1, 1, "", "var"], [10, 1, 1, "", "view"], [10, 1, 1, "", "where"], [10, 1, 1, "", "zero_"], [10, 1, 1, "", "zero_grad"]], "tensordict.TensorDictBase": [[11, 1, 1, "", "abs"], [11, 1, 1, "", "abs_"], [11, 1, 1, "", "acos"], [11, 1, 1, "", "acos_"], [11, 1, 1, "", "add"], [11, 1, 1, "", "add_"], [11, 1, 1, "", "addcdiv"], [11, 1, 1, "", "addcdiv_"], [11, 1, 1, "", "addcmul"], [11, 1, 1, "", "addcmul_"], [11, 1, 1, "", "all"], [11, 1, 1, "", "amax"], [11, 1, 1, "", "amin"], [11, 1, 1, "", "any"], [11, 1, 1, "", "apply"], [11, 1, 1, "", "apply_"], [11, 1, 1, "", "asin"], [11, 1, 1, "", "asin_"], [11, 1, 1, "", "atan"], [11, 1, 1, "", "atan_"], [11, 1, 1, "", "auto_batch_size_"], [11, 1, 1, "", "auto_device_"], [11, 2, 1, "", "batch_dims"], [11, 2, 1, "", "batch_size"], [11, 1, 1, "", "bfloat16"], [11, 1, 1, "", "bitwise_and"], [11, 1, 1, "", "bool"], [11, 1, 1, "", "bytes"], [11, 1, 1, "", "cat"], [11, 1, 1, "", "cat_from_tensordict"], [11, 1, 1, "", "cat_tensors"], [11, 1, 1, "", "ceil"], [11, 1, 1, "", "ceil_"], [11, 1, 1, "", "chunk"], [11, 1, 1, "", "clamp"], [11, 1, 1, "", "clamp_max"], [11, 1, 1, "", "clamp_max_"], [11, 1, 1, "", "clamp_min"], [11, 1, 1, "", "clamp_min_"], [11, 1, 1, "", "clear"], [11, 1, 1, "", "clear_device_"], [11, 1, 1, "", "clear_refs_for_compile_"], [11, 1, 1, "", "clone"], [11, 1, 1, "", "complex128"], [11, 1, 1, "", "complex32"], [11, 1, 1, "", "complex64"], [11, 1, 1, "", "consolidate"], [11, 1, 1, "", "contiguous"], [11, 1, 1, "", "copy"], [11, 1, 1, "", "copy_"], [11, 1, 1, "", "copy_at_"], [11, 1, 1, "", "cos"], [11, 1, 1, "", "cos_"], [11, 1, 1, "", "cosh"], [11, 1, 1, "", "cosh_"], [11, 1, 1, "", "cpu"], [11, 1, 1, "", "create_nested"], [11, 1, 1, "", "cuda"], [11, 1, 1, "", "cummax"], [11, 1, 1, "", "cummin"], [11, 2, 1, "", "data"], [11, 1, 1, "", "data_ptr"], [11, 1, 1, "", "del_"], [11, 1, 1, "", "densify"], [11, 2, 1, "", "depth"], [11, 1, 1, "", "detach"], [11, 1, 1, "", "detach_"], [11, 2, 1, "", "device"], [11, 1, 1, "", "dim"], [11, 1, 1, "", "div"], [11, 1, 1, "", "div_"], [11, 1, 1, "", "double"], [11, 2, 1, "", "dtype"], [11, 1, 1, "", "dumps"], [11, 1, 1, "", "empty"], [11, 1, 1, "", "entry_class"], [11, 1, 1, "", "erf"], [11, 1, 1, "", "erf_"], [11, 1, 1, "", "erfc"], [11, 1, 1, "", "erfc_"], [11, 1, 1, "", "exclude"], [11, 1, 1, "", "exp"], [11, 1, 1, "", "exp_"], [11, 1, 1, "", "expand"], [11, 1, 1, "", "expand_as"], [11, 1, 1, "", "expm1"], [11, 1, 1, "", "expm1_"], [11, 1, 1, "", "fill_"], [11, 1, 1, "", "filter_empty_"], [11, 1, 1, "", "filter_non_tensor_data"], [11, 1, 1, "", "flatten"], [11, 1, 1, "", "flatten_keys"], [11, 1, 1, "", "float"], [11, 1, 1, "", "float16"], [11, 1, 1, "", "float32"], [11, 1, 1, "", "float64"], [11, 1, 1, "", "floor"], [11, 1, 1, "", "floor_"], [11, 1, 1, "", "frac"], [11, 1, 1, "", "frac_"], [11, 1, 1, "", "from_any"], [11, 1, 1, "", "from_dataclass"], [11, 1, 1, "", "from_dict"], [11, 1, 1, "", "from_dict_instance"], [11, 1, 1, "", "from_h5"], [11, 1, 1, "", "from_module"], [11, 1, 1, "", "from_modules"], [11, 1, 1, "", "from_namedtuple"], [11, 1, 1, "", "from_pytree"], [11, 1, 1, "", "from_remote_init"], [11, 1, 1, "", "from_struct_array"], [11, 1, 1, "", "from_tuple"], [11, 1, 1, "", "fromkeys"], [11, 1, 1, "", "gather"], [11, 1, 1, "", "gather_and_stack"], [11, 1, 1, "", "get"], [11, 1, 1, "", "get_at"], [11, 1, 1, "", "get_item_shape"], [11, 1, 1, "", "get_non_tensor"], [11, 2, 1, "", "grad"], [11, 1, 1, "", "half"], [11, 1, 1, "", "init_remote"], [11, 1, 1, "", "int"], [11, 1, 1, "", "int16"], [11, 1, 1, "", "int32"], [11, 1, 1, "", "int64"], [11, 1, 1, "", "int8"], [11, 1, 1, "", "irecv"], [11, 1, 1, "", "is_consolidated"], [11, 1, 1, "", "is_contiguous"], [11, 1, 1, "", "is_empty"], [11, 1, 1, "", "is_memmap"], [11, 1, 1, "", "is_shared"], [11, 1, 1, "", "isend"], [11, 1, 1, "", "isfinite"], [11, 1, 1, "", "isnan"], [11, 1, 1, "", "isneginf"], [11, 1, 1, "", "isposinf"], [11, 1, 1, "", "isreal"], [11, 1, 1, "", "items"], [11, 1, 1, "", "keys"], [11, 1, 1, "", "lazy_stack"], [11, 1, 1, "", "lerp"], [11, 1, 1, "", "lerp_"], [11, 1, 1, "", "lgamma"], [11, 1, 1, "", "lgamma_"], [11, 1, 1, "", "load"], [11, 1, 1, "", "load_"], [11, 1, 1, "", "load_memmap"], [11, 1, 1, "", "load_memmap_"], [11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "lock_"], [11, 1, 1, "", "log"], [11, 1, 1, "", "log10"], [11, 1, 1, "", "log10_"], [11, 1, 1, "", "log1p"], [11, 1, 1, "", "log1p_"], [11, 1, 1, "", "log2"], [11, 1, 1, "", "log2_"], [11, 1, 1, "", "log_"], [11, 1, 1, "", "logical_and"], [11, 1, 1, "", "logsumexp"], [11, 1, 1, "", "make_memmap"], [11, 1, 1, "", "make_memmap_from_storage"], [11, 1, 1, "", "make_memmap_from_tensor"], [11, 1, 1, "", "map"], [11, 1, 1, "", "map_iter"], [11, 1, 1, "", "masked_fill"], [11, 1, 1, "", "masked_fill_"], [11, 1, 1, "", "masked_select"], [11, 1, 1, "", "max"], [11, 1, 1, "", "maximum"], [11, 1, 1, "", "maximum_"], [11, 1, 1, "", "maybe_dense_stack"], [11, 1, 1, "", "mean"], [11, 1, 1, "", "memmap"], [11, 1, 1, "", "memmap_"], [11, 1, 1, "", "memmap_like"], [11, 1, 1, "", "memmap_refresh_"], [11, 1, 1, "", "min"], [11, 1, 1, "", "minimum"], [11, 1, 1, "", "minimum_"], [11, 1, 1, "", "mul"], [11, 1, 1, "", "mul_"], [11, 1, 1, "", "named_apply"], [11, 2, 1, "", "names"], [11, 1, 1, "", "nanmean"], [11, 1, 1, "", "nansum"], [11, 2, 1, "", "ndim"], [11, 1, 1, "", "ndimension"], [11, 1, 1, "", "neg"], [11, 1, 1, "", "neg_"], [11, 1, 1, "", "new_empty"], [11, 1, 1, "", "new_full"], [11, 1, 1, "", "new_ones"], [11, 1, 1, "", "new_tensor"], [11, 1, 1, "", "new_zeros"], [11, 1, 1, "", "non_tensor_items"], [11, 1, 1, "", "norm"], [11, 1, 1, "", "numel"], [11, 1, 1, "", "numpy"], [11, 1, 1, "", "param_count"], [11, 1, 1, "", "permute"], [11, 1, 1, "", "pin_memory"], [11, 1, 1, "", "pin_memory_"], [11, 1, 1, "", "pop"], [11, 1, 1, "", "popitem"], [11, 1, 1, "", "pow"], [11, 1, 1, "", "pow_"], [11, 1, 1, "", "prod"], [11, 1, 1, "", "qint32"], [11, 1, 1, "", "qint8"], [11, 1, 1, "", "quint4x2"], [11, 1, 1, "", "quint8"], [11, 1, 1, "", "reciprocal"], [11, 1, 1, "", "reciprocal_"], [11, 1, 1, "", "record_stream"], [11, 1, 1, "", "recv"], [11, 1, 1, "", "reduce"], [11, 1, 1, "", "refine_names"], [11, 1, 1, "", "rename"], [11, 1, 1, "", "rename_"], [11, 1, 1, "", "rename_key_"], [11, 1, 1, "", "repeat"], [11, 1, 1, "", "repeat_interleave"], [11, 1, 1, "", "replace"], [11, 1, 1, "", "requires_grad_"], [11, 1, 1, "", "reshape"], [11, 1, 1, "", "round"], [11, 1, 1, "", "round_"], [11, 1, 1, "", "rsub"], [11, 1, 1, "", "save"], [11, 2, 1, "", "saved_path"], [11, 1, 1, "", "select"], [11, 1, 1, "", "send"], [11, 1, 1, "", "separates"], [11, 1, 1, "", "set"], [11, 1, 1, "", "set_"], [11, 1, 1, "", "set_at_"], [11, 1, 1, "", "set_non_tensor"], [11, 1, 1, "", "setdefault"], [11, 2, 1, "", "shape"], [11, 1, 1, "", "share_memory_"], [11, 1, 1, "", "sigmoid"], [11, 1, 1, "", "sigmoid_"], [11, 1, 1, "", "sign"], [11, 1, 1, "", "sign_"], [11, 1, 1, "", "sin"], [11, 1, 1, "", "sin_"], [11, 1, 1, "", "sinh"], [11, 1, 1, "", "sinh_"], [11, 1, 1, "", "size"], [11, 1, 1, "", "softmax"], [11, 2, 1, "", "sorted_keys"], [11, 1, 1, "", "split"], [11, 1, 1, "", "split_keys"], [11, 1, 1, "", "sqrt"], [11, 1, 1, "", "sqrt_"], [11, 1, 1, "", "squeeze"], [11, 1, 1, "", "stack"], [11, 1, 1, "", "stack_from_tensordict"], [11, 1, 1, "", "stack_tensors"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "std"], [11, 1, 1, "", "sub"], [11, 1, 1, "", "sub_"], [11, 1, 1, "", "sum"], [11, 1, 1, "", "tan"], [11, 1, 1, "", "tan_"], [11, 1, 1, "", "tanh"], [11, 1, 1, "", "tanh_"], [11, 1, 1, "", "to"], [11, 1, 1, "", "to_dict"], [11, 1, 1, "", "to_h5"], [11, 1, 1, "", "to_module"], [11, 1, 1, "", "to_namedtuple"], [11, 1, 1, "", "to_padded_tensor"], [11, 1, 1, "", "to_pytree"], [11, 1, 1, "", "to_struct_array"], [11, 1, 1, "", "to_tensordict"], [11, 1, 1, "", "tolist"], [11, 1, 1, "", "transpose"], [11, 1, 1, "", "trunc"], [11, 1, 1, "", "trunc_"], [11, 1, 1, "", "type"], [11, 1, 1, "", "uint16"], [11, 1, 1, "", "uint32"], [11, 1, 1, "", "uint64"], [11, 1, 1, "", "uint8"], [11, 1, 1, "", "unbind"], [11, 1, 1, "", "unflatten"], [11, 1, 1, "", "unflatten_keys"], [11, 1, 1, "", "unlock_"], [11, 1, 1, "", "unsqueeze"], [11, 1, 1, "", "update"], [11, 1, 1, "", "update_"], [11, 1, 1, "", "update_at_"], [11, 1, 1, "", "values"], [11, 1, 1, "", "var"], [11, 1, 1, "", "view"], [11, 1, 1, "", "where"], [11, 1, 1, "", "zero_"], [11, 1, 1, "", "zero_grad"]], "tensordict.TensorDictParams": [[12, 1, 1, "", "abs"], [12, 1, 1, "", "abs_"], [12, 1, 1, "", "acos"], [12, 1, 1, "", "acos_"], [12, 1, 1, "", "add"], [12, 1, 1, "", "add_"], [12, 1, 1, "", "add_module"], [12, 1, 1, "", "addcdiv"], [12, 1, 1, "", "addcdiv_"], [12, 1, 1, "", "addcmul"], [12, 1, 1, "", "addcmul_"], [12, 1, 1, "", "all"], [12, 1, 1, "", "amax"], [12, 1, 1, "", "amin"], [12, 1, 1, "", "any"], [12, 1, 1, "", "apply"], [12, 1, 1, "", "apply_"], [12, 1, 1, "", "asin"], [12, 1, 1, "", "asin_"], [12, 1, 1, "", "atan"], [12, 1, 1, "", "atan_"], [12, 1, 1, "", "auto_batch_size_"], [12, 1, 1, "", "auto_device_"], [12, 2, 1, "", "batch_dims"], [12, 2, 1, "", "batch_size"], [12, 1, 1, "", "bfloat16"], [12, 1, 1, "", "bitwise_and"], [12, 1, 1, "", "bool"], [12, 1, 1, "", "buffers"], [12, 1, 1, "", "bytes"], [12, 1, 1, "", "cat"], [12, 1, 1, "", "cat_from_tensordict"], [12, 1, 1, "", "cat_tensors"], [12, 1, 1, "", "ceil"], [12, 1, 1, "", "ceil_"], [12, 1, 1, "", "children"], [12, 1, 1, "", "chunk"], [12, 1, 1, "", "clamp"], [12, 1, 1, "", "clamp_max"], [12, 1, 1, "", "clamp_max_"], [12, 1, 1, "", "clamp_min"], [12, 1, 1, "", "clamp_min_"], [12, 1, 1, "", "clear"], [12, 1, 1, "", "clear_device_"], [12, 1, 1, "", "clear_refs_for_compile_"], [12, 1, 1, "", "clone"], [12, 1, 1, "", "compile"], [12, 1, 1, "", "complex128"], [12, 1, 1, "", "complex32"], [12, 1, 1, "", "complex64"], [12, 1, 1, "", "consolidate"], [12, 1, 1, "", "contiguous"], [12, 1, 1, "", "copy"], [12, 1, 1, "", "copy_"], [12, 1, 1, "", "copy_at_"], [12, 1, 1, "", "cos"], [12, 1, 1, "", "cos_"], [12, 1, 1, "", "cosh"], [12, 1, 1, "", "cosh_"], [12, 1, 1, "", "cpu"], [12, 1, 1, "", "create_nested"], [12, 1, 1, "", "cuda"], [12, 1, 1, "", "cummax"], [12, 1, 1, "", "cummin"], [12, 2, 1, "", "data"], [12, 1, 1, "", "data_ptr"], [12, 1, 1, "", "del_"], [12, 1, 1, "", "densify"], [12, 2, 1, "", "depth"], [12, 1, 1, "", "detach"], [12, 1, 1, "", "detach_"], [12, 2, 1, "", "device"], [12, 1, 1, "", "dim"], [12, 1, 1, "", "div"], [12, 1, 1, "", "div_"], [12, 1, 1, "", "double"], [12, 2, 1, "", "dtype"], [12, 1, 1, "", "dumps"], [12, 1, 1, "", "empty"], [12, 1, 1, "", "entry_class"], [12, 1, 1, "", "erf"], [12, 1, 1, "", "erf_"], [12, 1, 1, "", "erfc"], [12, 1, 1, "", "erfc_"], [12, 1, 1, "", "eval"], [12, 1, 1, "", "exclude"], [12, 1, 1, "", "exp"], [12, 1, 1, "", "exp_"], [12, 1, 1, "", "expand"], [12, 1, 1, "", "expand_as"], [12, 1, 1, "", "expm1"], [12, 1, 1, "", "expm1_"], [12, 1, 1, "", "extra_repr"], [12, 1, 1, "", "fill_"], [12, 1, 1, "", "filter_empty_"], [12, 1, 1, "", "filter_non_tensor_data"], [12, 1, 1, "", "flatten"], [12, 1, 1, "", "flatten_keys"], [12, 1, 1, "", "float"], [12, 1, 1, "", "float16"], [12, 1, 1, "", "float32"], [12, 1, 1, "", "float64"], [12, 1, 1, "", "floor"], [12, 1, 1, "", "floor_"], [12, 1, 1, "", "forward"], [12, 1, 1, "", "frac"], [12, 1, 1, "", "frac_"], [12, 1, 1, "", "from_any"], [12, 1, 1, "", "from_dataclass"], [12, 1, 1, "", "from_dict"], [12, 1, 1, "", "from_dict_instance"], [12, 1, 1, "", "from_h5"], [12, 1, 1, "", "from_module"], [12, 1, 1, "", "from_modules"], [12, 1, 1, "", "from_namedtuple"], [12, 1, 1, "", "from_pytree"], [12, 1, 1, "", "from_remote_init"], [12, 1, 1, "", "from_struct_array"], [12, 1, 1, "", "from_tuple"], [12, 1, 1, "", "fromkeys"], [12, 1, 1, "", "gather"], [12, 1, 1, "", "gather_and_stack"], [12, 1, 1, "", "get"], [12, 1, 1, "", "get_at"], [12, 1, 1, "", "get_buffer"], [12, 1, 1, "", "get_extra_state"], [12, 1, 1, "", "get_item_shape"], [12, 1, 1, "", "get_non_tensor"], [12, 1, 1, "", "get_parameter"], [12, 1, 1, "", "get_submodule"], [12, 2, 1, "", "grad"], [12, 1, 1, "", "half"], [12, 1, 1, "", "init_remote"], [12, 1, 1, "", "int"], [12, 1, 1, "", "int16"], [12, 1, 1, "", "int32"], [12, 1, 1, "", "int64"], [12, 1, 1, "", "int8"], [12, 1, 1, "", "ipu"], [12, 1, 1, "", "irecv"], [12, 1, 1, "", "is_consolidated"], [12, 1, 1, "", "is_contiguous"], [12, 1, 1, "", "is_empty"], [12, 2, 1, "", "is_memmap"], [12, 2, 1, "", "is_shared"], [12, 1, 1, "", "isend"], [12, 1, 1, "", "isfinite"], [12, 1, 1, "", "isnan"], [12, 1, 1, "", "isneginf"], [12, 1, 1, "", "isposinf"], [12, 1, 1, "", "isreal"], [12, 1, 1, "", "items"], [12, 1, 1, "", "keys"], [12, 1, 1, "", "lazy_stack"], [12, 1, 1, "", "lerp"], [12, 1, 1, "", "lerp_"], [12, 1, 1, "", "lgamma"], [12, 1, 1, "", "lgamma_"], [12, 1, 1, "", "load"], [12, 1, 1, "", "load_"], [12, 1, 1, "", "load_memmap"], [12, 1, 1, "", "load_memmap_"], [12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "lock_"], [12, 1, 1, "", "log"], [12, 1, 1, "", "log10"], [12, 1, 1, "", "log10_"], [12, 1, 1, "", "log1p"], [12, 1, 1, "", "log1p_"], [12, 1, 1, "", "log2"], [12, 1, 1, "", "log2_"], [12, 1, 1, "", "log_"], [12, 1, 1, "", "logical_and"], [12, 1, 1, "", "logsumexp"], [12, 1, 1, "", "make_memmap"], [12, 1, 1, "", "make_memmap_from_storage"], [12, 1, 1, "", "make_memmap_from_tensor"], [12, 1, 1, "", "map"], [12, 1, 1, "", "map_iter"], [12, 1, 1, "", "masked_fill"], [12, 1, 1, "", "masked_fill_"], [12, 1, 1, "", "masked_select"], [12, 1, 1, "", "max"], [12, 1, 1, "", "maximum"], [12, 1, 1, "", "maximum_"], [12, 1, 1, "", "maybe_dense_stack"], [12, 1, 1, "", "mean"], [12, 1, 1, "", "memmap"], [12, 1, 1, "", "memmap_"], [12, 1, 1, "", "memmap_like"], [12, 1, 1, "", "memmap_refresh_"], [12, 1, 1, "", "min"], [12, 1, 1, "", "minimum"], [12, 1, 1, "", "minimum_"], [12, 1, 1, "", "modules"], [12, 1, 1, "", "mtia"], [12, 1, 1, "", "mul"], [12, 1, 1, "", "mul_"], [12, 1, 1, "", "named_apply"], [12, 1, 1, "", "named_buffers"], [12, 1, 1, "", "named_children"], [12, 1, 1, "", "named_modules"], [12, 1, 1, "", "named_parameters"], [12, 2, 1, "", "names"], [12, 1, 1, "", "nanmean"], [12, 1, 1, "", "nansum"], [12, 2, 1, "", "ndim"], [12, 1, 1, "", "ndimension"], [12, 1, 1, "", "neg"], [12, 1, 1, "", "neg_"], [12, 1, 1, "", "new_empty"], [12, 1, 1, "", "new_full"], [12, 1, 1, "", "new_ones"], [12, 1, 1, "", "new_tensor"], [12, 1, 1, "", "new_zeros"], [12, 1, 1, "", "non_tensor_items"], [12, 1, 1, "", "norm"], [12, 1, 1, "", "numel"], [12, 1, 1, "", "numpy"], [12, 1, 1, "", "param_count"], [12, 1, 1, "", "parameters"], [12, 1, 1, "", "permute"], [12, 1, 1, "", "pin_memory"], [12, 1, 1, "", "pin_memory_"], [12, 1, 1, "", "pop"], [12, 1, 1, "", "popitem"], [12, 1, 1, "", "pow"], [12, 1, 1, "", "pow_"], [12, 1, 1, "", "prod"], [12, 1, 1, "", "qint32"], [12, 1, 1, "", "qint8"], [12, 1, 1, "", "quint4x2"], [12, 1, 1, "", "quint8"], [12, 1, 1, "", "reciprocal"], [12, 1, 1, "", "reciprocal_"], [12, 1, 1, "", "record_stream"], [12, 1, 1, "", "recv"], [12, 1, 1, "", "reduce"], [12, 1, 1, "", "refine_names"], [12, 1, 1, "", "register_backward_hook"], [12, 1, 1, "", "register_buffer"], [12, 1, 1, "", "register_forward_hook"], [12, 1, 1, "", "register_forward_pre_hook"], [12, 1, 1, "", "register_full_backward_hook"], [12, 1, 1, "", "register_full_backward_pre_hook"], [12, 1, 1, "", "register_get_post_hook"], [12, 1, 1, "", "register_load_state_dict_post_hook"], [12, 1, 1, "", "register_load_state_dict_pre_hook"], [12, 1, 1, "", "register_module"], [12, 1, 1, "", "register_parameter"], [12, 1, 1, "", "register_state_dict_post_hook"], [12, 1, 1, "", "register_state_dict_pre_hook"], [12, 1, 1, "", "rename"], [12, 1, 1, "", "rename_"], [12, 1, 1, "", "rename_key_"], [12, 1, 1, "", "repeat"], [12, 1, 1, "", "repeat_interleave"], [12, 1, 1, "", "replace"], [12, 1, 1, "", "requires_grad_"], [12, 1, 1, "", "reshape"], [12, 1, 1, "", "round"], [12, 1, 1, "", "round_"], [12, 1, 1, "", "rsub"], [12, 1, 1, "", "save"], [12, 2, 1, "", "saved_path"], [12, 1, 1, "", "select"], [12, 1, 1, "", "send"], [12, 1, 1, "", "separates"], [12, 1, 1, "", "set"], [12, 1, 1, "", "set_"], [12, 1, 1, "", "set_at_"], [12, 1, 1, "", "set_extra_state"], [12, 1, 1, "", "set_non_tensor"], [12, 1, 1, "", "set_submodule"], [12, 1, 1, "", "setdefault"], [12, 2, 1, "", "shape"], [12, 1, 1, "", "share_memory"], [12, 1, 1, "", "share_memory_"], [12, 1, 1, "", "sigmoid"], [12, 1, 1, "", "sigmoid_"], [12, 1, 1, "", "sign"], [12, 1, 1, "", "sign_"], [12, 1, 1, "", "sin"], [12, 1, 1, "", "sin_"], [12, 1, 1, "", "sinh"], [12, 1, 1, "", "sinh_"], [12, 1, 1, "", "size"], [12, 1, 1, "", "softmax"], [12, 2, 1, "", "sorted_keys"], [12, 1, 1, "", "split"], [12, 1, 1, "", "split_keys"], [12, 1, 1, "", "sqrt"], [12, 1, 1, "", "sqrt_"], [12, 1, 1, "", "squeeze"], [12, 1, 1, "", "stack"], [12, 1, 1, "", "stack_from_tensordict"], [12, 1, 1, "", "stack_tensors"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "std"], [12, 1, 1, "", "sub"], [12, 1, 1, "", "sub_"], [12, 1, 1, "", "sum"], [12, 1, 1, "", "tan"], [12, 1, 1, "", "tan_"], [12, 1, 1, "", "tanh"], [12, 1, 1, "", "tanh_"], [12, 1, 1, "", "to"], [12, 1, 1, "", "to_dict"], [12, 1, 1, "", "to_empty"], [12, 1, 1, "", "to_h5"], [12, 1, 1, "", "to_module"], [12, 1, 1, "", "to_namedtuple"], [12, 1, 1, "", "to_padded_tensor"], [12, 1, 1, "", "to_pytree"], [12, 1, 1, "", "to_struct_array"], [12, 1, 1, "", "to_tensordict"], [12, 1, 1, "", "tolist"], [12, 1, 1, "", "train"], [12, 1, 1, "", "transpose"], [12, 1, 1, "", "trunc"], [12, 1, 1, "", "trunc_"], [12, 1, 1, "", "type"], [12, 1, 1, "", "uint16"], [12, 1, 1, "", "uint32"], [12, 1, 1, "", "uint64"], [12, 1, 1, "", "uint8"], [12, 1, 1, "", "unbind"], [12, 1, 1, "", "unflatten"], [12, 1, 1, "", "unflatten_keys"], [12, 1, 1, "", "unlock_"], [12, 1, 1, "", "unsqueeze"], [12, 1, 1, "", "update"], [12, 1, 1, "", "update_"], [12, 1, 1, "", "update_at_"], [12, 1, 1, "", "values"], [12, 1, 1, "", "var"], [12, 1, 1, "", "view"], [12, 1, 1, "", "where"], [12, 1, 1, "", "xpu"], [12, 1, 1, "", "zero_"], [12, 1, 1, "", "zero_grad"]], "tensordict.nn": [[42, 0, 1, "", "CudaGraphModule"], [43, 0, 1, "", "EnsembleModule"], [44, 0, 1, "", "ProbabilisticTensorDictModule"], [45, 0, 1, "", "ProbabilisticTensorDictSequential"], [46, 0, 1, "", "TensorDictModule"], [47, 0, 1, "", "TensorDictModuleBase"], [48, 0, 1, "", "TensorDictModuleWrapper"], [49, 0, 1, "", "TensorDictSequential"], [50, 0, 1, "", "WrapModule"], [51, 0, 1, "", "as_tensordict_module"], [52, 0, 1, "", "biased_softplus"], [53, 0, 1, "", "composite_lp_aggregate"], [54, 0, 1, "", "dispatch"], [61, 4, 1, "", "inv_softplus"], [62, 4, 1, "", "make_tensordict"], [63, 4, 1, "", "rand_one_hot"], [64, 0, 1, "", "set_composite_lp_aggregate"], [65, 0, 1, "", "set_skip_existing"], [66, 4, 1, "", "skip_existing"]], "tensordict.nn.ProbabilisticTensorDictModule": [[44, 1, 1, "", "build_dist_from_params"], [44, 2, 1, "", "dist_params_keys"], [44, 2, 1, "", "dist_sample_keys"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_dist"], [44, 1, 1, "", "log_prob"]], "tensordict.nn.ProbabilisticTensorDictSequential": [[45, 1, 1, "", "build_dist_from_params"], [45, 2, 1, "", "default_interaction_type"], [45, 2, 1, "", "dist_params_keys"], [45, 2, 1, "", "dist_sample_keys"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_dist"], [45, 1, 1, "", "get_dist_params"], [45, 1, 1, "", "log_prob"]], "tensordict.nn.TensorDictModule": [[46, 1, 1, "", "forward"]], "tensordict.nn.TensorDictModuleBase": [[47, 1, 1, "", "is_tdmodule_compatible"], [47, 1, 1, "", "reset_out_keys"], [47, 1, 1, "", "reset_parameters_recursive"], [47, 1, 1, "", "select_out_keys"]], "tensordict.nn.TensorDictModuleWrapper": [[48, 1, 1, "", "forward"]], "tensordict.nn.TensorDictSequential": [[49, 1, 1, "", "forward"], [49, 1, 1, "", "reset_out_keys"], [49, 1, 1, "", "select_out_keys"], [49, 1, 1, "", "select_subsequence"]], "tensordict.nn.WrapModule": [[50, 1, 1, "", "forward"]], "tensordict.nn.distributions": [[55, 0, 1, "", "AddStateIndependentNormalScale"], [56, 0, 1, "", "CompositeDistribution"], [57, 0, 1, "", "Delta"], [58, 0, 1, "", "NormalParamExtractor"], [59, 0, 1, "", "OneHotCategorical"], [60, 0, 1, "", "TruncatedNormal"]], "tensordict.utils": [[76, 0, 1, "", "expand_as_right"], [77, 0, 1, "", "expand_right"], [78, 0, 1, "", "isin"], [79, 0, 1, "", "remove_duplicates"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"tensordict": [0, 2, 3, 10, 43, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 81, 83, 84, 86, 87, 90, 93, 94, 95, 96, 97], "distribut": [0, 55, 56, 57, 58, 59, 60, 81, 95], "set": [0, 93, 98], "creat": [0, 3], "memori": [0, 83, 84, 94, 96], "map": [0, 83, 84, 94], "oper": [0, 3, 83], "tensor": [0, 3, 83, 94], "across": 0, "node": 0, "trace": 1, "tensordictmodul": [1, 3, 46, 81, 87, 95], "tensordictsequenti": [1, 49], "welcom": 2, "document": 2, "instal": 2, "tutori": 2, "basic": 2, "nn": [2, 43, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 81], "dataload": [2, 86, 91], "content": [2, 93], "indic": 2, "tabl": 2, "overview": 3, "motiv": 3, "featur": 3, "escap": 3, "shape": [3, 97], "non": 3, "data": [3, 90, 92], "access": 3, "batch": [3, 92, 97], "stack": [3, 74, 90, 95, 97], "name": 3, "dimens": [3, 97], "nest": [3, 87, 93], "lazi": 3, "evalu": 3, "pre": [3, 96], "alloc": [3, 96], "lazystackedtensordict": 4, "memorymappedtensor": [5, 84], "nontensordata": 6, "nontensorstack": 7, "persistenttensordict": 8, "tensorclass": [9, 75, 82, 84, 91, 92], "tensordictbas": 11, "tensordictparam": 12, "capture_non_tensor_stack": 13, "cat": 14, "default_is_leaf": 15, "dense_stack_td": 16, "from_ani": 17, "from_consolid": 18, "from_dataclass": 19, "from_dict": 20, "from_h5": 21, "from_modul": [22, 23], "from_namedtupl": 24, "from_pytre": 25, "from_struct_arrai": 26, "from_tupl": 27, "fromkei": 28, "get_defaults_to_non": 29, "is_batchedtensor": 30, "is_leaf_nontensor": 31, "is_tensor_collect": 32, "lazy_legaci": 33, "lazy_stack": 34, "list_to_stack": 35, "load": [36, 84, 92], "load_memmap": 37, "make_tensordict": [38, 62], "maybe_dense_stack": 39, "memmap": 40, "merge_tensordict": 41, "cudagraphmodul": 42, "ensemblemodul": 43, "probabilistictensordictmodul": [44, 95], "probabilistictensordictsequenti": 45, "tensordictmodulebas": 47, "tensordictmodulewrapp": 48, "wrapmodul": 50, "as_tensordict_modul": 51, "biased_softplu": 52, "composite_lp_aggreg": 53, "dispatch": 54, "addstateindependentnormalscal": 55, "compositedistribut": 56, "delta": 57, "normalparamextractor": 58, "onehotcategor": 59, "truncatednorm": 60, "inv_softplu": 61, "rand_one_hot": 63, "set_composite_lp_aggreg": 64, "set_skip_exist": 65, "skip_exist": 66, "pad": 67, "pad_sequ": 68, "parse_tensor_dict_str": 69, "save": [70, 84, 87], "set_capture_non_tensor_stack": 71, "set_lazy_legaci": 72, "set_list_to_stack": 73, "expand_as_right": 76, "expand_right": 77, "isin": 78, "remove_dupl": 79, "api": 80, "refer": 80, "packag": [81, 83], "ensembl": 81, "compil": 81, "util": [81, 83], "serial": 82, "edg": 82, "case": [82, 84], "auto": 82, "cast": 82, "constructor": 83, "handler": 83, "context": 83, "manag": [83, 94], "pointwis": 83, "support": [83, 95], "perform": 83, "exampl": [83, 95], "1": 83, "2": 83, "3": 83, "scalar": 83, "broadcast": 83, "rule": 83, "effici": 83, "handl": [83, 84], "miss": 83, "entri": 83, "object": 84, "memmori": 84, "exist": [84, 93], "torchsnapshot": 84, "compat": 84, "gener": 84, "us": [84, 86, 87, 91, 95, 97], "big": 84, "dataset": [84, 86, 91], "comput": [85, 89], "time": [85, 89], "model": [86, 87, 91], "optim": [86, 91], "paramet": [86, 91], "export": 87, "modul": [87, 95], "prerequisit": 87, "kei": [87, 93, 95], "learn": 87, "design": 87, "torch": 87, "work": [87, 95], "select": [87, 93], "output": 87, "control": 87, "sampl": 87, "strategi": 87, "next": 87, "step": 87, "further": 87, "read": 87, "readm": 88, "tuto": 88, "build": 90, "from": 90, "stream": 90, "heterogen": 90, "togeth": 90, "asynchron": 90, "conclus": [90, 95], "manipul": [93, 97], "get": 93, "renam": 93, "updat": 93, "multipl": [93, 95], "valu": [93, 97, 98], "iter": 93, "over": 93, "s": [93, 95], "check": 93, "flatten": 93, "unflatten": 93, "exclud": 93, "simplifi": 94, "pytorch": 94, "devic": 94, "simpl": 95, "code": 95, "recurr": 95, "layer": 95, "callabl": 95, "input": 95, "without": 95, "runtim": 95, "do": 95, "don": 95, "t": 95, "index": [97, 98], "reshap": 97, "split": 97, "unbind": 97, "concaten": 97, "expand": 97, "squeez": 97, "unsqueez": 97, "view": 97, "permut": 97, "decor": 97, "gather": 97, "slice": 98, "mask": 98}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})