name: Build M1 Wheels (Simple)

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
    tags:
        # NOTE: Binary build pipelines should only get triggered on release candidate builds
        # Release candidate tags look like: v1.11.0-rc1
        - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-wheel-m1:
    runs-on: macos-m1-stable
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Checkout tensordict
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      
      - name: Install system dependencies
        run: |
          brew install cmake
      
      - name: Install PyTorch nightly
        run: |
          python3 -c "import sys; print(sys.version)"
          python3 -m pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu
      
      - name: Build tensordict wheel
        run: |
          rm -rf dist || true
          python3 -m pip install --upgrade pip
          python3 -m pip install "pybind11[global]" build
          
          # Set version
          export TENSORDICT_BUILD_VERSION=0.9.0
          export SETUPTOOLS_SCM_PRETEND_VERSION=$TENSORDICT_BUILD_VERSION
          export MACOSX_DEPLOYMENT_TARGET=15.0
          
          # Build wheel
          python3 -m build --wheel
      
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: tensordict-m1-${{ matrix.python_version }}.whl
          path: dist/*.whl

  test-wheel-m1:
    needs: build-wheel-m1
    runs-on: macos-m1-stable
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      
      - name: Checkout tensordict
        uses: actions/checkout@v4
      
      - name: Install PyTorch nightly
        run: |
          python3 -m pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu
      
      - name: Install test dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install numpy pytest pillow>=4.1.1 scipy networkx expecttest pyyaml
      
      - name: Download built wheel
        uses: actions/download-artifact@v4
        with:
          name: tensordict-m1-${{ matrix.python_version }}.whl
          path: /tmp/wheels
      
      - name: Install built wheel
        run: |
          python3 -m pip install /tmp/wheels/*
      
      - name: Run smoke test
        run: |
          # Avoid ambiguity by removing source files
          rm -rf tensordict/
          python3 -c "import tensordict; print('tensordict version:', tensordict.__version__)"
          python3 test/smoke_test.py 