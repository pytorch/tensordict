name: Wheels
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - release/0.0.2a

jobs:
  build-wheel:
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python:
          - version: "3.7"
            tag: py37
          - version: "3.8"
            tag: py38
          - version: "3.9"
            tag: py39
          - version: "3.10"
            tag: py310
    steps:
      - name: Checkout tensordict
        uses: actions/checkout@v2
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: build_binary
          python-version: ${{ matrix.python.version }}
      - name: Check Python version
        run: |
          python --version
      - name: Install PyTorch
        run: |
          python -m pip install torch
          python -m pip install "git+https://github.com/pytorch/functorch.git@release/0.2"
      - name: Build wheel
        run: |
          python -m pip install wheel
          BUILD_VERSION=0.0.2a python setup.py bdist_wheel
      - name: Upload wheel for the test-wheel job
        uses: actions/upload-artifact@v2
        with:
          name: tensordict-${{ matrix.python.tag }}.whl
          path: dist/tensordict-*.whl

  test-wheel:
    needs: build-wheel
    strategy:
      matrix:
        os: ["ubuntu-18.04", "macos-latest"]
        python:
          - version: "3.7"
            tag: py37
          - version: "3.8"
            tag: py38
          - version: "3.9"
            tag: py39
          - version: "3.10"
            tag: py310
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Tensordict
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}
          architecture: x64
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      - name: Install PyTorch
        run: |
          python -m pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cpu
          python -m pip install "git+https://github.com/pytorch/functorch.git@release/0.2"
      - name: Install test dependencies
        run: |
          python -m pip install numpy pytest pytest-cov codecov unittest-xml-reporting pillow>=4.1.1 scipy av networkx expecttest pyyaml
      - name: Download built wheels
        uses: actions/download-artifact@v2
        with:
          name: tensordict-${{ matrix.python.tag }}.whl
          path: /tmp/wheels
      - name: Install built wheels
        run: |
          python -m pip install /tmp/wheels/*
      - name: Log version string
        run: |
          # Avoid ambiguity of "import tensordict" by deleting the source files.
          rm -rf tensordict/
          python -c "import tensordict; print(tensordict.__version__)"
      - name: Run tests
        run: |
          set -e
          export IN_CI=1
          mkdir test-reports
          python -m torch.utils.collect_env
          python -c "import tensordict; print(tensordict.__version__)"
          EXIT_STATUS=0
          pytest test/smoke_test.py -v --durations 20
          exit $EXIT_STATUS
